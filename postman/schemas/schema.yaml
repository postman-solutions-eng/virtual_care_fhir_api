openapi: 3.0.0
info:
  title: Fast Healthcare Interoperability Resources (FHIR)
  description: "Fast Healthcare Interoperability Resources (FHIR, pronounced \"Fire\") defines a set of \"Resources\" that represent granular clinical concepts. The resources can be managed in isolation, or aggregated into complex documents. Technically, FHIR is designed for the web; the resources are based on simple XML or JSON structures, with an http-based RESTful protocol where each resource has predictable URL. Where possible, open internet standards are used for data representation. \n"
  contact: {}
  version: v4.0.1
servers:
- url: https://stu3.test.pyrohealth.net/fhir
  variables: {}
paths:
  /Account:
    post:
      tags:
      - Account
      summary: Account
      operationId: Account
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Account
      summary: Account
      operationId: Account
      parameters:
      - name: owner
        in: query
        description: Who is responsible?
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: What is account tied to?
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: What is account tied to?
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: balance
        in: query
        description: How much is in account?
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: identifier
        in: query
        description: Account number
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Human-readable label
        style: form
        explode: true
        schema:
          type: string
      - name: period
        in: query
        description: Transaction window
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: status
        in: query
        description: active | inactive | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: E.g. patient, expense, depreciation
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
                description: Success
      deprecated: false
  /Account/{id}:
    get:
      tags:
      - Account
      summary: AccountById
      operationId: AccountById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
    put:
      tags:
      - Account
      summary: AccountById
      operationId: AccountById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Account
      summary: AccountById
      operationId: AccountById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Account/{id}/_history:
    get:
      tags:
      - Account
      summary: AccountHistoryById
      operationId: AccountHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Account/_history:
    get:
      tags:
      - Account
      summary: AccountHistory
      operationId: AccountHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Account/{id}/_history/{vid}:
    get:
      tags:
      - Account
      summary: AccountHistoryByIdAndVid
      operationId: AccountHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
  /ActivityDefinition:
    post:
      tags:
      - ActivityDefinition
      summary: ActivityDefinition
      operationId: ActivityDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ActivityDefinition
      summary: ActivityDefinition
      operationId: ActivityDefinition
      parameters:
      - name: composed-of
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: depends-on
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: derived-from
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: predecessor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: successor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The activity definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the activity definition is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: topic
        in: query
        description: Topics associated with the module
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the activity definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ActivityDefinition/{id}:
    get:
      tags:
      - ActivityDefinition
      summary: ActivityDefinitionById
      operationId: ActivityDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - ActivityDefinition
      summary: ActivityDefinitionById
      operationId: ActivityDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ActivityDefinition
      summary: ActivityDefinitionById
      operationId: ActivityDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ActivityDefinition/{id}/_history:
    get:
      tags:
      - ActivityDefinition
      summary: ActivityDefinitionHistoryById
      operationId: ActivityDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ActivityDefinition/_history:
    get:
      tags:
      - ActivityDefinition
      summary: ActivityDefinitionHistory
      operationId: ActivityDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ActivityDefinition/{id}/_history/{vid}:
    get:
      tags:
      - ActivityDefinition
      summary: ActivityDefinitionHistoryByIdAndVid
      operationId: ActivityDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /AdverseEvent:
    post:
      tags:
      - AdverseEvent
      summary: AdverseEvent
      operationId: AdverseEvent
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - AdverseEvent
      summary: AdverseEvent
      operationId: AdverseEvent
      parameters:
      - name: location
        in: query
        description: Location where adverse event occurred
        style: form
        explode: true
        schema:
          type: string
      - name: reaction
        in: query
        description: Adverse Reaction Events linked to exposure to substance
        style: form
        explode: true
        schema:
          type: string
      - name: recorder
        in: query
        description: Who recorded the adverse event
        style: form
        explode: true
        schema:
          type: string
      - name: study
        in: query
        description: AdverseEvent.study
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Subject or group impacted by event
        style: form
        explode: true
        schema:
          type: string
      - name: substance
        in: query
        description: Refers to the specific entity that caused the adverse event
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: "AE | PAE \rAn adverse event is an event that caused harm to a patient,  an adverse reaction is a something that is a subject-specific event that is a result of an exposure to a medication, food, device or environmental substance, a potential adverse event is something that occurred and that could have caused harm to a patient but did not"
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: When the event occurred
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: seriousness
        in: query
        description: Mild | Moderate | Severe
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: actual | potential
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /AdverseEvent/{id}:
    get:
      tags:
      - AdverseEvent
      summary: AdverseEventById
      operationId: AdverseEventById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - AdverseEvent
      summary: AdverseEventById
      operationId: AdverseEventById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - AdverseEvent
      summary: AdverseEventById
      operationId: AdverseEventById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AdverseEvent/{id}/_history:
    get:
      tags:
      - AdverseEvent
      summary: AdverseEventHistoryById
      operationId: AdverseEventHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AdverseEvent/_history:
    get:
      tags:
      - AdverseEvent
      summary: AdverseEventHistory
      operationId: AdverseEventHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AdverseEvent/{id}/_history/{vid}:
    get:
      tags:
      - AdverseEvent
      summary: AdverseEventHistoryByIdAndVid
      operationId: AdverseEventHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /AllergyIntolerance:
    post:
      tags:
      - AllergyIntolerance
      summary: AllergyIntolerance
      operationId: AllergyIntolerance
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllergyIntolerance'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - AllergyIntolerance
      summary: AllergyIntolerance
      operationId: AllergyIntolerance
      parameters:
      - name: asserter
        in: query
        description: Source of the information about the allergy
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: recorder
        in: query
        description: Who recorded the sensitivity
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: food | medication | environment | biologic
        style: form
        explode: true
        schema:
          type: string
      - name: clinical-status
        in: query
        description: active | inactive | resolved
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: criticality
        in: query
        description: low | high | unable-to-assess
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: last-date
        in: query
        description: Date(/time) of last known occurrence of a reaction
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: manifestation
        in: query
        description: Clinical symptoms/signs associated with the Event
        style: form
        explode: true
        schema:
          type: string
      - name: onset
        in: query
        description: Date(/time) when manifestations showed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: route
        in: query
        description: How the subject was exposed to the substance
        style: form
        explode: true
        schema:
          type: string
      - name: severity
        in: query
        description: mild | moderate | severe (of event as a whole)
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)"
        style: form
        explode: true
        schema:
          type: string
      - name: verification-status
        in: query
        description: unconfirmed | confirmed | refuted | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllergyIntolerance'
                description: Success
      deprecated: false
  /AllergyIntolerance/{id}:
    get:
      tags:
      - AllergyIntolerance
      summary: AllergyIntoleranceById
      operationId: AllergyIntoleranceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntolerance'
      deprecated: false
    put:
      tags:
      - AllergyIntolerance
      summary: AllergyIntoleranceById
      operationId: AllergyIntoleranceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllergyIntolerance'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - AllergyIntolerance
      summary: AllergyIntoleranceById
      operationId: AllergyIntoleranceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AllergyIntolerance/{id}/_history:
    get:
      tags:
      - AllergyIntolerance
      summary: AllergyIntoleranceHistoryById
      operationId: AllergyIntoleranceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AllergyIntolerance/_history:
    get:
      tags:
      - AllergyIntolerance
      summary: AllergyIntoleranceHistory
      operationId: AllergyIntoleranceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AllergyIntolerance/{id}/_history/{vid}:
    get:
      tags:
      - AllergyIntolerance
      summary: AllergyIntoleranceHistoryByIdAndVid
      operationId: AllergyIntoleranceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntolerance'
      deprecated: false
  /Appointment:
    post:
      tags:
      - Appointment
      summary: Appointment
      operationId: Appointment
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Appointment
      summary: Appointment
      operationId: Appointment
      parameters:
      - name: actor
        in: query
        description: Any one of the individuals participating in the appointment
        style: form
        explode: true
        schema:
          type: string
      - name: incomingreferral
        in: query
        description: The ReferralRequest provided as information to allocate to the Encounter
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: This location is listed in the participants of the appointment
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: One of the individuals of the appointment is this patient
        style: form
        explode: true
        schema:
          type: string
      - name: practitioner
        in: query
        description: One of the individuals of the appointment is this practitioner
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: appointment-type
        in: query
        description: The style of appointment or patient that has been booked in the slot (not service type)
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: Appointment date/time.
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: An Identifier of the Appointment
        style: form
        explode: true
        schema:
          type: string
      - name: part-status
        in: query
        description: The Participation status of the subject, or other participant on the appointment. Can be used to locate participants that have not responded to meeting requests.
        style: form
        explode: true
        schema:
          type: string
      - name: service-type
        in: query
        description: The specific service that is to be performed during this appointment
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The overall status of the appointment
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
                description: Success
      deprecated: false
  /Appointment/{id}:
    get:
      tags:
      - Appointment
      summary: AppointmentById
      operationId: AppointmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
      deprecated: false
    put:
      tags:
      - Appointment
      summary: AppointmentById
      operationId: AppointmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Appointment
      summary: AppointmentById
      operationId: AppointmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Appointment/{id}/_history:
    get:
      tags:
      - Appointment
      summary: AppointmentHistoryById
      operationId: AppointmentHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Appointment/_history:
    get:
      tags:
      - Appointment
      summary: AppointmentHistory
      operationId: AppointmentHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Appointment/{id}/_history/{vid}:
    get:
      tags:
      - Appointment
      summary: AppointmentHistoryByIdAndVid
      operationId: AppointmentHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
      deprecated: false
  /AppointmentResponse:
    post:
      tags:
      - AppointmentResponse
      summary: AppointmentResponse
      operationId: AppointmentResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - AppointmentResponse
      summary: AppointmentResponse
      operationId: AppointmentResponse
      parameters:
      - name: actor
        in: query
        description: The Person, Location/HealthcareService or Device that this appointment response replies for
        style: form
        explode: true
        schema:
          type: string
      - name: appointment
        in: query
        description: The appointment that the response is attached to
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: This Response is for this Location
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: This Response is for this Patient
        style: form
        explode: true
        schema:
          type: string
      - name: practitioner
        in: query
        description: This Response is for this Practitioner
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: An Identifier in this appointment response
        style: form
        explode: true
        schema:
          type: string
      - name: part-status
        in: query
        description: The participants acceptance status for this appointment
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentResponse'
                description: Success
      deprecated: false
  /AppointmentResponse/{id}:
    get:
      tags:
      - AppointmentResponse
      summary: AppointmentResponseById
      operationId: AppointmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
      deprecated: false
    put:
      tags:
      - AppointmentResponse
      summary: AppointmentResponseById
      operationId: AppointmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - AppointmentResponse
      summary: AppointmentResponseById
      operationId: AppointmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AppointmentResponse/{id}/_history:
    get:
      tags:
      - AppointmentResponse
      summary: AppointmentResponseHistoryById
      operationId: AppointmentResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AppointmentResponse/_history:
    get:
      tags:
      - AppointmentResponse
      summary: AppointmentResponseHistory
      operationId: AppointmentResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AppointmentResponse/{id}/_history/{vid}:
    get:
      tags:
      - AppointmentResponse
      summary: AppointmentResponseHistoryByIdAndVid
      operationId: AppointmentResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
      deprecated: false
  /AuditEvent:
    post:
      tags:
      - AuditEvent
      summary: AuditEvent
      operationId: AuditEvent
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditEvent'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - AuditEvent
      summary: AuditEvent
      operationId: AuditEvent
      parameters:
      - name: agent
        in: query
        description: Direct reference to resource
        style: form
        explode: true
        schema:
          type: string
      - name: entity
        in: query
        description: Specific instance of resource
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Direct reference to resource
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: action
        in: query
        description: Type of action performed during the event
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: Identifier for the network access point of the user device
        style: form
        explode: true
        schema:
          type: string
      - name: agent-name
        in: query
        description: Human-meaningful name for the agent
        style: form
        explode: true
        schema:
          type: string
      - name: agent-role
        in: query
        description: Agent role in the event
        style: form
        explode: true
        schema:
          type: string
      - name: altid
        in: query
        description: Alternative User id e.g. authentication
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: Time when the event occurred on source
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: entity-id
        in: query
        description: Specific instance of object
        style: form
        explode: true
        schema:
          type: string
      - name: entity-name
        in: query
        description: Descriptor for entity
        style: form
        explode: true
        schema:
          type: string
      - name: entity-role
        in: query
        description: What role the entity played
        style: form
        explode: true
        schema:
          type: string
      - name: entity-type
        in: query
        description: Type of entity involved
        style: form
        explode: true
        schema:
          type: string
      - name: outcome
        in: query
        description: Whether the event succeeded or failed
        style: form
        explode: true
        schema:
          type: string
      - name: policy
        in: query
        description: Policy that authorized event
        style: form
        explode: true
        schema:
          type: string
      - name: site
        in: query
        description: Logical source location within the enterprise
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: The identity of source detecting the event
        style: form
        explode: true
        schema:
          type: string
      - name: subtype
        in: query
        description: More specific type/id for the event
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Type/identifier of event
        style: form
        explode: true
        schema:
          type: string
      - name: user
        in: query
        description: Unique identifier for the user
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEvent'
                description: Success
      deprecated: false
  /AuditEvent/{id}:
    get:
      tags:
      - AuditEvent
      summary: AuditEventById
      operationId: AuditEventById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEvent'
      deprecated: false
    put:
      tags:
      - AuditEvent
      summary: AuditEventById
      operationId: AuditEventById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditEvent'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - AuditEvent
      summary: AuditEventById
      operationId: AuditEventById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AuditEvent/{id}/_history:
    get:
      tags:
      - AuditEvent
      summary: AuditEventHistoryById
      operationId: AuditEventHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AuditEvent/_history:
    get:
      tags:
      - AuditEvent
      summary: AuditEventHistory
      operationId: AuditEventHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /AuditEvent/{id}/_history/{vid}:
    get:
      tags:
      - AuditEvent
      summary: AuditEventHistoryByIdAndVid
      operationId: AuditEventHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEvent'
      deprecated: false
  /Basic:
    post:
      tags:
      - Basic
      summary: Basic
      operationId: Basic
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basic'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Basic
      summary: Basic
      operationId: Basic
      parameters:
      - name: author
        in: query
        description: Who created
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Identifies the focus of this resource
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Identifies the focus of this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: Kind of Resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: When created
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: Business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Basic'
                description: Success
      deprecated: false
  /Basic/{id}:
    get:
      tags:
      - Basic
      summary: BasicById
      operationId: BasicById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basic'
      deprecated: false
    put:
      tags:
      - Basic
      summary: BasicById
      operationId: BasicById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basic'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Basic
      summary: BasicById
      operationId: BasicById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Basic/{id}/_history:
    get:
      tags:
      - Basic
      summary: BasicHistoryById
      operationId: BasicHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Basic/_history:
    get:
      tags:
      - Basic
      summary: BasicHistory
      operationId: BasicHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Basic/{id}/_history/{vid}:
    get:
      tags:
      - Basic
      summary: BasicHistoryByIdAndVid
      operationId: BasicHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basic'
      deprecated: false
  /Binary:
    post:
      tags:
      - Binary
      summary: Binary
      operationId: Binary
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binary'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Binary
      summary: Binary
      operationId: Binary
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: contenttype
        in: query
        description: MimeType of the binary content
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Binary'
                description: Success
      deprecated: false
  /Binary/{id}:
    get:
      tags:
      - Binary
      summary: BinaryById
      operationId: BinaryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Binary'
      deprecated: false
    put:
      tags:
      - Binary
      summary: BinaryById
      operationId: BinaryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binary'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Binary
      summary: BinaryById
      operationId: BinaryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Binary/{id}/_history:
    get:
      tags:
      - Binary
      summary: BinaryHistoryById
      operationId: BinaryHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Binary/_history:
    get:
      tags:
      - Binary
      summary: BinaryHistory
      operationId: BinaryHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Binary/{id}/_history/{vid}:
    get:
      tags:
      - Binary
      summary: BinaryHistoryByIdAndVid
      operationId: BinaryHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Binary'
      deprecated: false
  /BodySite:
    post:
      tags:
      - BodySite
      summary: BodySite
      operationId: BodySite
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodySite'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - BodySite
      summary: BodySite
      operationId: BodySite
      parameters:
      - name: patient
        in: query
        description: Patient to whom bodysite belongs
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: Named anatomical location
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Identifier for this instance of the anatomical location
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BodySite'
                description: Success
      deprecated: false
  /BodySite/{id}:
    get:
      tags:
      - BodySite
      summary: BodySiteById
      operationId: BodySiteById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodySite'
      deprecated: false
    put:
      tags:
      - BodySite
      summary: BodySiteById
      operationId: BodySiteById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodySite'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - BodySite
      summary: BodySiteById
      operationId: BodySiteById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /BodySite/{id}/_history:
    get:
      tags:
      - BodySite
      summary: BodySiteHistoryById
      operationId: BodySiteHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /BodySite/_history:
    get:
      tags:
      - BodySite
      summary: BodySiteHistory
      operationId: BodySiteHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /BodySite/{id}/_history/{vid}:
    get:
      tags:
      - BodySite
      summary: BodySiteHistoryByIdAndVid
      operationId: BodySiteHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodySite'
      deprecated: false
  /Bundle:
    post:
      tags:
      - Bundle
      summary: Bundle
      operationId: Bundle
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bundle'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Bundle
      summary: Bundle
      operationId: Bundle
      parameters:
      - name: composition
        in: query
        description: The first resource in the bundle, if the bundle type is "document" - this is a composition, and this parameter provides access to searches its contents
        style: form
        explode: true
        schema:
          type: string
      - name: message
        in: query
        description: The first resource in the bundle, if the bundle type is "message" - this is a message header, and this parameter provides access to search its contents
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Persistent identifier for the bundle
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bundle'
                description: Success
      deprecated: false
  /Bundle/{id}:
    get:
      tags:
      - Bundle
      summary: BundleById
      operationId: BundleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
      deprecated: false
    put:
      tags:
      - Bundle
      summary: BundleById
      operationId: BundleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bundle'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Bundle
      summary: BundleById
      operationId: BundleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Bundle/{id}/_history:
    get:
      tags:
      - Bundle
      summary: BundleHistoryById
      operationId: BundleHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Bundle/_history:
    get:
      tags:
      - Bundle
      summary: BundleHistory
      operationId: BundleHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Bundle/{id}/_history/{vid}:
    get:
      tags:
      - Bundle
      summary: BundleHistoryByIdAndVid
      operationId: BundleHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
      deprecated: false
  /CapabilityStatement:
    post:
      tags:
      - CapabilityStatement
      summary: CapabilityStatement
      operationId: CapabilityStatement
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - CapabilityStatement
      summary: CapabilityStatement
      operationId: CapabilityStatement
      parameters:
      - name: resource-profile
        in: query
        description: A profile id invoked in a capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: supported-profile
        in: query
        description: Profiles for use cases supported
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The capability statement publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: event
        in: query
        description: Event code in a capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: fhirversion
        in: query
        description: The version of FHIR
        style: form
        explode: true
        schema:
          type: string
      - name: format
        in: query
        description: formats supported (xml | json | ttl | mime type)
        style: form
        explode: true
        schema:
          type: string
      - name: guide
        in: query
        description: Implementation guides supported
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: mode
        in: query
        description: Mode - restful (server/client) or messaging (sender/receiver)
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: resource
        in: query
        description: Name of a resource mentioned in a capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: security-service
        in: query
        description: OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates
        style: form
        explode: true
        schema:
          type: string
      - name: software
        in: query
        description: Part of a the name of a software application
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the capability statement
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /CapabilityStatement/{id}:
    get:
      tags:
      - CapabilityStatement
      summary: CapabilityStatementById
      operationId: CapabilityStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - CapabilityStatement
      summary: CapabilityStatementById
      operationId: CapabilityStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - CapabilityStatement
      summary: CapabilityStatementById
      operationId: CapabilityStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CapabilityStatement/{id}/_history:
    get:
      tags:
      - CapabilityStatement
      summary: CapabilityStatementHistoryById
      operationId: CapabilityStatementHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CapabilityStatement/_history:
    get:
      tags:
      - CapabilityStatement
      summary: CapabilityStatementHistory
      operationId: CapabilityStatementHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CapabilityStatement/{id}/_history/{vid}:
    get:
      tags:
      - CapabilityStatement
      summary: CapabilityStatementHistoryByIdAndVid
      operationId: CapabilityStatementHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /CarePlan:
    post:
      tags:
      - CarePlan
      summary: CarePlan
      operationId: CarePlan
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarePlan'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - CarePlan
      summary: CarePlan
      operationId: CarePlan
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: activity-reference
        in: query
        description: Activity details defined in specific resource
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: Fulfills care plan
        style: form
        explode: true
        schema:
          type: string
      - name: care-team
        in: query
        description: Who's involved in plan?
        style: form
        explode: true
        schema:
          type: string
      - name: condition
        in: query
        description: Health issues this plan addresses
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Created in context of
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: Protocol or definition
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Created in context of
        style: form
        explode: true
        schema:
          type: string
      - name: goal
        in: query
        description: Desired outcome of plan
        style: form
        explode: true
        schema:
          type: string
      - name: part-of
        in: query
        description: Part of referenced CarePlan
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Matches if the practitioner is listed as a performer in any of the "simple" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)
        style: form
        explode: true
        schema:
          type: string
      - name: replaces
        in: query
        description: CarePlan replaced by this CarePlan
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who care plan is for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: activity-code
        in: query
        description: Detail type of activity
        style: form
        explode: true
        schema:
          type: string
      - name: activity-date
        in: query
        description: Specified date occurs within period specified by CarePlan.activity.timingSchedule
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: category
        in: query
        description: Type of plan
        style: form
        explode: true
        schema:
          type: string
      - name: intent
        in: query
        description: proposal | plan | order | option
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: draft | active | suspended | completed | entered-in-error | cancelled | unknown
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarePlan'
                description: Success
      deprecated: false
  /CarePlan/{id}:
    get:
      tags:
      - CarePlan
      summary: CarePlanById
      operationId: CarePlanById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarePlan'
      deprecated: false
    put:
      tags:
      - CarePlan
      summary: CarePlanById
      operationId: CarePlanById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarePlan'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - CarePlan
      summary: CarePlanById
      operationId: CarePlanById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CarePlan/{id}/_history:
    get:
      tags:
      - CarePlan
      summary: CarePlanHistoryById
      operationId: CarePlanHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CarePlan/_history:
    get:
      tags:
      - CarePlan
      summary: CarePlanHistory
      operationId: CarePlanHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CarePlan/{id}/_history/{vid}:
    get:
      tags:
      - CarePlan
      summary: CarePlanHistoryByIdAndVid
      operationId: CarePlanHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarePlan'
      deprecated: false
  /CareTeam:
    post:
      tags:
      - CareTeam
      summary: CareTeam
      operationId: CareTeam
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareTeam'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - CareTeam
      summary: CareTeam
      operationId: CareTeam
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or episode associated with CareTeam
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Encounter or episode associated with CareTeam
        style: form
        explode: true
        schema:
          type: string
      - name: participant
        in: query
        description: Who is involved
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who care team is for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Type of team
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: proposed | active | suspended | inactive | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CareTeam'
                description: Success
      deprecated: false
  /CareTeam/{id}:
    get:
      tags:
      - CareTeam
      summary: CareTeamById
      operationId: CareTeamById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CareTeam'
      deprecated: false
    put:
      tags:
      - CareTeam
      summary: CareTeamById
      operationId: CareTeamById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareTeam'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - CareTeam
      summary: CareTeamById
      operationId: CareTeamById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CareTeam/{id}/_history:
    get:
      tags:
      - CareTeam
      summary: CareTeamHistoryById
      operationId: CareTeamHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CareTeam/_history:
    get:
      tags:
      - CareTeam
      summary: CareTeamHistory
      operationId: CareTeamHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CareTeam/{id}/_history/{vid}:
    get:
      tags:
      - CareTeam
      summary: CareTeamHistoryByIdAndVid
      operationId: CareTeamHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CareTeam'
      deprecated: false
  /ChargeItem:
    post:
      tags:
      - ChargeItem
      summary: ChargeItem
      operationId: ChargeItem
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ChargeItem
      summary: ChargeItem
      operationId: ChargeItem
      parameters:
      - name: account
        in: query
        description: Account to place this charge
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter / Episode associated with event
        style: form
        explode: true
        schema:
          type: string
      - name: enterer
        in: query
        description: Individual who was entering
        style: form
        explode: true
        schema:
          type: string
      - name: participant-actor
        in: query
        description: Individual who was performing
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Individual service was done for/to
        style: form
        explode: true
        schema:
          type: string
      - name: performing-organization
        in: query
        description: Organization providing the charged sevice
        style: form
        explode: true
        schema:
          type: string
      - name: requesting-organization
        in: query
        description: Organization requesting the charged service
        style: form
        explode: true
        schema:
          type: string
      - name: service
        in: query
        description: Which rendered service is being charged?
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Individual service was done for/to
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: A code that identifies the charge, like a billing code
        style: form
        explode: true
        schema:
          type: string
      - name: entered-date
        in: query
        description: Date the charge item was entered
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: factor-override
        in: query
        description: Factor overriding the associated rules
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: identifier
        in: query
        description: Business Identifier for item
        style: form
        explode: true
        schema:
          type: string
      - name: occurrence
        in: query
        description: When the charged service was applied
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: participant-role
        in: query
        description: What type of performance was done
        style: form
        explode: true
        schema:
          type: string
      - name: price-override
        in: query
        description: Price overriding the associated rules
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: quantity
        in: query
        description: Quantity of which the charge item has been serviced
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ChargeItem/{id}:
    get:
      tags:
      - ChargeItem
      summary: ChargeItemById
      operationId: ChargeItemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - ChargeItem
      summary: ChargeItemById
      operationId: ChargeItemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ChargeItem
      summary: ChargeItemById
      operationId: ChargeItemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ChargeItem/{id}/_history:
    get:
      tags:
      - ChargeItem
      summary: ChargeItemHistoryById
      operationId: ChargeItemHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ChargeItem/_history:
    get:
      tags:
      - ChargeItem
      summary: ChargeItemHistory
      operationId: ChargeItemHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ChargeItem/{id}/_history/{vid}:
    get:
      tags:
      - ChargeItem
      summary: ChargeItemHistoryByIdAndVid
      operationId: ChargeItemHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Claim:
    post:
      tags:
      - Claim
      summary: Claim
      operationId: Claim
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Claim
      summary: Claim
      operationId: Claim
      parameters:
      - name: care-team
        in: query
        description: Member of the CareTeam
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Encounters associated with a billed line item
        style: form
        explode: true
        schema:
          type: string
      - name: enterer
        in: query
        description: The party responsible for the entry of the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: facility
        in: query
        description: Facility responsible for the goods and services
        style: form
        explode: true
        schema:
          type: string
      - name: insurer
        in: query
        description: The target payor/insurer for the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The reference to the providing organization
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Patient receiving the services
        style: form
        explode: true
        schema:
          type: string
      - name: payee
        in: query
        description: The party receiving any payment for the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: Provider responsible for the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date for the Claim
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The primary identifier of the financial resource
        style: form
        explode: true
        schema:
          type: string
      - name: priority
        in: query
        description: Processing priority requested
        style: form
        explode: true
        schema:
          type: string
      - name: use
        in: query
        description: The kind of financial resource
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim'
                description: Success
      deprecated: false
  /Claim/{id}:
    get:
      tags:
      - Claim
      summary: ClaimById
      operationId: ClaimById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
      deprecated: false
    put:
      tags:
      - Claim
      summary: ClaimById
      operationId: ClaimById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Claim
      summary: ClaimById
      operationId: ClaimById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Claim/{id}/_history:
    get:
      tags:
      - Claim
      summary: ClaimHistoryById
      operationId: ClaimHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Claim/_history:
    get:
      tags:
      - Claim
      summary: ClaimHistory
      operationId: ClaimHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Claim/{id}/_history/{vid}:
    get:
      tags:
      - Claim
      summary: ClaimHistoryByIdAndVid
      operationId: ClaimHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
      deprecated: false
  /ClaimResponse:
    post:
      tags:
      - ClaimResponse
      summary: ClaimResponse
      operationId: ClaimResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponse
      operationId: ClaimResponse
      parameters:
      - name: insurer
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The subject of care.
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The claim reference
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The Provider of the claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: disposition
        in: query
        description: The contents of the disposition message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The identity of the claimresponse
        style: form
        explode: true
        schema:
          type: string
      - name: outcome
        in: query
        description: The processing outcome
        style: form
        explode: true
        schema:
          type: string
      - name: payment-date
        in: query
        description: The expected paymentDate
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimResponse'
                description: Success
      deprecated: false
  /ClaimResponse/{id}:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseById
      operationId: ClaimResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      deprecated: false
    put:
      tags:
      - ClaimResponse
      summary: ClaimResponseById
      operationId: ClaimResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ClaimResponse
      summary: ClaimResponseById
      operationId: ClaimResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClaimResponse/{id}/_history:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseHistoryById
      operationId: ClaimResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClaimResponse/_history:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseHistory
      operationId: ClaimResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClaimResponse/{id}/_history/{vid}:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseHistoryByIdAndVid
      operationId: ClaimResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      deprecated: false
  /ClinicalImpression:
    post:
      tags:
      - ClinicalImpression
      summary: ClinicalImpression
      operationId: ClinicalImpression
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClinicalImpression'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ClinicalImpression
      summary: ClinicalImpression
      operationId: ClinicalImpression
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: action
        in: query
        description: Action taken as part of assessment procedure
        style: form
        explode: true
        schema:
          type: string
      - name: assessor
        in: query
        description: The clinician performing the assessment
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or Episode created from
        style: form
        explode: true
        schema:
          type: string
      - name: finding-ref
        in: query
        description: What was found
        style: form
        explode: true
        schema:
          type: string
      - name: investigation
        in: query
        description: Record of a specific investigation
        style: form
        explode: true
        schema:
          type: string
      - name: previous
        in: query
        description: Reference to last assessment
        style: form
        explode: true
        schema:
          type: string
      - name: problem
        in: query
        description: Relevant impressions of patient state
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Patient or group assessed
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: finding-code
        in: query
        description: What was found
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: draft | completed | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicalImpression'
                description: Success
      deprecated: false
  /ClinicalImpression/{id}:
    get:
      tags:
      - ClinicalImpression
      summary: ClinicalImpressionById
      operationId: ClinicalImpressionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalImpression'
      deprecated: false
    put:
      tags:
      - ClinicalImpression
      summary: ClinicalImpressionById
      operationId: ClinicalImpressionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClinicalImpression'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ClinicalImpression
      summary: ClinicalImpressionById
      operationId: ClinicalImpressionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClinicalImpression/{id}/_history:
    get:
      tags:
      - ClinicalImpression
      summary: ClinicalImpressionHistoryById
      operationId: ClinicalImpressionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClinicalImpression/_history:
    get:
      tags:
      - ClinicalImpression
      summary: ClinicalImpressionHistory
      operationId: ClinicalImpressionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClinicalImpression/{id}/_history/{vid}:
    get:
      tags:
      - ClinicalImpression
      summary: ClinicalImpressionHistoryByIdAndVid
      operationId: ClinicalImpressionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalImpression'
      deprecated: false
  /CodeSystem:
    post:
      tags:
      - CodeSystem
      summary: CodeSystem
      operationId: CodeSystem
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeSystem'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - CodeSystem
      summary: CodeSystem
      operationId: CodeSystem
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: A code defined in the code system
        style: form
        explode: true
        schema:
          type: string
      - name: content-mode
        in: query
        description: not-present | example | fragment | complete
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The code system publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the code system
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the code system
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the code system
        style: form
        explode: true
        schema:
          type: string
      - name: language
        in: query
        description: A language in which a designation is provided
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the code system
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the code system
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the code system
        style: form
        explode: true
        schema:
          type: string
      - name: system
        in: query
        description: The system for any codes defined by this code system (same as 'url')
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the code system
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the code system
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the code system
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeSystem'
                description: Success
      deprecated: false
  /CodeSystem/{id}:
    get:
      tags:
      - CodeSystem
      summary: CodeSystemById
      operationId: CodeSystemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSystem'
      deprecated: false
    put:
      tags:
      - CodeSystem
      summary: CodeSystemById
      operationId: CodeSystemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeSystem'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - CodeSystem
      summary: CodeSystemById
      operationId: CodeSystemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CodeSystem/{id}/_history:
    get:
      tags:
      - CodeSystem
      summary: CodeSystemHistoryById
      operationId: CodeSystemHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CodeSystem/_history:
    get:
      tags:
      - CodeSystem
      summary: CodeSystemHistory
      operationId: CodeSystemHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CodeSystem/{id}/_history/{vid}:
    get:
      tags:
      - CodeSystem
      summary: CodeSystemHistoryByIdAndVid
      operationId: CodeSystemHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSystem'
      deprecated: false
  /Communication:
    post:
      tags:
      - Communication
      summary: Communication
      operationId: Communication
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Communication'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Communication
      summary: Communication
      operationId: Communication
      parameters:
      - name: based-on
        in: query
        description: Request fulfilled by this communication
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or episode leading to message
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: Instantiates protocol or definition
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Encounter leading to message
        style: form
        explode: true
        schema:
          type: string
      - name: part-of
        in: query
        description: Part of this action
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Focus of message
        style: form
        explode: true
        schema:
          type: string
      - name: recipient
        in: query
        description: Message recipient
        style: form
        explode: true
        schema:
          type: string
      - name: sender
        in: query
        description: Message sender
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Focus of message
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Message category
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Unique identifier
        style: form
        explode: true
        schema:
          type: string
      - name: medium
        in: query
        description: A channel of communication
        style: form
        explode: true
        schema:
          type: string
      - name: received
        in: query
        description: When received
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: sent
        in: query
        description: When sent
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: status
        in: query
        description: preparation | in-progress | suspended | aborted | completed | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Communication'
                description: Success
      deprecated: false
  /Communication/{id}:
    get:
      tags:
      - Communication
      summary: CommunicationById
      operationId: CommunicationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Communication'
      deprecated: false
    put:
      tags:
      - Communication
      summary: CommunicationById
      operationId: CommunicationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Communication'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Communication
      summary: CommunicationById
      operationId: CommunicationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Communication/{id}/_history:
    get:
      tags:
      - Communication
      summary: CommunicationHistoryById
      operationId: CommunicationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Communication/_history:
    get:
      tags:
      - Communication
      summary: CommunicationHistory
      operationId: CommunicationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Communication/{id}/_history/{vid}:
    get:
      tags:
      - Communication
      summary: CommunicationHistoryByIdAndVid
      operationId: CommunicationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Communication'
      deprecated: false
  /CommunicationRequest:
    post:
      tags:
      - CommunicationRequest
      summary: CommunicationRequest
      operationId: CommunicationRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunicationRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - CommunicationRequest
      summary: CommunicationRequest
      operationId: CommunicationRequest
      parameters:
      - name: based-on
        in: query
        description: Fulfills plan or proposal
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or episode leading to message
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Encounter leading to message
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Focus of message
        style: form
        explode: true
        schema:
          type: string
      - name: recipient
        in: query
        description: Message recipient
        style: form
        explode: true
        schema:
          type: string
      - name: replaces
        in: query
        description: Request(s) replaced by this request
        style: form
        explode: true
        schema:
          type: string
      - name: requester
        in: query
        description: Individual making the request
        style: form
        explode: true
        schema:
          type: string
      - name: sender
        in: query
        description: Message sender
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Focus of message
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: authored
        in: query
        description: When request transitioned to being actionable
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: category
        in: query
        description: Message category
        style: form
        explode: true
        schema:
          type: string
      - name: group-identifier
        in: query
        description: Composite request this is part of
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Unique identifier
        style: form
        explode: true
        schema:
          type: string
      - name: medium
        in: query
        description: A channel of communication
        style: form
        explode: true
        schema:
          type: string
      - name: occurrence
        in: query
        description: When scheduled
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: priority
        in: query
        description: Message urgency
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: draft | active | suspended | cancelled | completed | entered-in-error | unknown
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunicationRequest'
                description: Success
      deprecated: false
  /CommunicationRequest/{id}:
    get:
      tags:
      - CommunicationRequest
      summary: CommunicationRequestById
      operationId: CommunicationRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationRequest'
      deprecated: false
    put:
      tags:
      - CommunicationRequest
      summary: CommunicationRequestById
      operationId: CommunicationRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunicationRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - CommunicationRequest
      summary: CommunicationRequestById
      operationId: CommunicationRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CommunicationRequest/{id}/_history:
    get:
      tags:
      - CommunicationRequest
      summary: CommunicationRequestHistoryById
      operationId: CommunicationRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CommunicationRequest/_history:
    get:
      tags:
      - CommunicationRequest
      summary: CommunicationRequestHistory
      operationId: CommunicationRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CommunicationRequest/{id}/_history/{vid}:
    get:
      tags:
      - CommunicationRequest
      summary: CommunicationRequestHistoryByIdAndVid
      operationId: CommunicationRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationRequest'
      deprecated: false
  /CompartmentDefinition:
    post:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinition
      operationId: CompartmentDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinition
      operationId: CompartmentDefinition
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: Patient | Encounter | RelatedPerson | Practitioner | Device
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The compartment definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the compartment definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the compartment definition
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the compartment definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the compartment definition
        style: form
        explode: true
        schema:
          type: string
      - name: resource
        in: query
        description: Name of resource type
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the compartment definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the compartment definition
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the compartment definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /CompartmentDefinition/{id}:
    get:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinitionById
      operationId: CompartmentDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinitionById
      operationId: CompartmentDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinitionById
      operationId: CompartmentDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CompartmentDefinition/{id}/_history:
    get:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinitionHistoryById
      operationId: CompartmentDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CompartmentDefinition/_history:
    get:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinitionHistory
      operationId: CompartmentDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /CompartmentDefinition/{id}/_history/{vid}:
    get:
      tags:
      - CompartmentDefinition
      summary: CompartmentDefinitionHistoryByIdAndVid
      operationId: CompartmentDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Composition:
    post:
      tags:
      - Composition
      summary: Composition
      operationId: Composition
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Composition
      summary: Composition
      operationId: Composition
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: attester
        in: query
        description: Who attested the composition
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: Who and/or what authored the composition
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: entry
        in: query
        description: A reference to data that supports this section
        style: form
        explode: true
        schema:
          type: string
      - name: related-ref
        in: query
        description: Target of the relationship
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who and/or what the composition is about
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)"
        style: form
        explode: true
        schema:
          type: string
      - name: class
        in: query
        description: Categorization of Composition
        style: form
        explode: true
        schema:
          type: string
      - name: confidentiality
        in: query
        description: As defined by affinity domain
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Code(s) that apply to the event being documented
        style: form
        explode: true
        schema:
          type: string
      - name: period
        in: query
        description: The period covered by the documentation
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: related-id
        in: query
        description: Target of the relationship
        style: form
        explode: true
        schema:
          type: string
      - name: section
        in: query
        description: Classification of section (recommended)
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: preliminary | final | amended | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: Human Readable name/title
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Composition'
                description: Success
      deprecated: false
  /Composition/{id}:
    get:
      tags:
      - Composition
      summary: CompositionById
      operationId: CompositionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composition'
      deprecated: false
    put:
      tags:
      - Composition
      summary: CompositionById
      operationId: CompositionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Composition
      summary: CompositionById
      operationId: CompositionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Composition/{id}/_history:
    get:
      tags:
      - Composition
      summary: CompositionHistoryById
      operationId: CompositionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Composition/_history:
    get:
      tags:
      - Composition
      summary: CompositionHistory
      operationId: CompositionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Composition/{id}/_history/{vid}:
    get:
      tags:
      - Composition
      summary: CompositionHistoryByIdAndVid
      operationId: CompositionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composition'
      deprecated: false
  /ConceptMap:
    post:
      tags:
      - ConceptMap
      summary: ConceptMap
      operationId: ConceptMap
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConceptMap'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ConceptMap
      summary: ConceptMap
      operationId: ConceptMap
      parameters:
      - name: source
        in: query
        description: Identifies the source of the concepts which are being mapped
        style: form
        explode: true
        schema:
          type: string
      - name: source-uri
        in: query
        description: Identifies the source of the concepts which are being mapped
        style: form
        explode: true
        schema:
          type: string
      - name: target
        in: query
        description: Provides context to the mappings
        style: form
        explode: true
        schema:
          type: string
      - name: target-uri
        in: query
        description: Provides context to the mappings
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The concept map publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: dependson
        in: query
        description: Reference to property mapping depends on
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: The description of the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: other
        in: query
        description: Canonical URL for other concept map
        style: form
        explode: true
        schema:
          type: string
      - name: product
        in: query
        description: Reference to property mapping depends on
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: source-code
        in: query
        description: Identifies element being mapped
        style: form
        explode: true
        schema:
          type: string
      - name: source-system
        in: query
        description: Code System (if value set crosses code systems)
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: target-code
        in: query
        description: Code that identifies the target element
        style: form
        explode: true
        schema:
          type: string
      - name: target-system
        in: query
        description: System of the target (if necessary)
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the concept map
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptMap'
                description: Success
      deprecated: false
  /ConceptMap/{id}:
    get:
      tags:
      - ConceptMap
      summary: ConceptMapById
      operationId: ConceptMapById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptMap'
      deprecated: false
    put:
      tags:
      - ConceptMap
      summary: ConceptMapById
      operationId: ConceptMapById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConceptMap'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ConceptMap
      summary: ConceptMapById
      operationId: ConceptMapById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ConceptMap/{id}/_history:
    get:
      tags:
      - ConceptMap
      summary: ConceptMapHistoryById
      operationId: ConceptMapHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ConceptMap/_history:
    get:
      tags:
      - ConceptMap
      summary: ConceptMapHistory
      operationId: ConceptMapHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ConceptMap/{id}/_history/{vid}:
    get:
      tags:
      - ConceptMap
      summary: ConceptMapHistoryByIdAndVid
      operationId: ConceptMapHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptMap'
      deprecated: false
  /Condition:
    post:
      tags:
      - Condition
      summary: Condition
      operationId: Condition
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Condition
      summary: Condition
      operationId: Condition
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: asserter
        in: query
        description: Person who asserts this condition
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or episode when condition first asserted
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Encounter when condition first asserted
        style: form
        explode: true
        schema:
          type: string
      - name: evidence-detail
        in: query
        description: Supporting information found elsewhere
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who has the condition?
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: abatement-age
        in: query
        description: Abatement as age or age range
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: abatement-boolean
        in: query
        description: Abatement boolean (boolean is true or non-boolean values are present)
        style: form
        explode: true
        schema:
          type: string
      - name: abatement-date
        in: query
        description: Date-related abatements (dateTime and period)
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: abatement-string
        in: query
        description: Abatement as a string
        style: form
        explode: true
        schema:
          type: string
      - name: asserted-date
        in: query
        description: Date record was believed accurate
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: body-site
        in: query
        description: Anatomical location, if relevant
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: The category of the condition
        style: form
        explode: true
        schema:
          type: string
      - name: clinical-status
        in: query
        description: The clinical status of the condition
        style: form
        explode: true
        schema:
          type: string
      - name: evidence
        in: query
        description: Manifestation/symptom
        style: form
        explode: true
        schema:
          type: string
      - name: onset-age
        in: query
        description: Onsets as age or age range
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: onset-date
        in: query
        description: Date related onsets (dateTime and Period)
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: onset-info
        in: query
        description: Onsets as a string
        style: form
        explode: true
        schema:
          type: string
      - name: severity
        in: query
        description: The severity of the condition
        style: form
        explode: true
        schema:
          type: string
      - name: stage
        in: query
        description: Simple summary (disease specific)
        style: form
        explode: true
        schema:
          type: string
      - name: verification-status
        in: query
        description: provisional | differential | confirmed | refuted | entered-in-error | unknown
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
                description: Success
      deprecated: false
  /Condition/{id}:
    get:
      tags:
      - Condition
      summary: ConditionById
      operationId: ConditionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
      deprecated: false
    put:
      tags:
      - Condition
      summary: ConditionById
      operationId: ConditionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Condition
      summary: ConditionById
      operationId: ConditionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Condition/{id}/_history:
    get:
      tags:
      - Condition
      summary: ConditionHistoryById
      operationId: ConditionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Condition/_history:
    get:
      tags:
      - Condition
      summary: ConditionHistory
      operationId: ConditionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Condition/{id}/_history/{vid}:
    get:
      tags:
      - Condition
      summary: ConditionHistoryByIdAndVid
      operationId: ConditionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
      deprecated: false
  /Consent:
    post:
      tags:
      - Consent
      summary: Consent
      operationId: Consent
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consent'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Consent
      summary: Consent
      operationId: Consent
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: actor
        in: query
        description: Resource for the actor (or group, by role)
        style: form
        explode: true
        schema:
          type: string
      - name: consentor
        in: query
        description: Who is agreeing to the policy and exceptions
        style: form
        explode: true
        schema:
          type: string
      - name: data
        in: query
        description: The actual data reference
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: Custodian of the consent
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: Source from which this consent is taken
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: action
        in: query
        description: Actions controlled by this consent
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Classification of the consent statement - for indexing/retrieval
        style: form
        explode: true
        schema:
          type: string
      - name: period
        in: query
        description: Period that this consent applies
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: purpose
        in: query
        description: Context of activities for which the agreement is made
        style: form
        explode: true
        schema:
          type: string
      - name: securitylabel
        in: query
        description: Security Labels that define affected resources
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: draft | proposed | active | rejected | inactive | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consent'
                description: Success
      deprecated: false
  /Consent/{id}:
    get:
      tags:
      - Consent
      summary: ConsentById
      operationId: ConsentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consent'
      deprecated: false
    put:
      tags:
      - Consent
      summary: ConsentById
      operationId: ConsentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consent'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Consent
      summary: ConsentById
      operationId: ConsentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Consent/{id}/_history:
    get:
      tags:
      - Consent
      summary: ConsentHistoryById
      operationId: ConsentHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Consent/_history:
    get:
      tags:
      - Consent
      summary: ConsentHistory
      operationId: ConsentHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Consent/{id}/_history/{vid}:
    get:
      tags:
      - Consent
      summary: ConsentHistoryByIdAndVid
      operationId: ConsentHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consent'
      deprecated: false
  /Contract:
    post:
      tags:
      - Contract
      summary: Contract
      operationId: Contract
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Contract
      summary: Contract
      operationId: Contract
      parameters:
      - name: agent
        in: query
        description: Agent to the Contact
        style: form
        explode: true
        schema:
          type: string
      - name: authority
        in: query
        description: The authority of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: domain
        in: query
        description: The domain of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The identity of the subject of the contract (if a patient)
        style: form
        explode: true
        schema:
          type: string
      - name: signer
        in: query
        description: Contract Signatory Party
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The identity of the subject of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: term-topic
        in: query
        description: The identity of the topic of the contract terms
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The identity of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: issued
        in: query
        description: The date/time the contract was issued
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
                description: Success
      deprecated: false
  /Contract/{id}:
    get:
      tags:
      - Contract
      summary: ContractById
      operationId: ContractById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
      deprecated: false
    put:
      tags:
      - Contract
      summary: ContractById
      operationId: ContractById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Contract
      summary: ContractById
      operationId: ContractById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Contract/{id}/_history:
    get:
      tags:
      - Contract
      summary: ContractHistoryById
      operationId: ContractHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Contract/_history:
    get:
      tags:
      - Contract
      summary: ContractHistory
      operationId: ContractHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Contract/{id}/_history/{vid}:
    get:
      tags:
      - Contract
      summary: ContractHistoryByIdAndVid
      operationId: ContractHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
      deprecated: false
  /Coverage:
    post:
      tags:
      - Coverage
      summary: Coverage
      operationId: Coverage
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coverage'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Coverage
      summary: Coverage
      operationId: Coverage
      parameters:
      - name: beneficiary
        in: query
        description: Covered party
        style: form
        explode: true
        schema:
          type: string
      - name: payor
        in: query
        description: The identity of the insurer or party paying for services
        style: form
        explode: true
        schema:
          type: string
      - name: policy-holder
        in: query
        description: Reference to the policyholder
        style: form
        explode: true
        schema:
          type: string
      - name: subscriber
        in: query
        description: Reference to the subscriber
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: class
        in: query
        description: Class identifier
        style: form
        explode: true
        schema:
          type: string
      - name: dependent
        in: query
        description: Dependent number
        style: form
        explode: true
        schema:
          type: string
      - name: group
        in: query
        description: Group identifier
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The primary identifier of the insured and the coverage
        style: form
        explode: true
        schema:
          type: string
      - name: plan
        in: query
        description: A plan or policy identifier
        style: form
        explode: true
        schema:
          type: string
      - name: sequence
        in: query
        description: Sequence number
        style: form
        explode: true
        schema:
          type: string
      - name: subclass
        in: query
        description: Sub-class identifier
        style: form
        explode: true
        schema:
          type: string
      - name: subgroup
        in: query
        description: Sub-group identifier
        style: form
        explode: true
        schema:
          type: string
      - name: subplan
        in: query
        description: Sub-plan identifier
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The kind of coverage (health plan, auto, Workers Compensation)
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coverage'
                description: Success
      deprecated: false
  /Coverage/{id}:
    get:
      tags:
      - Coverage
      summary: CoverageById
      operationId: CoverageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coverage'
      deprecated: false
    put:
      tags:
      - Coverage
      summary: CoverageById
      operationId: CoverageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coverage'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Coverage
      summary: CoverageById
      operationId: CoverageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Coverage/{id}/_history:
    get:
      tags:
      - Coverage
      summary: CoverageHistoryById
      operationId: CoverageHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Coverage/_history:
    get:
      tags:
      - Coverage
      summary: CoverageHistory
      operationId: CoverageHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Coverage/{id}/_history/{vid}:
    get:
      tags:
      - Coverage
      summary: CoverageHistoryByIdAndVid
      operationId: CoverageHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coverage'
      deprecated: false
  /DataElement:
    post:
      tags:
      - DataElement
      summary: DataElement
      operationId: DataElement
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataElement'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DataElement
      summary: DataElement
      operationId: DataElement
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: A code for the data element (server may choose to do subsumption)
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The data element publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: Text search in the description of the data element.  This corresponds to the definition of the first DataElement.element.
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the data element
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the data element
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the data element
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the data element
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the data element
        style: form
        explode: true
        schema:
          type: string
      - name: stringency
        in: query
        description: The stringency of the data element definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the data element
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the data element
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the data element
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataElement'
                description: Success
      deprecated: false
  /DataElement/{id}:
    get:
      tags:
      - DataElement
      summary: DataElementById
      operationId: DataElementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataElement'
      deprecated: false
    put:
      tags:
      - DataElement
      summary: DataElementById
      operationId: DataElementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataElement'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DataElement
      summary: DataElementById
      operationId: DataElementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DataElement/{id}/_history:
    get:
      tags:
      - DataElement
      summary: DataElementHistoryById
      operationId: DataElementHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DataElement/_history:
    get:
      tags:
      - DataElement
      summary: DataElementHistory
      operationId: DataElementHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DataElement/{id}/_history/{vid}:
    get:
      tags:
      - DataElement
      summary: DataElementHistoryByIdAndVid
      operationId: DataElementHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataElement'
      deprecated: false
  /DetectedIssue:
    post:
      tags:
      - DetectedIssue
      summary: DetectedIssue
      operationId: DetectedIssue
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectedIssue'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DetectedIssue
      summary: DetectedIssue
      operationId: DetectedIssue
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: The provider or device that identified the issue
        style: form
        explode: true
        schema:
          type: string
      - name: implicated
        in: query
        description: Problem resource
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Issue Category, e.g. drug-drug, duplicate therapy, etc.
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetectedIssue'
                description: Success
      deprecated: false
  /DetectedIssue/{id}:
    get:
      tags:
      - DetectedIssue
      summary: DetectedIssueById
      operationId: DetectedIssueById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectedIssue'
      deprecated: false
    put:
      tags:
      - DetectedIssue
      summary: DetectedIssueById
      operationId: DetectedIssueById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectedIssue'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DetectedIssue
      summary: DetectedIssueById
      operationId: DetectedIssueById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DetectedIssue/{id}/_history:
    get:
      tags:
      - DetectedIssue
      summary: DetectedIssueHistoryById
      operationId: DetectedIssueHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DetectedIssue/_history:
    get:
      tags:
      - DetectedIssue
      summary: DetectedIssueHistory
      operationId: DetectedIssueHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DetectedIssue/{id}/_history/{vid}:
    get:
      tags:
      - DetectedIssue
      summary: DetectedIssueHistoryByIdAndVid
      operationId: DetectedIssueHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectedIssue'
      deprecated: false
  /Device:
    post:
      tags:
      - Device
      summary: Device
      operationId: Device
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Device
      summary: Device
      operationId: Device
      parameters:
      - name: location
        in: query
        description: A location, where the resource is found
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization responsible for the device
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Patient information, if the resource is affixed to a person
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: device-name
        in: query
        description: A server defined search that may match any of the string fields in the Device.udi.name  or Device.type.coding.display or  Device.type.text
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Instance id from manufacturer, owner, and others
        style: form
        explode: true
        schema:
          type: string
      - name: manufacturer
        in: query
        description: The manufacturer of the device
        style: form
        explode: true
        schema:
          type: string
      - name: model
        in: query
        description: The model of the device
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: active | inactive | entered-in-error | unknown
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of the device
        style: form
        explode: true
        schema:
          type: string
      - name: udi-carrier
        in: query
        description: UDI Barcode (RFID or other technology) string either in HRF format or AIDC format converted to base64 string.
        style: form
        explode: true
        schema:
          type: string
      - name: udi-di
        in: query
        description: The udi Device Identifier (DI)
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: Network address to contact device
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
                description: Success
      deprecated: false
  /Device/{id}:
    get:
      tags:
      - Device
      summary: DeviceById
      operationId: DeviceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      deprecated: false
    put:
      tags:
      - Device
      summary: DeviceById
      operationId: DeviceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Device
      summary: DeviceById
      operationId: DeviceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Device/{id}/_history:
    get:
      tags:
      - Device
      summary: DeviceHistoryById
      operationId: DeviceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Device/_history:
    get:
      tags:
      - Device
      summary: DeviceHistory
      operationId: DeviceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Device/{id}/_history/{vid}:
    get:
      tags:
      - Device
      summary: DeviceHistoryByIdAndVid
      operationId: DeviceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      deprecated: false
  /DeviceComponent:
    post:
      tags:
      - DeviceComponent
      summary: DeviceComponent
      operationId: DeviceComponent
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceComponent'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DeviceComponent
      summary: DeviceComponent
      operationId: DeviceComponent
      parameters:
      - name: parent
        in: query
        description: The parent DeviceComponent resource
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: The device source
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The identifier of the component
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The device component type
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceComponent'
                description: Success
      deprecated: false
  /DeviceComponent/{id}:
    get:
      tags:
      - DeviceComponent
      summary: DeviceComponentById
      operationId: DeviceComponentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceComponent'
      deprecated: false
    put:
      tags:
      - DeviceComponent
      summary: DeviceComponentById
      operationId: DeviceComponentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceComponent'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DeviceComponent
      summary: DeviceComponentById
      operationId: DeviceComponentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceComponent/{id}/_history:
    get:
      tags:
      - DeviceComponent
      summary: DeviceComponentHistoryById
      operationId: DeviceComponentHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceComponent/_history:
    get:
      tags:
      - DeviceComponent
      summary: DeviceComponentHistory
      operationId: DeviceComponentHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceComponent/{id}/_history/{vid}:
    get:
      tags:
      - DeviceComponent
      summary: DeviceComponentHistoryByIdAndVid
      operationId: DeviceComponentHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceComponent'
      deprecated: false
  /DeviceMetric:
    post:
      tags:
      - DeviceMetric
      summary: DeviceMetric
      operationId: DeviceMetric
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceMetric'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DeviceMetric
      summary: DeviceMetric
      operationId: DeviceMetric
      parameters:
      - name: parent
        in: query
        description: The parent DeviceMetric resource
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: The device resource
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: The category of the metric
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The identifier of the metric
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The component type
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceMetric'
                description: Success
      deprecated: false
  /DeviceMetric/{id}:
    get:
      tags:
      - DeviceMetric
      summary: DeviceMetricById
      operationId: DeviceMetricById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceMetric'
      deprecated: false
    put:
      tags:
      - DeviceMetric
      summary: DeviceMetricById
      operationId: DeviceMetricById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceMetric'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DeviceMetric
      summary: DeviceMetricById
      operationId: DeviceMetricById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceMetric/{id}/_history:
    get:
      tags:
      - DeviceMetric
      summary: DeviceMetricHistoryById
      operationId: DeviceMetricHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceMetric/_history:
    get:
      tags:
      - DeviceMetric
      summary: DeviceMetricHistory
      operationId: DeviceMetricHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceMetric/{id}/_history/{vid}:
    get:
      tags:
      - DeviceMetric
      summary: DeviceMetricHistoryByIdAndVid
      operationId: DeviceMetricHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceMetric'
      deprecated: false
  /DeviceRequest:
    post:
      tags:
      - DeviceRequest
      summary: DeviceRequest
      operationId: DeviceRequest
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DeviceRequest
      summary: DeviceRequest
      operationId: DeviceRequest
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: Plan/proposal/order fulfilled by this request
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: Protocol or definition followed by this request
        style: form
        explode: true
        schema:
          type: string
      - name: device
        in: query
        description: Reference to resource that is being requested/ordered
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Desired performer for service
        style: form
        explode: true
        schema:
          type: string
      - name: priorrequest
        in: query
        description: Request takes the place of referenced completed or terminated requests
        style: form
        explode: true
        schema:
          type: string
      - name: requester
        in: query
        description: Who/what is requesting service
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Individual the service is ordered for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: authored-on
        in: query
        description: When the request transitioned to being actionable
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: event-date
        in: query
        description: When service should occur
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: group-identifier
        in: query
        description: Composite request this is part of
        style: form
        explode: true
        schema:
          type: string
      - name: intent
        in: query
        description: proposal | plan | original-order |reflex-order
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: entered-in-error | draft | active |suspended | completed
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /DeviceRequest/{id}:
    get:
      tags:
      - DeviceRequest
      summary: DeviceRequestById
      operationId: DeviceRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - DeviceRequest
      summary: DeviceRequestById
      operationId: DeviceRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DeviceRequest
      summary: DeviceRequestById
      operationId: DeviceRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceRequest/{id}/_history:
    get:
      tags:
      - DeviceRequest
      summary: DeviceRequestHistoryById
      operationId: DeviceRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceRequest/_history:
    get:
      tags:
      - DeviceRequest
      summary: DeviceRequestHistory
      operationId: DeviceRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceRequest/{id}/_history/{vid}:
    get:
      tags:
      - DeviceRequest
      summary: DeviceRequestHistoryByIdAndVid
      operationId: DeviceRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /DeviceUseStatement:
    post:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatement
      operationId: DeviceUseStatement
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUseStatement'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatement
      operationId: DeviceUseStatement
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: device
        in: query
        description: Search by device
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Search by subject
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Search by identifier
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceUseStatement'
                description: Success
      deprecated: false
  /DeviceUseStatement/{id}:
    get:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatementById
      operationId: DeviceUseStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUseStatement'
      deprecated: false
    put:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatementById
      operationId: DeviceUseStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUseStatement'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatementById
      operationId: DeviceUseStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceUseStatement/{id}/_history:
    get:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatementHistoryById
      operationId: DeviceUseStatementHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceUseStatement/_history:
    get:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatementHistory
      operationId: DeviceUseStatementHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DeviceUseStatement/{id}/_history/{vid}:
    get:
      tags:
      - DeviceUseStatement
      summary: DeviceUseStatementHistoryByIdAndVid
      operationId: DeviceUseStatementHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUseStatement'
      deprecated: false
  /DiagnosticReport:
    post:
      tags:
      - DiagnosticReport
      summary: DiagnosticReport
      operationId: DiagnosticReport
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticReport'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DiagnosticReport
      summary: DiagnosticReport
      operationId: DiagnosticReport
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: Reference to the procedure request.
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Healthcare event (Episode of Care or Encounter) related to the report
        style: form
        explode: true
        schema:
          type: string
      - name: image
        in: query
        description: A reference to the image source.
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Who was the source of the report (organization)
        style: form
        explode: true
        schema:
          type: string
      - name: result
        in: query
        description: Link to an atomic result (observation resource)
        style: form
        explode: true
        schema:
          type: string
      - name: specimen
        in: query
        description: The specimen details
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject of the report
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Which diagnostic discipline/department created the report
        style: form
        explode: true
        schema:
          type: string
      - name: diagnosis
        in: query
        description: A coded diagnosis on the report
        style: form
        explode: true
        schema:
          type: string
      - name: issued
        in: query
        description: When the report was issued
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: status
        in: query
        description: The status of the report
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiagnosticReport'
                description: Success
      deprecated: false
  /DiagnosticReport/{id}:
    get:
      tags:
      - DiagnosticReport
      summary: DiagnosticReportById
      operationId: DiagnosticReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticReport'
      deprecated: false
    put:
      tags:
      - DiagnosticReport
      summary: DiagnosticReportById
      operationId: DiagnosticReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticReport'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DiagnosticReport
      summary: DiagnosticReportById
      operationId: DiagnosticReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DiagnosticReport/{id}/_history:
    get:
      tags:
      - DiagnosticReport
      summary: DiagnosticReportHistoryById
      operationId: DiagnosticReportHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DiagnosticReport/_history:
    get:
      tags:
      - DiagnosticReport
      summary: DiagnosticReportHistory
      operationId: DiagnosticReportHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DiagnosticReport/{id}/_history/{vid}:
    get:
      tags:
      - DiagnosticReport
      summary: DiagnosticReportHistoryByIdAndVid
      operationId: DiagnosticReportHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticReport'
      deprecated: false
  /DocumentManifest:
    post:
      tags:
      - DocumentManifest
      summary: DocumentManifest
      operationId: DocumentManifest
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DocumentManifest
      summary: DocumentManifest
      operationId: DocumentManifest
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: Who and/or what authored the manifest
        style: form
        explode: true
        schema:
          type: string
      - name: content-ref
        in: query
        description: Contents of this set of documents
        style: form
        explode: true
        schema:
          type: string
      - name: recipient
        in: query
        description: Intended to get notified about this set of documents
        style: form
        explode: true
        schema:
          type: string
      - name: related-ref
        in: query
        description: Related Resource
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject of the set of documents
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)"
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: When this document manifest created
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: Human-readable description (title)
        style: form
        explode: true
        schema:
          type: string
      - name: related-id
        in: query
        description: Identifiers of things that are related
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: The source system/application/software
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: current | superseded | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /DocumentManifest/{id}:
    get:
      tags:
      - DocumentManifest
      summary: DocumentManifestById
      operationId: DocumentManifestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - DocumentManifest
      summary: DocumentManifestById
      operationId: DocumentManifestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DocumentManifest
      summary: DocumentManifestById
      operationId: DocumentManifestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DocumentManifest/{id}/_history:
    get:
      tags:
      - DocumentManifest
      summary: DocumentManifestHistoryById
      operationId: DocumentManifestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DocumentManifest/_history:
    get:
      tags:
      - DocumentManifest
      summary: DocumentManifestHistory
      operationId: DocumentManifestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DocumentManifest/{id}/_history/{vid}:
    get:
      tags:
      - DocumentManifest
      summary: DocumentManifestHistoryByIdAndVid
      operationId: DocumentManifestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /DocumentReference:
    post:
      tags:
      - DocumentReference
      summary: DocumentReference
      operationId: DocumentReference
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentReference'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DocumentReference
      summary: DocumentReference
      operationId: DocumentReference
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: authenticator
        in: query
        description: Who/what authenticated the document
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: Who and/or what authored the document
        style: form
        explode: true
        schema:
          type: string
      - name: custodian
        in: query
        description: Organization which maintains the document
        style: form
        explode: true
        schema:
          type: string
      - name: related-ref
        in: query
        description: Related Resource
        style: form
        explode: true
        schema:
          type: string
      - name: relatesto
        in: query
        description: Target of the relationship
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who/what is the subject of the document
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)"
        style: form
        explode: true
        schema:
          type: string
      - name: class
        in: query
        description: Categorization of document
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: Document creation time
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: Human-readable description (title)
        style: form
        explode: true
        schema:
          type: string
      - name: event
        in: query
        description: Main clinical acts documented
        style: form
        explode: true
        schema:
          type: string
      - name: facility
        in: query
        description: Kind of facility where patient was seen
        style: form
        explode: true
        schema:
          type: string
      - name: format
        in: query
        description: Format/content rules for the document
        style: form
        explode: true
        schema:
          type: string
      - name: indexed
        in: query
        description: When this document reference was created
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: language
        in: query
        description: Human language of the content (BCP-47)
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: Uri where the data can be found
        style: form
        explode: true
        schema:
          type: string
      - name: period
        in: query
        description: Time of service that is being documented
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: related-id
        in: query
        description: Identifier of related objects or events
        style: form
        explode: true
        schema:
          type: string
      - name: relation
        in: query
        description: replaces | transforms | signs | appends
        style: form
        explode: true
        schema:
          type: string
      - name: relationship
        in: query
        description: Combination of relation and relatesTo
        style: form
        explode: true
        schema:
          type: string
      - name: securitylabel
        in: query
        description: Document security-tags
        style: form
        explode: true
        schema:
          type: string
      - name: setting
        in: query
        description: Additional details about where the content was created (e.g. clinical specialty)
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: current | superseded | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentReference'
                description: Success
      deprecated: false
  /DocumentReference/{id}:
    get:
      tags:
      - DocumentReference
      summary: DocumentReferenceById
      operationId: DocumentReferenceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReference'
      deprecated: false
    put:
      tags:
      - DocumentReference
      summary: DocumentReferenceById
      operationId: DocumentReferenceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentReference'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DocumentReference
      summary: DocumentReferenceById
      operationId: DocumentReferenceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DocumentReference/{id}/_history:
    get:
      tags:
      - DocumentReference
      summary: DocumentReferenceHistoryById
      operationId: DocumentReferenceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DocumentReference/_history:
    get:
      tags:
      - DocumentReference
      summary: DocumentReferenceHistory
      operationId: DocumentReferenceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DocumentReference/{id}/_history/{vid}:
    get:
      tags:
      - DocumentReference
      summary: DocumentReferenceHistoryByIdAndVid
      operationId: DocumentReferenceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReference'
      deprecated: false
  /DomainResource:
    post:
      tags:
      - DomainResource
      summary: DomainResource
      operationId: DomainResource
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - DomainResource
      summary: DomainResource
      operationId: DomainResource
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /DomainResource/{id}:
    get:
      tags:
      - DomainResource
      summary: DomainResourceById
      operationId: DomainResourceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - DomainResource
      summary: DomainResourceById
      operationId: DomainResourceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - DomainResource
      summary: DomainResourceById
      operationId: DomainResourceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DomainResource/{id}/_history:
    get:
      tags:
      - DomainResource
      summary: DomainResourceHistoryById
      operationId: DomainResourceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DomainResource/_history:
    get:
      tags:
      - DomainResource
      summary: DomainResourceHistory
      operationId: DomainResourceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /DomainResource/{id}/_history/{vid}:
    get:
      tags:
      - DomainResource
      summary: DomainResourceHistoryByIdAndVid
      operationId: DomainResourceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /EligibilityRequest:
    post:
      tags:
      - EligibilityRequest
      summary: EligibilityRequest
      operationId: EligibilityRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequest
      operationId: EligibilityRequest
      parameters:
      - name: enterer
        in: query
        description: The party who is responsible for the request
        style: form
        explode: true
        schema:
          type: string
      - name: facility
        in: query
        description: Facility responsible for the goods and services
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The reference to the providing organization
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The reference to the patient
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The reference to the provider
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date for the EOB
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The business identifier of the Eligibility
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilityRequest'
                description: Success
      deprecated: false
  /EligibilityRequest/{id}:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestById
      operationId: EligibilityRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityRequest'
      deprecated: false
    put:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestById
      operationId: EligibilityRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestById
      operationId: EligibilityRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityRequest/{id}/_history:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestHistoryById
      operationId: EligibilityRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityRequest/_history:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestHistory
      operationId: EligibilityRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityRequest/{id}/_history/{vid}:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestHistoryByIdAndVid
      operationId: EligibilityRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityRequest'
      deprecated: false
  /EligibilityResponse:
    post:
      tags:
      - EligibilityResponse
      summary: EligibilityResponse
      operationId: EligibilityResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponse
      operationId: EligibilityResponse
      parameters:
      - name: insurer
        in: query
        description: The organization which generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The EligibilityRequest reference
        style: form
        explode: true
        schema:
          type: string
      - name: request-organization
        in: query
        description: The EligibilityRequest organization
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The EligibilityRequest provider
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: disposition
        in: query
        description: The contents of the disposition message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: outcome
        in: query
        description: The processing outcome
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilityResponse'
                description: Success
      deprecated: false
  /EligibilityResponse/{id}:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseById
      operationId: EligibilityResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityResponse'
      deprecated: false
    put:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseById
      operationId: EligibilityResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseById
      operationId: EligibilityResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityResponse/{id}/_history:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseHistoryById
      operationId: EligibilityResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityResponse/_history:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseHistory
      operationId: EligibilityResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityResponse/{id}/_history/{vid}:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseHistoryByIdAndVid
      operationId: EligibilityResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityResponse'
      deprecated: false
  /Encounter:
    post:
      tags:
      - Encounter
      summary: Encounter
      operationId: Encounter
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Encounter'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Encounter
      summary: Encounter
      operationId: Encounter
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: appointment
        in: query
        description: The appointment that scheduled this encounter
        style: form
        explode: true
        schema:
          type: string
      - name: diagnosis
        in: query
        description: Reason the encounter takes place (resource)
        style: form
        explode: true
        schema:
          type: string
      - name: episodeofcare
        in: query
        description: Episode(s) of care that this encounter should be recorded against
        style: form
        explode: true
        schema:
          type: string
      - name: incomingreferral
        in: query
        description: The ReferralRequest that initiated this encounter
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: Location the encounter takes place
        style: form
        explode: true
        schema:
          type: string
      - name: part-of
        in: query
        description: Another Encounter this encounter is part of
        style: form
        explode: true
        schema:
          type: string
      - name: participant
        in: query
        description: Persons involved in the encounter other than the patient
        style: form
        explode: true
        schema:
          type: string
      - name: practitioner
        in: query
        description: Persons involved in the encounter other than the patient
        style: form
        explode: true
        schema:
          type: string
      - name: service-provider
        in: query
        description: The custodian organization of this Encounter record
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The patient ro group present at the encounter
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)"
        style: form
        explode: true
        schema:
          type: string
      - name: class
        in: query
        description: inpatient | outpatient | ambulatory | emergency +
        style: form
        explode: true
        schema:
          type: string
      - name: length
        in: query
        description: Length of encounter in days
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: location-period
        in: query
        description: Time period during which the patient was present at the location
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: participant-type
        in: query
        description: Role of participant in encounter
        style: form
        explode: true
        schema:
          type: string
      - name: reason
        in: query
        description: Reason the encounter takes place (code)
        style: form
        explode: true
        schema:
          type: string
      - name: special-arrangement
        in: query
        description: Wheelchair, translator, stretcher, etc.
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: planned | arrived | triaged | in-progress | onleave | finished | cancelled +
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Encounter'
                description: Success
      deprecated: false
  /Encounter/{id}:
    get:
      tags:
      - Encounter
      summary: EncounterById
      operationId: EncounterById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'
      deprecated: false
    put:
      tags:
      - Encounter
      summary: EncounterById
      operationId: EncounterById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Encounter'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Encounter
      summary: EncounterById
      operationId: EncounterById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Encounter/{id}/_history:
    get:
      tags:
      - Encounter
      summary: EncounterHistoryById
      operationId: EncounterHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Encounter/_history:
    get:
      tags:
      - Encounter
      summary: EncounterHistory
      operationId: EncounterHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Encounter/{id}/_history/{vid}:
    get:
      tags:
      - Encounter
      summary: EncounterHistoryByIdAndVid
      operationId: EncounterHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'
      deprecated: false
  /Endpoint:
    post:
      tags:
      - Endpoint
      summary: Endpoint
      operationId: Endpoint
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Endpoint
      summary: Endpoint
      operationId: Endpoint
      parameters:
      - name: organization
        in: query
        description: The organization that is managing the endpoint
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: connection-type
        in: query
        description: Protocol/Profile/Standard to be used with this endpoint connection
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Identifies this endpoint across multiple systems
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A name that this endpoint can be identified by
        style: form
        explode: true
        schema:
          type: string
      - name: payload-type
        in: query
        description: The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the Endpoint (usually expected to be active)
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Endpoint/{id}:
    get:
      tags:
      - Endpoint
      summary: EndpointById
      operationId: EndpointById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - Endpoint
      summary: EndpointById
      operationId: EndpointById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Endpoint
      summary: EndpointById
      operationId: EndpointById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Endpoint/{id}/_history:
    get:
      tags:
      - Endpoint
      summary: EndpointHistoryById
      operationId: EndpointHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Endpoint/_history:
    get:
      tags:
      - Endpoint
      summary: EndpointHistory
      operationId: EndpointHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Endpoint/{id}/_history/{vid}:
    get:
      tags:
      - Endpoint
      summary: EndpointHistoryByIdAndVid
      operationId: EndpointHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /EnrollmentRequest:
    post:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequest
      operationId: EnrollmentRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequest
      operationId: EnrollmentRequest
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The party to be enrolled
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The party to be enrolled
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the Enrollment
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrollmentRequest'
                description: Success
      deprecated: false
  /EnrollmentRequest/{id}:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestById
      operationId: EnrollmentRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentRequest'
      deprecated: false
    put:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestById
      operationId: EnrollmentRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestById
      operationId: EnrollmentRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentRequest/{id}/_history:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestHistoryById
      operationId: EnrollmentRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentRequest/_history:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestHistory
      operationId: EnrollmentRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentRequest/{id}/_history/{vid}:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestHistoryByIdAndVid
      operationId: EnrollmentRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentRequest'
      deprecated: false
  /EnrollmentResponse:
    post:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponse
      operationId: EnrollmentResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponse
      operationId: EnrollmentResponse
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The reference to the claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the EnrollmentResponse
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrollmentResponse'
                description: Success
      deprecated: false
  /EnrollmentResponse/{id}:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseById
      operationId: EnrollmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentResponse'
      deprecated: false
    put:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseById
      operationId: EnrollmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseById
      operationId: EnrollmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentResponse/{id}/_history:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseHistoryById
      operationId: EnrollmentResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentResponse/_history:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseHistory
      operationId: EnrollmentResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentResponse/{id}/_history/{vid}:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseHistoryByIdAndVid
      operationId: EnrollmentResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentResponse'
      deprecated: false
  /EpisodeOfCare:
    post:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCare
      operationId: EpisodeOfCare
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpisodeOfCare'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCare
      operationId: EpisodeOfCare
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: care-manager
        in: query
        description: Care manager/care co-ordinator for the patient
        style: form
        explode: true
        schema:
          type: string
      - name: condition
        in: query
        description: Conditions/problems/diagnoses this episode of care is for
        style: form
        explode: true
        schema:
          type: string
      - name: incomingreferral
        in: query
        description: Incoming Referral Request
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization that has assumed the specific responsibilities of this EpisodeOfCare
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)"
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the Episode of Care as provided (does not check the status history collection)
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EpisodeOfCare'
                description: Success
      deprecated: false
  /EpisodeOfCare/{id}:
    get:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCareById
      operationId: EpisodeOfCareById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeOfCare'
      deprecated: false
    put:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCareById
      operationId: EpisodeOfCareById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpisodeOfCare'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCareById
      operationId: EpisodeOfCareById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EpisodeOfCare/{id}/_history:
    get:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCareHistoryById
      operationId: EpisodeOfCareHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EpisodeOfCare/_history:
    get:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCareHistory
      operationId: EpisodeOfCareHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EpisodeOfCare/{id}/_history/{vid}:
    get:
      tags:
      - EpisodeOfCare
      summary: EpisodeOfCareHistoryByIdAndVid
      operationId: EpisodeOfCareHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeOfCare'
      deprecated: false
  /ExpansionProfile:
    post:
      tags:
      - ExpansionProfile
      summary: ExpansionProfile
      operationId: ExpansionProfile
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpansionProfile'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ExpansionProfile
      summary: ExpansionProfile
      operationId: ExpansionProfile
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The expansion profile publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the expansion profile
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpansionProfile'
                description: Success
      deprecated: false
  /ExpansionProfile/{id}:
    get:
      tags:
      - ExpansionProfile
      summary: ExpansionProfileById
      operationId: ExpansionProfileById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpansionProfile'
      deprecated: false
    put:
      tags:
      - ExpansionProfile
      summary: ExpansionProfileById
      operationId: ExpansionProfileById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpansionProfile'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ExpansionProfile
      summary: ExpansionProfileById
      operationId: ExpansionProfileById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ExpansionProfile/{id}/_history:
    get:
      tags:
      - ExpansionProfile
      summary: ExpansionProfileHistoryById
      operationId: ExpansionProfileHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ExpansionProfile/_history:
    get:
      tags:
      - ExpansionProfile
      summary: ExpansionProfileHistory
      operationId: ExpansionProfileHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ExpansionProfile/{id}/_history/{vid}:
    get:
      tags:
      - ExpansionProfile
      summary: ExpansionProfileHistoryByIdAndVid
      operationId: ExpansionProfileHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpansionProfile'
      deprecated: false
  /ExplanationOfBenefit:
    post:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefit
      operationId: ExplanationOfBenefit
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplanationOfBenefit'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefit
      operationId: ExplanationOfBenefit
      parameters:
      - name: care-team
        in: query
        description: Member of the CareTeam
        style: form
        explode: true
        schema:
          type: string
      - name: claim
        in: query
        description: The reference to the claim
        style: form
        explode: true
        schema:
          type: string
      - name: coverage
        in: query
        description: The plan under which the claim was adjudicated
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Encounters associated with a billed line item
        style: form
        explode: true
        schema:
          type: string
      - name: enterer
        in: query
        description: The party responsible for the entry of the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: facility
        in: query
        description: Facility responsible for the goods and services
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The reference to the providing organization
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The reference to the patient
        style: form
        explode: true
        schema:
          type: string
      - name: payee
        in: query
        description: The party receiving any payment for the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The reference to the provider
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date for the EOB
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: disposition
        in: query
        description: The contents of the disposition message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the Explanation of Benefit
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExplanationOfBenefit'
                description: Success
      deprecated: false
  /ExplanationOfBenefit/{id}:
    get:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefitById
      operationId: ExplanationOfBenefitById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationOfBenefit'
      deprecated: false
    put:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefitById
      operationId: ExplanationOfBenefitById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplanationOfBenefit'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefitById
      operationId: ExplanationOfBenefitById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ExplanationOfBenefit/{id}/_history:
    get:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefitHistoryById
      operationId: ExplanationOfBenefitHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ExplanationOfBenefit/_history:
    get:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefitHistory
      operationId: ExplanationOfBenefitHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ExplanationOfBenefit/{id}/_history/{vid}:
    get:
      tags:
      - ExplanationOfBenefit
      summary: ExplanationOfBenefitHistoryByIdAndVid
      operationId: ExplanationOfBenefitHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationOfBenefit'
      deprecated: false
  /FamilyMemberHistory:
    post:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistory
      operationId: FamilyMemberHistory
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyMemberHistory'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistory
      operationId: FamilyMemberHistory
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: Instantiates protocol or definition
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: gender
        in: query
        description: A search by a gender code of a family member
        style: form
        explode: true
        schema:
          type: string
      - name: relationship
        in: query
        description: A search by a relationship type
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: partial | completed | entered-in-error | health-unknown
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyMemberHistory'
                description: Success
      deprecated: false
  /FamilyMemberHistory/{id}:
    get:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistoryById
      operationId: FamilyMemberHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyMemberHistory'
      deprecated: false
    put:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistoryById
      operationId: FamilyMemberHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyMemberHistory'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistoryById
      operationId: FamilyMemberHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /FamilyMemberHistory/{id}/_history:
    get:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistoryHistoryById
      operationId: FamilyMemberHistoryHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /FamilyMemberHistory/_history:
    get:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistoryHistory
      operationId: FamilyMemberHistoryHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /FamilyMemberHistory/{id}/_history/{vid}:
    get:
      tags:
      - FamilyMemberHistory
      summary: FamilyMemberHistoryHistoryByIdAndVid
      operationId: FamilyMemberHistoryHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyMemberHistory'
      deprecated: false
  /Flag:
    post:
      tags:
      - Flag
      summary: Flag
      operationId: Flag
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flag'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Flag
      summary: Flag
      operationId: Flag
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: Flag creator
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The identity of a subject to list flags for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: Business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flag'
                description: Success
      deprecated: false
  /Flag/{id}:
    get:
      tags:
      - Flag
      summary: FlagById
      operationId: FlagById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
      deprecated: false
    put:
      tags:
      - Flag
      summary: FlagById
      operationId: FlagById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flag'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Flag
      summary: FlagById
      operationId: FlagById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Flag/{id}/_history:
    get:
      tags:
      - Flag
      summary: FlagHistoryById
      operationId: FlagHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Flag/_history:
    get:
      tags:
      - Flag
      summary: FlagHistory
      operationId: FlagHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Flag/{id}/_history/{vid}:
    get:
      tags:
      - Flag
      summary: FlagHistoryByIdAndVid
      operationId: FlagHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
      deprecated: false
  /Goal:
    post:
      tags:
      - Goal
      summary: Goal
      operationId: Goal
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Goal
      summary: Goal
      operationId: Goal
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who this goal is intended for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: E.g. Treatment, dietary, behavioral, etc.
        style: form
        explode: true
        schema:
          type: string
      - name: start-date
        in: query
        description: When goal pursuit begins
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: status
        in: query
        description: proposed | accepted | planned | in-progress | on-target | ahead-of-target | behind-target | sustaining | achieved | on-hold | cancelled | entered-in-error | rejected
        style: form
        explode: true
        schema:
          type: string
      - name: target-date
        in: query
        description: Reach goal on or before
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
                description: Success
      deprecated: false
  /Goal/{id}:
    get:
      tags:
      - Goal
      summary: GoalById
      operationId: GoalById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      deprecated: false
    put:
      tags:
      - Goal
      summary: GoalById
      operationId: GoalById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Goal
      summary: GoalById
      operationId: GoalById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Goal/{id}/_history:
    get:
      tags:
      - Goal
      summary: GoalHistoryById
      operationId: GoalHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Goal/_history:
    get:
      tags:
      - Goal
      summary: GoalHistory
      operationId: GoalHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Goal/{id}/_history/{vid}:
    get:
      tags:
      - Goal
      summary: GoalHistoryByIdAndVid
      operationId: GoalHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      deprecated: false
  /GraphDefinition:
    post:
      tags:
      - GraphDefinition
      summary: GraphDefinition
      operationId: GraphDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - GraphDefinition
      summary: GraphDefinition
      operationId: GraphDefinition
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The graph definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the graph definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the graph definition
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the graph definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the graph definition
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        description: Type of resource at which the graph starts
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the graph definition
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the graph definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the graph definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /GraphDefinition/{id}:
    get:
      tags:
      - GraphDefinition
      summary: GraphDefinitionById
      operationId: GraphDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - GraphDefinition
      summary: GraphDefinitionById
      operationId: GraphDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - GraphDefinition
      summary: GraphDefinitionById
      operationId: GraphDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /GraphDefinition/{id}/_history:
    get:
      tags:
      - GraphDefinition
      summary: GraphDefinitionHistoryById
      operationId: GraphDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /GraphDefinition/_history:
    get:
      tags:
      - GraphDefinition
      summary: GraphDefinitionHistory
      operationId: GraphDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /GraphDefinition/{id}/_history/{vid}:
    get:
      tags:
      - GraphDefinition
      summary: GraphDefinitionHistoryByIdAndVid
      operationId: GraphDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Group:
    post:
      tags:
      - Group
      summary: Group
      operationId: Group
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Group
      summary: Group
      operationId: Group
      parameters:
      - name: member
        in: query
        description: Reference to the group member
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: actual
        in: query
        description: Descriptive or actual
        style: form
        explode: true
        schema:
          type: string
      - name: characteristic
        in: query
        description: Kind of characteristic
        style: form
        explode: true
        schema:
          type: string
      - name: characteristic-value
        in: query
        description: A composite of both characteristic and value
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: The kind of resources contained
        style: form
        explode: true
        schema:
          type: string
      - name: exclude
        in: query
        description: Group includes or excludes
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Unique id
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of resources the group contains
        style: form
        explode: true
        schema:
          type: string
      - name: value
        in: query
        description: Value held by characteristic
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                description: Success
      deprecated: false
  /Group/{id}:
    get:
      tags:
      - Group
      summary: GroupById
      operationId: GroupById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      deprecated: false
    put:
      tags:
      - Group
      summary: GroupById
      operationId: GroupById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Group
      summary: GroupById
      operationId: GroupById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Group/{id}/_history:
    get:
      tags:
      - Group
      summary: GroupHistoryById
      operationId: GroupHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Group/_history:
    get:
      tags:
      - Group
      summary: GroupHistory
      operationId: GroupHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Group/{id}/_history/{vid}:
    get:
      tags:
      - Group
      summary: GroupHistoryByIdAndVid
      operationId: GroupHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      deprecated: false
  /GuidanceResponse:
    post:
      tags:
      - GuidanceResponse
      summary: GuidanceResponse
      operationId: GuidanceResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuidanceResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - GuidanceResponse
      summary: GuidanceResponse
      operationId: GuidanceResponse
      parameters:
      - name: patient
        in: query
        description: The identity of a patient to search for guidance response results
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject that the guidance response is about
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The identifier of the guidance response
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The identifier of the request associated with the response
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GuidanceResponse'
                description: Success
      deprecated: false
  /GuidanceResponse/{id}:
    get:
      tags:
      - GuidanceResponse
      summary: GuidanceResponseById
      operationId: GuidanceResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidanceResponse'
      deprecated: false
    put:
      tags:
      - GuidanceResponse
      summary: GuidanceResponseById
      operationId: GuidanceResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuidanceResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - GuidanceResponse
      summary: GuidanceResponseById
      operationId: GuidanceResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /GuidanceResponse/{id}/_history:
    get:
      tags:
      - GuidanceResponse
      summary: GuidanceResponseHistoryById
      operationId: GuidanceResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /GuidanceResponse/_history:
    get:
      tags:
      - GuidanceResponse
      summary: GuidanceResponseHistory
      operationId: GuidanceResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /GuidanceResponse/{id}/_history/{vid}:
    get:
      tags:
      - GuidanceResponse
      summary: GuidanceResponseHistoryByIdAndVid
      operationId: GuidanceResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidanceResponse'
      deprecated: false
  /HealthcareService:
    post:
      tags:
      - HealthcareService
      summary: HealthcareService
      operationId: HealthcareService
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthcareService'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - HealthcareService
      summary: HealthcareService
      operationId: HealthcareService
      parameters:
      - name: endpoint
        in: query
        description: Technical endpoints providing access to services operated for the location
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: The location of the Healthcare Service
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization that provides this Healthcare Service
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: The Healthcare Service is currently marked as active
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Service Category of the Healthcare Service
        style: form
        explode: true
        schema:
          type: string
      - name: characteristic
        in: query
        description: One of the HealthcareService's characteristics
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifiers for this item
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A portion of the Healthcare service name
        style: form
        explode: true
        schema:
          type: string
      - name: programname
        in: query
        description: One of the Program Names serviced by this HealthcareService
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of service provided by this healthcare service
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthcareService'
                description: Success
      deprecated: false
  /HealthcareService/{id}:
    get:
      tags:
      - HealthcareService
      summary: HealthcareServiceById
      operationId: HealthcareServiceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcareService'
      deprecated: false
    put:
      tags:
      - HealthcareService
      summary: HealthcareServiceById
      operationId: HealthcareServiceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthcareService'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - HealthcareService
      summary: HealthcareServiceById
      operationId: HealthcareServiceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /HealthcareService/{id}/_history:
    get:
      tags:
      - HealthcareService
      summary: HealthcareServiceHistoryById
      operationId: HealthcareServiceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /HealthcareService/_history:
    get:
      tags:
      - HealthcareService
      summary: HealthcareServiceHistory
      operationId: HealthcareServiceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /HealthcareService/{id}/_history/{vid}:
    get:
      tags:
      - HealthcareService
      summary: HealthcareServiceHistoryByIdAndVid
      operationId: HealthcareServiceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcareService'
      deprecated: false
  /ImagingManifest:
    post:
      tags:
      - ImagingManifest
      summary: ImagingManifest
      operationId: ImagingManifest
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ImagingManifest
      summary: ImagingManifest
      operationId: ImagingManifest
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: Author of the ImagingManifest (or a DICOM Key Object Selection which it represents)
        style: form
        explode: true
        schema:
          type: string
      - name: endpoint
        in: query
        description: The endpoint for the study or series
        style: form
        explode: true
        schema:
          type: string
      - name: imaging-study
        in: query
        description: ImagingStudy resource selected in the ImagingManifest (or a DICOM Key Object Selection which it represents)
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: authoring-time
        in: query
        description: Time of the ImagingManifest (or a DICOM Key Object Selection which it represents) authoring
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: UID of the ImagingManifest (or a DICOM Key Object Selection which it represents)
        style: form
        explode: true
        schema:
          type: string
      - name: selected-study
        in: query
        description: Study selected in the ImagingManifest (or a DICOM Key Object Selection which it represents)
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ImagingManifest/{id}:
    get:
      tags:
      - ImagingManifest
      summary: ImagingManifestById
      operationId: ImagingManifestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - ImagingManifest
      summary: ImagingManifestById
      operationId: ImagingManifestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ImagingManifest
      summary: ImagingManifestById
      operationId: ImagingManifestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImagingManifest/{id}/_history:
    get:
      tags:
      - ImagingManifest
      summary: ImagingManifestHistoryById
      operationId: ImagingManifestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImagingManifest/_history:
    get:
      tags:
      - ImagingManifest
      summary: ImagingManifestHistory
      operationId: ImagingManifestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImagingManifest/{id}/_history/{vid}:
    get:
      tags:
      - ImagingManifest
      summary: ImagingManifestHistoryByIdAndVid
      operationId: ImagingManifestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ImagingStudy:
    post:
      tags:
      - ImagingStudy
      summary: ImagingStudy
      operationId: ImagingStudy
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagingStudy'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ImagingStudy
      summary: ImagingStudy
      operationId: ImagingStudy
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: basedon
        in: query
        description: The order for the image
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: The context of the study
        style: form
        explode: true
        schema:
          type: string
      - name: endpoint
        in: query
        description: The endpoint for te study or series
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: The person who performed the study
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: accession
        in: query
        description: The accession identifier for the study
        style: form
        explode: true
        schema:
          type: string
      - name: bodysite
        in: query
        description: The body site studied
        style: form
        explode: true
        schema:
          type: string
      - name: dicom-class
        in: query
        description: The type of the instance
        style: form
        explode: true
        schema:
          type: string
      - name: modality
        in: query
        description: The modality of the series
        style: form
        explode: true
        schema:
          type: string
      - name: reason
        in: query
        description: The reason for the study
        style: form
        explode: true
        schema:
          type: string
      - name: series
        in: query
        description: The identifier of the series of images
        style: form
        explode: true
        schema:
          type: string
      - name: started
        in: query
        description: When the study was started
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: study
        in: query
        description: The study identifier for the image
        style: form
        explode: true
        schema:
          type: string
      - name: uid
        in: query
        description: The instance unique identifier
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImagingStudy'
                description: Success
      deprecated: false
  /ImagingStudy/{id}:
    get:
      tags:
      - ImagingStudy
      summary: ImagingStudyById
      operationId: ImagingStudyById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagingStudy'
      deprecated: false
    put:
      tags:
      - ImagingStudy
      summary: ImagingStudyById
      operationId: ImagingStudyById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagingStudy'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ImagingStudy
      summary: ImagingStudyById
      operationId: ImagingStudyById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImagingStudy/{id}/_history:
    get:
      tags:
      - ImagingStudy
      summary: ImagingStudyHistoryById
      operationId: ImagingStudyHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImagingStudy/_history:
    get:
      tags:
      - ImagingStudy
      summary: ImagingStudyHistory
      operationId: ImagingStudyHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImagingStudy/{id}/_history/{vid}:
    get:
      tags:
      - ImagingStudy
      summary: ImagingStudyHistoryByIdAndVid
      operationId: ImagingStudyHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagingStudy'
      deprecated: false
  /Immunization:
    post:
      tags:
      - Immunization
      summary: Immunization
      operationId: Immunization
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Immunization'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Immunization
      summary: Immunization
      operationId: Immunization
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: The service delivery location or facility in which the vaccine was / was to be administered
        style: form
        explode: true
        schema:
          type: string
      - name: manufacturer
        in: query
        description: Vaccine Manufacturer
        style: form
        explode: true
        schema:
          type: string
      - name: practitioner
        in: query
        description: The practitioner who played a role in the vaccination
        style: form
        explode: true
        schema:
          type: string
      - name: reaction
        in: query
        description: Additional information on reaction
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: dose-sequence
        in: query
        description: Dose number within series
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: lot-number
        in: query
        description: Vaccine Lot Number
        style: form
        explode: true
        schema:
          type: string
      - name: notgiven
        in: query
        description: Administrations which were not given
        style: form
        explode: true
        schema:
          type: string
      - name: reaction-date
        in: query
        description: When reaction started
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: reason
        in: query
        description: Why immunization occurred
        style: form
        explode: true
        schema:
          type: string
      - name: reason-not-given
        in: query
        description: Explanation of reason vaccination was not administered
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Immunization event status
        style: form
        explode: true
        schema:
          type: string
      - name: vaccine-code
        in: query
        description: Vaccine Product Administered
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Immunization'
                description: Success
      deprecated: false
  /Immunization/{id}:
    get:
      tags:
      - Immunization
      summary: ImmunizationById
      operationId: ImmunizationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Immunization'
      deprecated: false
    put:
      tags:
      - Immunization
      summary: ImmunizationById
      operationId: ImmunizationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Immunization'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Immunization
      summary: ImmunizationById
      operationId: ImmunizationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Immunization/{id}/_history:
    get:
      tags:
      - Immunization
      summary: ImmunizationHistoryById
      operationId: ImmunizationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Immunization/_history:
    get:
      tags:
      - Immunization
      summary: ImmunizationHistory
      operationId: ImmunizationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Immunization/{id}/_history/{vid}:
    get:
      tags:
      - Immunization
      summary: ImmunizationHistoryByIdAndVid
      operationId: ImmunizationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Immunization'
      deprecated: false
  /ImmunizationRecommendation:
    post:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendation
      operationId: ImmunizationRecommendation
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmunizationRecommendation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendation
      operationId: ImmunizationRecommendation
      parameters:
      - name: information
        in: query
        description: Patient observations supporting recommendation
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Who this profile is for
        style: form
        explode: true
        schema:
          type: string
      - name: support
        in: query
        description: Past immunizations supporting recommendation
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: Date recommendation created
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: dose-number
        in: query
        description: Recommended dose number
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: dose-sequence
        in: query
        description: Dose number within sequence
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: identifier
        in: query
        description: Business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Vaccine administration status
        style: form
        explode: true
        schema:
          type: string
      - name: target-disease
        in: query
        description: Disease to be immunized against
        style: form
        explode: true
        schema:
          type: string
      - name: vaccine-type
        in: query
        description: Vaccine recommendation applies to
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImmunizationRecommendation'
                description: Success
      deprecated: false
  /ImmunizationRecommendation/{id}:
    get:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendationById
      operationId: ImmunizationRecommendationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmunizationRecommendation'
      deprecated: false
    put:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendationById
      operationId: ImmunizationRecommendationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmunizationRecommendation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendationById
      operationId: ImmunizationRecommendationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImmunizationRecommendation/{id}/_history:
    get:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendationHistoryById
      operationId: ImmunizationRecommendationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImmunizationRecommendation/_history:
    get:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendationHistory
      operationId: ImmunizationRecommendationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImmunizationRecommendation/{id}/_history/{vid}:
    get:
      tags:
      - ImmunizationRecommendation
      summary: ImmunizationRecommendationHistoryById
      operationId: GetImmunizationRecommendationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmunizationRecommendation'
      deprecated: false
  /ImplementationGuide:
    post:
      tags:
      - ImplementationGuide
      summary: ImplementationGuide
      operationId: ImplementationGuide
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImplementationGuide'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ImplementationGuide
      summary: ImplementationGuide
      operationId: ImplementationGuide
      parameters:
      - name: resource
        in: query
        description: Location of the resource
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The implementation guide publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: dependency
        in: query
        description: Where to find dependency
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: The description of the implementation guide
        style: form
        explode: true
        schema:
          type: string
      - name: experimental
        in: query
        description: For testing purposes, not real usage
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the implementation guide
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the implementation guide
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the implementation guide
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the implementation guide
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the implementation guide
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the implementation guide
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImplementationGuide'
                description: Success
      deprecated: false
  /ImplementationGuide/{id}:
    get:
      tags:
      - ImplementationGuide
      summary: ImplementationGuideById
      operationId: ImplementationGuideById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImplementationGuide'
      deprecated: false
    put:
      tags:
      - ImplementationGuide
      summary: ImplementationGuideById
      operationId: ImplementationGuideById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImplementationGuide'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ImplementationGuide
      summary: ImplementationGuideById
      operationId: ImplementationGuideById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImplementationGuide/{id}/_history:
    get:
      tags:
      - ImplementationGuide
      summary: ImplementationGuideHistoryById
      operationId: ImplementationGuideHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImplementationGuide/_history:
    get:
      tags:
      - ImplementationGuide
      summary: ImplementationGuideHistory
      operationId: ImplementationGuideHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ImplementationGuide/{id}/_history/{vid}:
    get:
      tags:
      - ImplementationGuide
      summary: ImplementationGuideHistoryByIdAndVid
      operationId: ImplementationGuideHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImplementationGuide'
      deprecated: false
  /Library:
    post:
      tags:
      - Library
      summary: Library
      operationId: Library
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Library
      summary: Library
      operationId: Library
      parameters:
      - name: composed-of
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: depends-on
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: derived-from
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: predecessor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: successor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The library publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the library
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the library is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the library
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the library
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the library
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the library
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the library
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the library
        style: form
        explode: true
        schema:
          type: string
      - name: topic
        in: query
        description: Topics associated with the module
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the library
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the library
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
                description: Success
      deprecated: false
  /Library/{id}:
    get:
      tags:
      - Library
      summary: LibraryById
      operationId: LibraryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
      deprecated: false
    put:
      tags:
      - Library
      summary: LibraryById
      operationId: LibraryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Library
      summary: LibraryById
      operationId: LibraryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Library/{id}/_history:
    get:
      tags:
      - Library
      summary: LibraryHistoryById
      operationId: LibraryHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Library/_history:
    get:
      tags:
      - Library
      summary: LibraryHistory
      operationId: LibraryHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Library/{id}/_history/{vid}:
    get:
      tags:
      - Library
      summary: LibraryHistoryByIdAndVid
      operationId: LibraryHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
      deprecated: false
  /Linkage:
    post:
      tags:
      - Linkage
      summary: Linkage
      operationId: Linkage
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Linkage'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Linkage
      summary: Linkage
      operationId: Linkage
      parameters:
      - name: author
        in: query
        description: Author of the Linkage
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: item
        in: query
        description: Matches on any item in the Linkage
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: Matches on any item in the Linkage with a type of 'source'
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Linkage'
                description: Success
      deprecated: false
  /Linkage/{id}:
    get:
      tags:
      - Linkage
      summary: LinkageById
      operationId: LinkageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linkage'
      deprecated: false
    put:
      tags:
      - Linkage
      summary: LinkageById
      operationId: LinkageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Linkage'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Linkage
      summary: LinkageById
      operationId: LinkageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Linkage/{id}/_history:
    get:
      tags:
      - Linkage
      summary: LinkageHistoryById
      operationId: LinkageHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Linkage/_history:
    get:
      tags:
      - Linkage
      summary: LinkageHistory
      operationId: LinkageHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Linkage/{id}/_history/{vid}:
    get:
      tags:
      - Linkage
      summary: LinkageHistoryByIdAndVid
      operationId: LinkageHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linkage'
      deprecated: false
  /List:
    post:
      tags:
      - List
      summary: List
      operationId: List
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - List
      summary: List
      operationId: List
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: item
        in: query
        description: Actual entry
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: Who and/or what defined the list contents (aka Author)
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: If all resources have the same subject
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: empty-reason
        in: query
        description: Why list is empty
        style: form
        explode: true
        schema:
          type: string
      - name: notes
        in: query
        description: The annotation  - text content
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: current | retired | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: Descriptive name for the list
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
                description: Success
      deprecated: false
  /List/{id}:
    get:
      tags:
      - List
      summary: ListById
      operationId: ListById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
      deprecated: false
    put:
      tags:
      - List
      summary: ListById
      operationId: ListById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - List
      summary: ListById
      operationId: ListById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /List/{id}/_history:
    get:
      tags:
      - List
      summary: ListHistoryById
      operationId: ListHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /List/_history:
    get:
      tags:
      - List
      summary: ListHistory
      operationId: ListHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /List/{id}/_history/{vid}:
    get:
      tags:
      - List
      summary: ListHistoryByIdAndVid
      operationId: ListHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
      deprecated: false
  /Location:
    post:
      tags:
      - Location
      summary: Location
      operationId: Location
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Location
      summary: Location
      operationId: Location
      parameters:
      - name: endpoint
        in: query
        description: Technical endpoints providing access to services operated for the location
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: Searches for locations that are managed by the provided organization
        style: form
        explode: true
        schema:
          type: string
      - name: partof
        in: query
        description: A location of which this location is a part
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: A (part of the) address of the location
        style: form
        explode: true
        schema:
          type: string
      - name: address-city
        in: query
        description: A city specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-country
        in: query
        description: A country specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-postalcode
        in: query
        description: A postal code specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-state
        in: query
        description: A state specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-use
        in: query
        description: A use code specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: An identifier for the location
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A portion of the location's name or alias
        style: form
        explode: true
        schema:
          type: string
      - name: near
        in: query
        description: >-
          The coordinates expressed as [latitude]:[longitude] (using the WGS84 datum, see notes) to find locations near to (servers may search using a square rather than a circle for efficiency)


          Requires the near-distance parameter to be provided also
        style: form
        explode: true
        schema:
          type: string
      - name: near-distance
        in: query
        description: >-
          A distance quantity to limit the near search to locations within a specific distance


          Requires the near parameter to also be included
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: operational-status
        in: query
        description: Searches for locations (typically bed/room) that have an operational status (e.g. contaminated, housekeeping)
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Searches for locations with a specific kind of status
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: A code for the type of location
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
                description: Success
      deprecated: false
  /Location/{id}:
    get:
      tags:
      - Location
      summary: LocationById
      operationId: LocationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      deprecated: false
    put:
      tags:
      - Location
      summary: LocationById
      operationId: LocationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Location
      summary: LocationById
      operationId: LocationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Location/{id}/_history:
    get:
      tags:
      - Location
      summary: LocationHistoryById
      operationId: LocationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Location/_history:
    get:
      tags:
      - Location
      summary: LocationHistory
      operationId: LocationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Location/{id}/_history/{vid}:
    get:
      tags:
      - Location
      summary: LocationHistoryByIdAndVid
      operationId: LocationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      deprecated: false
  /Measure:
    post:
      tags:
      - Measure
      summary: Measure
      operationId: Measure
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Measure
      summary: Measure
      operationId: Measure
      parameters:
      - name: composed-of
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: depends-on
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: derived-from
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: predecessor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: successor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The measure publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the measure
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the measure is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the measure
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the measure
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the measure
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the measure
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the measure
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the measure
        style: form
        explode: true
        schema:
          type: string
      - name: topic
        in: query
        description: Topics associated with the module
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the measure
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the measure
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Measure/{id}:
    get:
      tags:
      - Measure
      summary: MeasureById
      operationId: MeasureById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - Measure
      summary: MeasureById
      operationId: MeasureById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Measure
      summary: MeasureById
      operationId: MeasureById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Measure/{id}/_history:
    get:
      tags:
      - Measure
      summary: MeasureHistoryById
      operationId: MeasureHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Measure/_history:
    get:
      tags:
      - Measure
      summary: MeasureHistory
      operationId: MeasureHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Measure/{id}/_history/{vid}:
    get:
      tags:
      - Measure
      summary: MeasureHistoryByIdAndVid
      operationId: MeasureHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /MeasureReport:
    post:
      tags:
      - MeasureReport
      summary: MeasureReport
      operationId: MeasureReport
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - MeasureReport
      summary: MeasureReport
      operationId: MeasureReport
      parameters:
      - name: patient
        in: query
        description: The identity of a patient to search for individual measure report results for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier of the measure report to be returned
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The status of the measure report
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /MeasureReport/{id}:
    get:
      tags:
      - MeasureReport
      summary: MeasureReportById
      operationId: MeasureReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - MeasureReport
      summary: MeasureReportById
      operationId: MeasureReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - MeasureReport
      summary: MeasureReportById
      operationId: MeasureReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MeasureReport/{id}/_history:
    get:
      tags:
      - MeasureReport
      summary: MeasureReportHistoryById
      operationId: MeasureReportHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MeasureReport/_history:
    get:
      tags:
      - MeasureReport
      summary: MeasureReportHistory
      operationId: MeasureReportHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MeasureReport/{id}/_history/{vid}:
    get:
      tags:
      - MeasureReport
      summary: MeasureReportHistoryByIdAndVid
      operationId: MeasureReportHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Media:
    post:
      tags:
      - Media
      summary: Media
      operationId: Media
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Media
      summary: Media
      operationId: Media
      parameters:
      - name: based-on
        in: query
        description: Procedure that caused this media to be created
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter / Episode associated with media
        style: form
        explode: true
        schema:
          type: string
      - name: device
        in: query
        description: Observing Device
        style: form
        explode: true
        schema:
          type: string
      - name: operator
        in: query
        description: The person who generated the image
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Who/What this Media is a record of
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who/What this Media is a record of
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: Date attachment was first created
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: date
        in: query
        description: When Media was collected
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: Identifier(s) for the image
        style: form
        explode: true
        schema:
          type: string
      - name: site
        in: query
        description: Body part in media
        style: form
        explode: true
        schema:
          type: string
      - name: subtype
        in: query
        description: The type of acquisition equipment/process
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: photo | video | audio
        style: form
        explode: true
        schema:
          type: string
      - name: view
        in: query
        description: Imaging view, e.g. Lateral or Antero-posterior
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
                description: Success
      deprecated: false
  /Media/{id}:
    get:
      tags:
      - Media
      summary: MediaById
      operationId: MediaById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
      deprecated: false
    put:
      tags:
      - Media
      summary: MediaById
      operationId: MediaById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Media
      summary: MediaById
      operationId: MediaById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Media/{id}/_history:
    get:
      tags:
      - Media
      summary: MediaHistoryById
      operationId: MediaHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Media/_history:
    get:
      tags:
      - Media
      summary: MediaHistory
      operationId: MediaHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Media/{id}/_history/{vid}:
    get:
      tags:
      - Media
      summary: MediaHistoryByIdAndVid
      operationId: MediaHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
      deprecated: false
  /Medication:
    post:
      tags:
      - Medication
      summary: Medication
      operationId: Medication
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medication'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Medication
      summary: Medication
      operationId: Medication
      parameters:
      - name: ingredient
        in: query
        description: The product contained
        style: form
        explode: true
        schema:
          type: string
      - name: manufacturer
        in: query
        description: Manufacturer of the item
        style: form
        explode: true
        schema:
          type: string
      - name: package-item
        in: query
        description: The item in the package
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code"
        style: form
        explode: true
        schema:
          type: string
      - name: container
        in: query
        description: E.g. box, vial, blister-pack
        style: form
        explode: true
        schema:
          type: string
      - name: form
        in: query
        description: powder | tablets | capsule +
        style: form
        explode: true
        schema:
          type: string
      - name: ingredient-code
        in: query
        description: The product contained
        style: form
        explode: true
        schema:
          type: string
      - name: over-the-counter
        in: query
        description: True if medication does not require a prescription
        style: form
        explode: true
        schema:
          type: string
      - name: package-item-code
        in: query
        description: The item in the package
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: active | inactive | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
                description: Success
      deprecated: false
  /Medication/{id}:
    get:
      tags:
      - Medication
      summary: MedicationById
      operationId: MedicationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
      deprecated: false
    put:
      tags:
      - Medication
      summary: MedicationById
      operationId: MedicationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medication'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Medication
      summary: MedicationById
      operationId: MedicationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Medication/{id}/_history:
    get:
      tags:
      - Medication
      summary: MedicationHistoryById
      operationId: MedicationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Medication/_history:
    get:
      tags:
      - Medication
      summary: MedicationHistory
      operationId: MedicationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Medication/{id}/_history/{vid}:
    get:
      tags:
      - Medication
      summary: MedicationHistoryByIdAndVid
      operationId: MedicationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
      deprecated: false
  /MedicationAdministration:
    post:
      tags:
      - MedicationAdministration
      summary: MedicationAdministration
      operationId: MedicationAdministration
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationAdministration'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - MedicationAdministration
      summary: MedicationAdministration
      operationId: MedicationAdministration
      parameters:
      - name: context
        in: query
        description: Return administrations that share this encounter or episode of care
        style: form
        explode: true
        schema:
          type: string
      - name: device
        in: query
        description: Return administrations with this administration device identity
        style: form
        explode: true
        schema:
          type: string
      - name: medication
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource"
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for"
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: The identify of the individual who administered the medication
        style: form
        explode: true
        schema:
          type: string
      - name: prescription
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): The identity of a prescription to list administrations from\r\n* [MedicationDispense](medicationdispense.html): The identity of a prescription to list dispenses from"
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The identify of the individual or group to list administrations for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code"
        style: form
        explode: true
        schema:
          type: string
      - name: effective-time
        in: query
        description: Date administration happened (or did not happen)
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: not-given
        in: query
        description: Administrations that were not made
        style: form
        explode: true
        schema:
          type: string
      - name: reason-given
        in: query
        description: Reasons for administering the medication
        style: form
        explode: true
        schema:
          type: string
      - name: reason-not-given
        in: query
        description: Reasons for not administering the medication
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status"
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationAdministration'
                description: Success
      deprecated: false
  /MedicationAdministration/{id}:
    get:
      tags:
      - MedicationAdministration
      summary: MedicationAdministrationById
      operationId: MedicationAdministrationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationAdministration'
      deprecated: false
    put:
      tags:
      - MedicationAdministration
      summary: MedicationAdministrationById
      operationId: MedicationAdministrationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationAdministration'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - MedicationAdministration
      summary: MedicationAdministrationById
      operationId: MedicationAdministrationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationAdministration/{id}/_history:
    get:
      tags:
      - MedicationAdministration
      summary: MedicationAdministrationHistoryById
      operationId: MedicationAdministrationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationAdministration/_history:
    get:
      tags:
      - MedicationAdministration
      summary: MedicationAdministrationHistory
      operationId: MedicationAdministrationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationAdministration/{id}/_history/{vid}:
    get:
      tags:
      - MedicationAdministration
      summary: MedicationAdministrationHistoryById
      operationId: GetMedicationAdministrationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationAdministration'
      deprecated: false
  /MedicationDispense:
    post:
      tags:
      - MedicationDispense
      summary: MedicationDispense
      operationId: MedicationDispense
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationDispense'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - MedicationDispense
      summary: MedicationDispense
      operationId: MedicationDispense
      parameters:
      - name: medication
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource"
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for"
        style: form
        explode: true
        schema:
          type: string
      - name: prescription
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationAdministration](medicationadministration.html): The identity of a prescription to list administrations from\r\n* [MedicationDispense](medicationdispense.html): The identity of a prescription to list dispenses from"
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Returns dispenses with a specific context (episode or episode of care)
        style: form
        explode: true
        schema:
          type: string
      - name: destination
        in: query
        description: Return dispenses that should be sent to a specific destination
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Return dispenses performed by a specific individual
        style: form
        explode: true
        schema:
          type: string
      - name: receiver
        in: query
        description: The identity of a receiver to list dispenses for
        style: form
        explode: true
        schema:
          type: string
      - name: responsibleparty
        in: query
        description: Return dispenses with the specified responsible party
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The identity of a patient to list dispenses  for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status"
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Return dispenses of a specific type
        style: form
        explode: true
        schema:
          type: string
      - name: whenhandedover
        in: query
        description: Returns dispenses handed over on this date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: whenprepared
        in: query
        description: Returns dispenses prepared on this date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationDispense'
                description: Success
      deprecated: false
  /MedicationDispense/{id}:
    get:
      tags:
      - MedicationDispense
      summary: MedicationDispenseById
      operationId: MedicationDispenseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationDispense'
      deprecated: false
    put:
      tags:
      - MedicationDispense
      summary: MedicationDispenseById
      operationId: MedicationDispenseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationDispense'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - MedicationDispense
      summary: MedicationDispenseById
      operationId: MedicationDispenseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationDispense/{id}/_history:
    get:
      tags:
      - MedicationDispense
      summary: MedicationDispenseHistoryById
      operationId: MedicationDispenseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationDispense/_history:
    get:
      tags:
      - MedicationDispense
      summary: MedicationDispenseHistory
      operationId: MedicationDispenseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationDispense/{id}/_history/{vid}:
    get:
      tags:
      - MedicationDispense
      summary: MedicationDispenseHistoryByIdAndVid
      operationId: MedicationDispenseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationDispense'
      deprecated: false
  /MedicationRequest:
    post:
      tags:
      - MedicationRequest
      summary: MedicationRequest
      operationId: MedicationRequest
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - MedicationRequest
      summary: MedicationRequest
      operationId: MedicationRequest
      parameters:
      - name: medication
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource"
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for"
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Return prescriptions with this encounter or episode of care identifier
        style: form
        explode: true
        schema:
          type: string
      - name: intended-dispenser
        in: query
        description: Returns prescriptions intended to be dispensed by this Organization
        style: form
        explode: true
        schema:
          type: string
      - name: requester
        in: query
        description: Returns prescriptions prescribed by this prescriber
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The identity of a patient to list orders  for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status"
        style: form
        explode: true
        schema:
          type: string
      - name: authoredon
        in: query
        description: Return prescriptions written on this date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: category
        in: query
        description: Returns prescriptions with different categories
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns medication request to be administered on a specific date"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: intent
        in: query
        description: Returns prescriptions with different intents
        style: form
        explode: true
        schema:
          type: string
      - name: priority
        in: query
        description: Returns prescriptions with different priorities
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /MedicationRequest/{id}:
    get:
      tags:
      - MedicationRequest
      summary: MedicationRequestById
      operationId: MedicationRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - MedicationRequest
      summary: MedicationRequestById
      operationId: MedicationRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - MedicationRequest
      summary: MedicationRequestById
      operationId: MedicationRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationRequest/{id}/_history:
    get:
      tags:
      - MedicationRequest
      summary: MedicationRequestHistoryById
      operationId: MedicationRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationRequest/_history:
    get:
      tags:
      - MedicationRequest
      summary: MedicationRequestHistory
      operationId: MedicationRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationRequest/{id}/_history/{vid}:
    get:
      tags:
      - MedicationRequest
      summary: MedicationRequestHistoryByIdAndVid
      operationId: MedicationRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /MedicationStatement:
    post:
      tags:
      - MedicationStatement
      summary: MedicationStatement
      operationId: MedicationStatement
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationStatement'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - MedicationStatement
      summary: MedicationStatement
      operationId: MedicationStatement
      parameters:
      - name: medication
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication reference\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication resource\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication reference\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine resource"
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for"
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Returns statements for a specific context (episode or episode of Care).
        style: form
        explode: true
        schema:
          type: string
      - name: part-of
        in: query
        description: Returns statements that are part of another event.
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: Who or where the information in the statement came from
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The identity of a patient, animal or group to list statements for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [Medication](medication.html): Codes that identify this medication\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [MedicationDispense](medicationdispense.html): Return dispenses of this medicine code"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with this external identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: "Multiple Resources: \r\n\r\n* [MedicationRequest](medicationrequest.html): Status of the prescription\r\n* [MedicationAdministration](medicationadministration.html): MedicationAdministration event status (for example one of active/paused/completed/nullified)\r\n* [MedicationStatement](medicationstatement.html): Return statements that match the given status\r\n* [MedicationDispense](medicationdispense.html): Return dispenses with a specified dispense status"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Returns statements of this category of medicationstatement
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: Date when patient was taking (or not taking) the medication
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationStatement'
                description: Success
      deprecated: false
  /MedicationStatement/{id}:
    get:
      tags:
      - MedicationStatement
      summary: MedicationStatementById
      operationId: MedicationStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationStatement'
      deprecated: false
    put:
      tags:
      - MedicationStatement
      summary: MedicationStatementById
      operationId: MedicationStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationStatement'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - MedicationStatement
      summary: MedicationStatementById
      operationId: MedicationStatementById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationStatement/{id}/_history:
    get:
      tags:
      - MedicationStatement
      summary: MedicationStatementHistoryById
      operationId: MedicationStatementHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationStatement/_history:
    get:
      tags:
      - MedicationStatement
      summary: MedicationStatementHistory
      operationId: MedicationStatementHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MedicationStatement/{id}/_history/{vid}:
    get:
      tags:
      - MedicationStatement
      summary: MedicationStatementHistoryByIdAndVid
      operationId: MedicationStatementHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationStatement'
      deprecated: false
  /MessageDefinition:
    post:
      tags:
      - MessageDefinition
      summary: MessageDefinition
      operationId: MessageDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - MessageDefinition
      summary: MessageDefinition
      operationId: MessageDefinition
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: The behavior associated with the message
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The message definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: event
        in: query
        description: The event that triggers the message
        style: form
        explode: true
        schema:
          type: string
      - name: focus
        in: query
        description: A resource that is a permitted focus of the message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the message definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /MessageDefinition/{id}:
    get:
      tags:
      - MessageDefinition
      summary: MessageDefinitionById
      operationId: MessageDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - MessageDefinition
      summary: MessageDefinitionById
      operationId: MessageDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - MessageDefinition
      summary: MessageDefinitionById
      operationId: MessageDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MessageDefinition/{id}/_history:
    get:
      tags:
      - MessageDefinition
      summary: MessageDefinitionHistoryById
      operationId: MessageDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MessageDefinition/_history:
    get:
      tags:
      - MessageDefinition
      summary: MessageDefinitionHistory
      operationId: MessageDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MessageDefinition/{id}/_history/{vid}:
    get:
      tags:
      - MessageDefinition
      summary: MessageDefinitionHistoryByIdAndVid
      operationId: MessageDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /MessageHeader:
    post:
      tags:
      - MessageHeader
      summary: MessageHeader
      operationId: MessageHeader
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageHeader'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - MessageHeader
      summary: MessageHeader
      operationId: MessageHeader
      parameters:
      - name: author
        in: query
        description: The source of the decision
        style: form
        explode: true
        schema:
          type: string
      - name: enterer
        in: query
        description: The source of the data entry
        style: form
        explode: true
        schema:
          type: string
      - name: focus
        in: query
        description: The actual content of the message
        style: form
        explode: true
        schema:
          type: string
      - name: receiver
        in: query
        description: Intended "real-world" recipient for the data
        style: form
        explode: true
        schema:
          type: string
      - name: responsible
        in: query
        description: Final responsibility for event
        style: form
        explode: true
        schema:
          type: string
      - name: sender
        in: query
        description: Real world sender of the message
        style: form
        explode: true
        schema:
          type: string
      - name: target
        in: query
        description: Particular delivery destination within the destination
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: ok | transient-error | fatal-error
        style: form
        explode: true
        schema:
          type: string
      - name: destination
        in: query
        description: Name of system
        style: form
        explode: true
        schema:
          type: string
      - name: destination-uri
        in: query
        description: Actual destination address or id
        style: form
        explode: true
        schema:
          type: string
      - name: event
        in: query
        description: Code for the event this message represents
        style: form
        explode: true
        schema:
          type: string
      - name: response-id
        in: query
        description: Id of original message
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: Name of system
        style: form
        explode: true
        schema:
          type: string
      - name: source-uri
        in: query
        description: Actual message source address or id
        style: form
        explode: true
        schema:
          type: string
      - name: timestamp
        in: query
        description: Time that the message was sent
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageHeader'
                description: Success
      deprecated: false
  /MessageHeader/{id}:
    get:
      tags:
      - MessageHeader
      summary: MessageHeaderById
      operationId: MessageHeaderById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageHeader'
      deprecated: false
    put:
      tags:
      - MessageHeader
      summary: MessageHeaderById
      operationId: MessageHeaderById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageHeader'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - MessageHeader
      summary: MessageHeaderById
      operationId: MessageHeaderById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MessageHeader/{id}/_history:
    get:
      tags:
      - MessageHeader
      summary: MessageHeaderHistoryById
      operationId: MessageHeaderHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MessageHeader/_history:
    get:
      tags:
      - MessageHeader
      summary: MessageHeaderHistory
      operationId: MessageHeaderHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /MessageHeader/{id}/_history/{vid}:
    get:
      tags:
      - MessageHeader
      summary: MessageHeaderHistoryByIdAndVid
      operationId: MessageHeaderHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageHeader'
      deprecated: false
  /NamingSystem:
    post:
      tags:
      - NamingSystem
      summary: NamingSystem
      operationId: NamingSystem
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamingSystem'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - NamingSystem
      summary: NamingSystem
      operationId: NamingSystem
      parameters:
      - name: replaced-by
        in: query
        description: Use this instead
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: contact
        in: query
        description: Name of an individual to contact
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The naming system publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the naming system
        style: form
        explode: true
        schema:
          type: string
      - name: id-type
        in: query
        description: oid | uuid | uri | other
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the naming system
        style: form
        explode: true
        schema:
          type: string
      - name: kind
        in: query
        description: codesystem | identifier | root
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the naming system
        style: form
        explode: true
        schema:
          type: string
      - name: period
        in: query
        description: When is identifier valid?
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: publisher
        in: query
        description: Name of the publisher of the naming system
        style: form
        explode: true
        schema:
          type: string
      - name: responsible
        in: query
        description: Who maintains system namespace?
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the naming system
        style: form
        explode: true
        schema:
          type: string
      - name: telecom
        in: query
        description: Contact details for individual or organization
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: e.g. driver,  provider,  patient, bank etc.
        style: form
        explode: true
        schema:
          type: string
      - name: value
        in: query
        description: The unique identifier
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamingSystem'
                description: Success
      deprecated: false
  /NamingSystem/{id}:
    get:
      tags:
      - NamingSystem
      summary: NamingSystemById
      operationId: NamingSystemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamingSystem'
      deprecated: false
    put:
      tags:
      - NamingSystem
      summary: NamingSystemById
      operationId: NamingSystemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamingSystem'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - NamingSystem
      summary: NamingSystemById
      operationId: NamingSystemById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /NamingSystem/{id}/_history:
    get:
      tags:
      - NamingSystem
      summary: NamingSystemHistoryById
      operationId: NamingSystemHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /NamingSystem/_history:
    get:
      tags:
      - NamingSystem
      summary: NamingSystemHistory
      operationId: NamingSystemHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /NamingSystem/{id}/_history/{vid}:
    get:
      tags:
      - NamingSystem
      summary: NamingSystemHistoryByIdAndVid
      operationId: NamingSystemHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamingSystem'
      deprecated: false
  /NutritionOrder:
    post:
      tags:
      - NutritionOrder
      summary: NutritionOrder
      operationId: NutritionOrder
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionOrder'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - NutritionOrder
      summary: NutritionOrder
      operationId: NutritionOrder
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The identify of the provider who placed the nutrition order
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: additive
        in: query
        description: Type of module component to add to the feeding
        style: form
        explode: true
        schema:
          type: string
      - name: datetime
        in: query
        description: Return nutrition orders requested on this date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: formula
        in: query
        description: Type of enteral or infant formula
        style: form
        explode: true
        schema:
          type: string
      - name: oraldiet
        in: query
        description: Type of diet that can be consumed orally (i.e., take via the mouth).
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Status of the nutrition order.
        style: form
        explode: true
        schema:
          type: string
      - name: supplement
        in: query
        description: Type of supplement product requested
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NutritionOrder'
                description: Success
      deprecated: false
  /NutritionOrder/{id}:
    get:
      tags:
      - NutritionOrder
      summary: NutritionOrderById
      operationId: NutritionOrderById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionOrder'
      deprecated: false
    put:
      tags:
      - NutritionOrder
      summary: NutritionOrderById
      operationId: NutritionOrderById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NutritionOrder'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - NutritionOrder
      summary: NutritionOrderById
      operationId: NutritionOrderById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /NutritionOrder/{id}/_history:
    get:
      tags:
      - NutritionOrder
      summary: NutritionOrderHistoryById
      operationId: NutritionOrderHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /NutritionOrder/_history:
    get:
      tags:
      - NutritionOrder
      summary: NutritionOrderHistory
      operationId: NutritionOrderHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /NutritionOrder/{id}/_history/{vid}:
    get:
      tags:
      - NutritionOrder
      summary: NutritionOrderHistoryByIdAndVid
      operationId: NutritionOrderHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionOrder'
      deprecated: false
  /Observation:
    post:
      tags:
      - Observation
      summary: Observation
      operationId: Observation
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Observation
      summary: Observation
      operationId: Observation
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: Reference to the test or procedure request.
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Healthcare event  (Episode-of-care or Encounter) related to the observation
        style: form
        explode: true
        schema:
          type: string
      - name: device
        in: query
        description: The Device that generated the observation data.
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Who performed the observation
        style: form
        explode: true
        schema:
          type: string
      - name: related-target
        in: query
        description: Resource that is related to this one
        style: form
        explode: true
        schema:
          type: string
      - name: specimen
        in: query
        description: Specimen used for this observation
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject that the observation is about
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: The classification of the type of observation
        style: form
        explode: true
        schema:
          type: string
      - name: code-value-concept
        in: query
        description: Code and coded value parameter pair
        style: form
        explode: true
        schema:
          type: string
      - name: code-value-date
        in: query
        description: Code and date/time value parameter pair
        style: form
        explode: true
        schema:
          type: string
      - name: code-value-quantity
        in: query
        description: Code and quantity value parameter pair
        style: form
        explode: true
        schema:
          type: string
      - name: code-value-string
        in: query
        description: Code and string value parameter pair
        style: form
        explode: true
        schema:
          type: string
      - name: combo-code
        in: query
        description: The code of the observation type or component type
        style: form
        explode: true
        schema:
          type: string
      - name: combo-code-value-concept
        in: query
        description: Code and coded value parameter pair, including in components
        style: form
        explode: true
        schema:
          type: string
      - name: combo-code-value-quantity
        in: query
        description: Code and quantity value parameter pair, including in components
        style: form
        explode: true
        schema:
          type: string
      - name: combo-data-absent-reason
        in: query
        description: The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.
        style: form
        explode: true
        schema:
          type: string
      - name: combo-value-concept
        in: query
        description: The value or component value of the observation, if the value is a CodeableConcept
        style: form
        explode: true
        schema:
          type: string
      - name: combo-value-quantity
        in: query
        description: The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: component-code
        in: query
        description: The component code of the observation type
        style: form
        explode: true
        schema:
          type: string
      - name: component-code-value-concept
        in: query
        description: Component code and component coded value parameter pair
        style: form
        explode: true
        schema:
          type: string
      - name: component-code-value-quantity
        in: query
        description: Component code and component quantity value parameter pair
        style: form
        explode: true
        schema:
          type: string
      - name: component-data-absent-reason
        in: query
        description: The reason why the expected value in the element Observation.component.value[x] is missing.
        style: form
        explode: true
        schema:
          type: string
      - name: component-value-concept
        in: query
        description: The value of the component observation, if the value is a CodeableConcept
        style: form
        explode: true
        schema:
          type: string
      - name: component-value-quantity
        in: query
        description: The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: data-absent-reason
        in: query
        description: The reason why the expected value in the element Observation.value[x] is missing.
        style: form
        explode: true
        schema:
          type: string
      - name: method
        in: query
        description: The method used for the observation
        style: form
        explode: true
        schema:
          type: string
      - name: related
        in: query
        description: Related Observations - search on related-type and related-target together
        style: form
        explode: true
        schema:
          type: string
      - name: related-type
        in: query
        description: has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The status of the observation
        style: form
        explode: true
        schema:
          type: string
      - name: value-concept
        in: query
        description: The value of the observation, if the value is a CodeableConcept
        style: form
        explode: true
        schema:
          type: string
      - name: value-date
        in: query
        description: The value of the observation, if the value is a date or period of time
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: value-quantity
        in: query
        description: The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: value-string
        in: query
        description: The value of the observation, if the value is a string, and also searches in CodeableConcept.text
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
                description: Success
      deprecated: false
  /Observation/{id}:
    get:
      tags:
      - Observation
      summary: ObservationById
      operationId: ObservationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
      deprecated: false
    put:
      tags:
      - Observation
      summary: ObservationById
      operationId: ObservationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Observation
      summary: ObservationById
      operationId: ObservationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Observation/{id}/_history:
    get:
      tags:
      - Observation
      summary: ObservationHistoryById
      operationId: ObservationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Observation/_history:
    get:
      tags:
      - Observation
      summary: ObservationHistory
      operationId: ObservationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Observation/{id}/_history/{vid}:
    get:
      tags:
      - Observation
      summary: ObservationHistoryByIdAndVid
      operationId: ObservationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
      deprecated: false
  /OperationDefinition:
    post:
      tags:
      - OperationDefinition
      summary: OperationDefinition
      operationId: OperationDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationDefinition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - OperationDefinition
      summary: OperationDefinition
      operationId: OperationDefinition
      parameters:
      - name: base
        in: query
        description: Marks this as a profile of the base
        style: form
        explode: true
        schema:
          type: string
      - name: param-profile
        in: query
        description: Profile on the type
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: Name used to invoke the operation
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The operation definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the operation definition
        style: form
        explode: true
        schema:
          type: string
      - name: instance
        in: query
        description: Invoke on an instance?
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the operation definition
        style: form
        explode: true
        schema:
          type: string
      - name: kind
        in: query
        description: operation | query
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the operation definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the operation definition
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the operation definition
        style: form
        explode: true
        schema:
          type: string
      - name: system
        in: query
        description: Invoke at the system level?
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Invole at the type level?
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the operation definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the operation definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationDefinition'
                description: Success
      deprecated: false
  /OperationDefinition/{id}:
    get:
      tags:
      - OperationDefinition
      summary: OperationDefinitionById
      operationId: OperationDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDefinition'
      deprecated: false
    put:
      tags:
      - OperationDefinition
      summary: OperationDefinitionById
      operationId: OperationDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationDefinition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - OperationDefinition
      summary: OperationDefinitionById
      operationId: OperationDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /OperationDefinition/{id}/_history:
    get:
      tags:
      - OperationDefinition
      summary: OperationDefinitionHistoryById
      operationId: OperationDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /OperationDefinition/_history:
    get:
      tags:
      - OperationDefinition
      summary: OperationDefinitionHistory
      operationId: OperationDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /OperationDefinition/{id}/_history/{vid}:
    get:
      tags:
      - OperationDefinition
      summary: OperationDefinitionHistoryByIdAndVid
      operationId: OperationDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDefinition'
      deprecated: false
  /OperationOutcome:
    post:
      tags:
      - OperationOutcome
      summary: OperationOutcome
      operationId: OperationOutcome
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationOutcome'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - OperationOutcome
      summary: OperationOutcome
      operationId: OperationOutcome
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationOutcome'
                description: Success
      deprecated: false
  /OperationOutcome/{id}:
    get:
      tags:
      - OperationOutcome
      summary: OperationOutcomeById
      operationId: OperationOutcomeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      deprecated: false
    put:
      tags:
      - OperationOutcome
      summary: OperationOutcomeById
      operationId: OperationOutcomeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationOutcome'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - OperationOutcome
      summary: OperationOutcomeById
      operationId: OperationOutcomeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /OperationOutcome/{id}/_history:
    get:
      tags:
      - OperationOutcome
      summary: OperationOutcomeHistoryById
      operationId: OperationOutcomeHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /OperationOutcome/_history:
    get:
      tags:
      - OperationOutcome
      summary: OperationOutcomeHistory
      operationId: OperationOutcomeHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /OperationOutcome/{id}/_history/{vid}:
    get:
      tags:
      - OperationOutcome
      summary: OperationOutcomeHistoryByIdAndVid
      operationId: OperationOutcomeHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      deprecated: false
  /Organization:
    post:
      tags:
      - Organization
      summary: Organization
      operationId: Organization
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Organization
      summary: Organization
      operationId: Organization
      parameters:
      - name: endpoint
        in: query
        description: Technical endpoints providing access to services operated for the organization
        style: form
        explode: true
        schema:
          type: string
      - name: partof
        in: query
        description: An organization of which this organization forms a part
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: A (part of the) address of the organization
        style: form
        explode: true
        schema:
          type: string
      - name: address-city
        in: query
        description: A city specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-country
        in: query
        description: A country specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-postalcode
        in: query
        description: A postal code specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-state
        in: query
        description: A state specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: address-use
        in: query
        description: A use code specified in an address
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Any identifier for the organization (not the accreditation issuer's identifier)
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A portion of the organization's name or alias
        style: form
        explode: true
        schema:
          type: string
      - name: phonetic
        in: query
        description: A portion of the organization's name using some kind of phonetic matching algorithm
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: A code for the type of organization
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
                description: Success
      deprecated: false
  /Organization/{id}:
    get:
      tags:
      - Organization
      summary: OrganizationById
      operationId: OrganizationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
    put:
      tags:
      - Organization
      summary: OrganizationById
      operationId: OrganizationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Organization
      summary: OrganizationById
      operationId: OrganizationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Organization/{id}/_history:
    get:
      tags:
      - Organization
      summary: OrganizationHistoryById
      operationId: OrganizationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Organization/_history:
    get:
      tags:
      - Organization
      summary: OrganizationHistory
      operationId: OrganizationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Organization/{id}/_history/{vid}:
    get:
      tags:
      - Organization
      summary: OrganizationHistoryByIdAndVid
      operationId: OrganizationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      deprecated: false
  /Parameters:
    post:
      tags:
      - Parameters
      summary: Parameters
      operationId: Parameters
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Parameters
      summary: Parameters
      operationId: Parameters
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parameters'
                description: Success
      deprecated: false
  /Parameters/{id}:
    get:
      tags:
      - Parameters
      summary: ParametersById
      operationId: ParametersById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
      deprecated: false
    put:
      tags:
      - Parameters
      summary: ParametersById
      operationId: ParametersById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Parameters
      summary: ParametersById
      operationId: ParametersById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Parameters/{id}/_history:
    get:
      tags:
      - Parameters
      summary: ParametersHistoryById
      operationId: ParametersHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Parameters/_history:
    get:
      tags:
      - Parameters
      summary: ParametersHistory
      operationId: ParametersHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Parameters/{id}/_history/{vid}:
    get:
      tags:
      - Parameters
      summary: ParametersHistoryByIdAndVid
      operationId: ParametersHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
      deprecated: false
  /Patient:
    post:
      tags:
      - Patient
      summary: Patient
      operationId: Patient
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Patient
      summary: Patient
      operationId: Patient
      parameters:
      - name: general-practitioner
        in: query
        description: Patient's nominated general practitioner, not the organization that manages the record
        style: form
        explode: true
        schema:
          type: string
      - name: link
        in: query
        description: All patients linked to the given patient
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization at which this person is a patient
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: Whether the patient record is active
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text"
        style: form
        explode: true
        schema:
          type: string
      - name: address-city
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-country
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-postalcode
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-state
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-use
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: animal-breed
        in: query
        description: The breed for animal patients
        style: form
        explode: true
        schema:
          type: string
      - name: animal-species
        in: query
        description: The species for animal patients
        style: form
        explode: true
        schema:
          type: string
      - name: birthdate
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [Patient](patient.html): The patient's date of birth"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: death-date
        in: query
        description: The date of death has been provided and satisfies this search value
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: deceased
        in: query
        description: This patient has been marked as deceased, or as a death date entered
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact"
        style: form
        explode: true
        schema:
          type: string
      - name: family
        in: query
        description: "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the family name\r\n* [Patient](patient.html): A portion of the family name of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: gender
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: given
        in: query
        description: "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the given name\r\n* [Patient](patient.html): A portion of the given name of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: A patient identifier
        style: form
        explode: true
        schema:
          type: string
      - name: language
        in: query
        description: Language code (irrespective of use value)
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
        style: form
        explode: true
        schema:
          type: string
      - name: phone
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact"
        style: form
        explode: true
        schema:
          type: string
      - name: phonetic
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm"
        style: form
        explode: true
        schema:
          type: string
      - name: telecom
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
                description: Success
      deprecated: false
  /Patient/{id}:
    get:
      tags:
      - Patient
      summary: PatientById
      operationId: PatientById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      deprecated: false
    put:
      tags:
      - Patient
      summary: PatientById
      operationId: PatientById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Patient
      summary: PatientById
      operationId: PatientById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Patient/{id}/_history:
    get:
      tags:
      - Patient
      summary: PatientHistoryById
      operationId: PatientHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Patient/_history:
    get:
      tags:
      - Patient
      summary: PatientHistory
      operationId: PatientHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Patient/{id}/_history/{vid}:
    get:
      tags:
      - Patient
      summary: PatientHistoryByIdAndVid
      operationId: PatientHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      deprecated: false
  /PaymentNotice:
    post:
      tags:
      - PaymentNotice
      summary: PaymentNotice
      operationId: PaymentNotice
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentNotice'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - PaymentNotice
      summary: PaymentNotice
      operationId: PaymentNotice
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The reference to the provider
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The Claim
        style: form
        explode: true
        schema:
          type: string
      - name: response
        in: query
        description: The ClaimResponse
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: Creation date fro the notice
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The business identifier of the notice
        style: form
        explode: true
        schema:
          type: string
      - name: payment-status
        in: query
        description: The type of payment notice
        style: form
        explode: true
        schema:
          type: string
      - name: statusdate
        in: query
        description: The date of the payment action
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentNotice'
                description: Success
      deprecated: false
  /PaymentNotice/{id}:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeById
      operationId: PaymentNoticeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNotice'
      deprecated: false
    put:
      tags:
      - PaymentNotice
      summary: PaymentNoticeById
      operationId: PaymentNoticeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentNotice'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - PaymentNotice
      summary: PaymentNoticeById
      operationId: PaymentNoticeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentNotice/{id}/_history:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeHistoryById
      operationId: PaymentNoticeHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentNotice/_history:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeHistory
      operationId: PaymentNoticeHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentNotice/{id}/_history/{vid}:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeHistoryByIdAndVid
      operationId: PaymentNoticeHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNotice'
      deprecated: false
  /PaymentReconciliation:
    post:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliation
      operationId: PaymentReconciliation
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReconciliation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliation
      operationId: PaymentReconciliation
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The reference to the claim
        style: form
        explode: true
        schema:
          type: string
      - name: request-organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The reference to the provider who sumbitted the claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: disposition
        in: query
        description: The contents of the disposition message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the Explanation of Benefit
        style: form
        explode: true
        schema:
          type: string
      - name: outcome
        in: query
        description: The processing outcome
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentReconciliation'
                description: Success
      deprecated: false
  /PaymentReconciliation/{id}:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationById
      operationId: PaymentReconciliationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReconciliation'
      deprecated: false
    put:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationById
      operationId: PaymentReconciliationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReconciliation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationById
      operationId: PaymentReconciliationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentReconciliation/{id}/_history:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationHistoryById
      operationId: PaymentReconciliationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentReconciliation/_history:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationHistory
      operationId: PaymentReconciliationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentReconciliation/{id}/_history/{vid}:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationHistoryByIdAndVid
      operationId: PaymentReconciliationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReconciliation'
      deprecated: false
  /Person:
    post:
      tags:
      - Person
      summary: Person
      operationId: Person
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Person
      summary: Person
      operationId: Person
      parameters:
      - name: link
        in: query
        description: Any link has this Patient, Person, RelatedPerson or Practitioner reference
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization at which this person record is being managed
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The Person links to this Patient
        style: form
        explode: true
        schema:
          type: string
      - name: practitioner
        in: query
        description: The Person links to this Practitioner
        style: form
        explode: true
        schema:
          type: string
      - name: relatedperson
        in: query
        description: The Person links to this RelatedPerson
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text"
        style: form
        explode: true
        schema:
          type: string
      - name: address-city
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-country
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-postalcode
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-state
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-use
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: birthdate
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [Patient](patient.html): The patient's date of birth"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: email
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact"
        style: form
        explode: true
        schema:
          type: string
      - name: gender
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: phone
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact"
        style: form
        explode: true
        schema:
          type: string
      - name: phonetic
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm"
        style: form
        explode: true
        schema:
          type: string
      - name: telecom
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: A person Identifier
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
                description: Success
      deprecated: false
  /Person/{id}:
    get:
      tags:
      - Person
      summary: PersonById
      operationId: PersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      deprecated: false
    put:
      tags:
      - Person
      summary: PersonById
      operationId: PersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Person
      summary: PersonById
      operationId: PersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Person/{id}/_history:
    get:
      tags:
      - Person
      summary: PersonHistoryById
      operationId: PersonHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Person/_history:
    get:
      tags:
      - Person
      summary: PersonHistory
      operationId: PersonHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Person/{id}/_history/{vid}:
    get:
      tags:
      - Person
      summary: PersonHistoryByIdAndVid
      operationId: PersonHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      deprecated: false
  /PlanDefinition:
    post:
      tags:
      - PlanDefinition
      summary: PlanDefinition
      operationId: PlanDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinition
      operationId: PlanDefinition
      parameters:
      - name: composed-of
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: depends-on
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: derived-from
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: predecessor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: successor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The plan definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the plan definition is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: topic
        in: query
        description: Topics associated with the module
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /PlanDefinition/{id}:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionById
      operationId: PlanDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - PlanDefinition
      summary: PlanDefinitionById
      operationId: PlanDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - PlanDefinition
      summary: PlanDefinitionById
      operationId: PlanDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PlanDefinition/{id}/_history:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionHistoryById
      operationId: PlanDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PlanDefinition/_history:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionHistory
      operationId: PlanDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PlanDefinition/{id}/_history/{vid}:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionHistoryByIdAndVid
      operationId: PlanDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Practitioner:
    post:
      tags:
      - Practitioner
      summary: Practitioner
      operationId: Practitioner
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Practitioner'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Practitioner
      summary: Practitioner
      operationId: Practitioner
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text"
        style: form
        explode: true
        schema:
          type: string
      - name: address-city
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-country
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-postalcode
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-state
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-use
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact"
        style: form
        explode: true
        schema:
          type: string
      - name: family
        in: query
        description: "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the family name\r\n* [Patient](patient.html): A portion of the family name of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: gender
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: given
        in: query
        description: "Multiple Resources: \r\n\r\n* [Practitioner](practitioner.html): A portion of the given name\r\n* [Patient](patient.html): A portion of the given name of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: phone
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact"
        style: form
        explode: true
        schema:
          type: string
      - name: phonetic
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm"
        style: form
        explode: true
        schema:
          type: string
      - name: telecom
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: Whether the practitioner record is active
        style: form
        explode: true
        schema:
          type: string
      - name: communication
        in: query
        description: One of the languages that the practitioner can communicate with
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: A practitioner's Identifier
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Practitioner'
                description: Success
      deprecated: false
  /Practitioner/{id}:
    get:
      tags:
      - Practitioner
      summary: PractitionerById
      operationId: PractitionerById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Practitioner'
      deprecated: false
    put:
      tags:
      - Practitioner
      summary: PractitionerById
      operationId: PractitionerById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Practitioner'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Practitioner
      summary: PractitionerById
      operationId: PractitionerById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Practitioner/{id}/_history:
    get:
      tags:
      - Practitioner
      summary: PractitionerHistoryById
      operationId: PractitionerHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Practitioner/_history:
    get:
      tags:
      - Practitioner
      summary: PractitionerHistory
      operationId: PractitionerHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Practitioner/{id}/_history/{vid}:
    get:
      tags:
      - Practitioner
      summary: PractitionerHistoryByIdAndVid
      operationId: PractitionerHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Practitioner'
      deprecated: false
  /PractitionerRole:
    post:
      tags:
      - PractitionerRole
      summary: PractitionerRole
      operationId: PractitionerRole
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerRole'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - PractitionerRole
      summary: PractitionerRole
      operationId: PractitionerRole
      parameters:
      - name: endpoint
        in: query
        description: Technical endpoints providing access to services operated for the practitioner with this role
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: One of the locations at which this practitioner provides care
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The identity of the organization the practitioner represents / acts on behalf of
        style: form
        explode: true
        schema:
          type: string
      - name: practitioner
        in: query
        description: Practitioner that is able to provide the defined services for the organation
        style: form
        explode: true
        schema:
          type: string
      - name: service
        in: query
        description: The list of healthcare services that this worker provides for this role's Organization/Location(s)
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact"
        style: form
        explode: true
        schema:
          type: string
      - name: phone
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact"
        style: form
        explode: true
        schema:
          type: string
      - name: telecom
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: Whether this practitioner's record is in active use
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The period during which the practitioner is authorized to perform in these role(s)
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: A practitioner's Identifier
        style: form
        explode: true
        schema:
          type: string
      - name: role
        in: query
        description: The practitioner can perform this role at for the organization
        style: form
        explode: true
        schema:
          type: string
      - name: specialty
        in: query
        description: The practitioner has this specialty at an organization
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PractitionerRole'
                description: Success
      deprecated: false
  /PractitionerRole/{id}:
    get:
      tags:
      - PractitionerRole
      summary: PractitionerRoleById
      operationId: PractitionerRoleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerRole'
      deprecated: false
    put:
      tags:
      - PractitionerRole
      summary: PractitionerRoleById
      operationId: PractitionerRoleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerRole'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - PractitionerRole
      summary: PractitionerRoleById
      operationId: PractitionerRoleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PractitionerRole/{id}/_history:
    get:
      tags:
      - PractitionerRole
      summary: PractitionerRoleHistoryById
      operationId: PractitionerRoleHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PractitionerRole/_history:
    get:
      tags:
      - PractitionerRole
      summary: PractitionerRoleHistory
      operationId: PractitionerRoleHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PractitionerRole/{id}/_history/{vid}:
    get:
      tags:
      - PractitionerRole
      summary: PractitionerRoleHistoryByIdAndVid
      operationId: PractitionerRoleHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerRole'
      deprecated: false
  /Procedure:
    post:
      tags:
      - Procedure
      summary: Procedure
      operationId: Procedure
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Procedure'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Procedure
      summary: Procedure
      operationId: Procedure
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: A request for this procedure
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or episode associated with the procedure
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: Instantiates protocol or definition
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: Where the procedure happened
        style: form
        explode: true
        schema:
          type: string
      - name: part-of
        in: query
        description: Part of referenced event
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: The reference to the practitioner
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Search by subject
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Classification of the procedure
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: preparation | in-progress | suspended | aborted | completed | entered-in-error | unknown
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Procedure'
                description: Success
      deprecated: false
  /Procedure/{id}:
    get:
      tags:
      - Procedure
      summary: ProcedureById
      operationId: ProcedureById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Procedure'
      deprecated: false
    put:
      tags:
      - Procedure
      summary: ProcedureById
      operationId: ProcedureById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Procedure'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Procedure
      summary: ProcedureById
      operationId: ProcedureById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Procedure/{id}/_history:
    get:
      tags:
      - Procedure
      summary: ProcedureHistoryById
      operationId: ProcedureHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Procedure/_history:
    get:
      tags:
      - Procedure
      summary: ProcedureHistory
      operationId: ProcedureHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Procedure/{id}/_history/{vid}:
    get:
      tags:
      - Procedure
      summary: ProcedureHistoryByIdAndVid
      operationId: ProcedureHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Procedure'
      deprecated: false
  /ProcedureRequest:
    post:
      tags:
      - ProcedureRequest
      summary: ProcedureRequest
      operationId: ProcedureRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ProcedureRequest
      summary: ProcedureRequest
      operationId: ProcedureRequest
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: What request fulfills
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or Episode during which request was created
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: Protocol or definition
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Requested perfomer
        style: form
        explode: true
        schema:
          type: string
      - name: replaces
        in: query
        description: What request replaces
        style: form
        explode: true
        schema:
          type: string
      - name: requester
        in: query
        description: Individual making the request
        style: form
        explode: true
        schema:
          type: string
      - name: specimen
        in: query
        description: Specimen to be tested
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Search by subject
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: "Multiple Resources: \r\n\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [List](list.html): What the purpose of this list is\r\n* [ProcedureRequest](procedurerequest.html): What is being requested/ordered\r\n* [Observation](observation.html): The code of the observation type\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [Condition](condition.html): Code for the condition"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: authored
        in: query
        description: Date request signed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: body-site
        in: query
        description: Where procedure is going to be done
        style: form
        explode: true
        schema:
          type: string
      - name: intent
        in: query
        description: proposal | plan | order +
        style: form
        explode: true
        schema:
          type: string
      - name: occurrence
        in: query
        description: When procedure should occur
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: performer-type
        in: query
        description: Performer role
        style: form
        explode: true
        schema:
          type: string
      - name: priority
        in: query
        description: routine | urgent | asap | stat
        style: form
        explode: true
        schema:
          type: string
      - name: requisition
        in: query
        description: Composite Request ID
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: draft | active | suspended | completed | entered-in-error | cancelled
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcedureRequest'
                description: Success
      deprecated: false
  /ProcedureRequest/{id}:
    get:
      tags:
      - ProcedureRequest
      summary: ProcedureRequestById
      operationId: ProcedureRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureRequest'
      deprecated: false
    put:
      tags:
      - ProcedureRequest
      summary: ProcedureRequestById
      operationId: ProcedureRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcedureRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ProcedureRequest
      summary: ProcedureRequestById
      operationId: ProcedureRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcedureRequest/{id}/_history:
    get:
      tags:
      - ProcedureRequest
      summary: ProcedureRequestHistoryById
      operationId: ProcedureRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcedureRequest/_history:
    get:
      tags:
      - ProcedureRequest
      summary: ProcedureRequestHistory
      operationId: ProcedureRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcedureRequest/{id}/_history/{vid}:
    get:
      tags:
      - ProcedureRequest
      summary: ProcedureRequestHistoryByIdAndVid
      operationId: ProcedureRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureRequest'
      deprecated: false
  /ProcessRequest:
    post:
      tags:
      - ProcessRequest
      summary: ProcessRequest
      operationId: ProcessRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequest
      operationId: ProcessRequest
      parameters:
      - name: organization
        in: query
        description: The organization who generated this request
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The provider who regenerated this request
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: action
        in: query
        description: The action requested by this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the ProcessRequest
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessRequest'
                description: Success
      deprecated: false
  /ProcessRequest/{id}:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestById
      operationId: ProcessRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessRequest'
      deprecated: false
    put:
      tags:
      - ProcessRequest
      summary: ProcessRequestById
      operationId: ProcessRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ProcessRequest
      summary: ProcessRequestById
      operationId: ProcessRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessRequest/{id}/_history:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestHistoryById
      operationId: ProcessRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessRequest/_history:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestHistory
      operationId: ProcessRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessRequest/{id}/_history/{vid}:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestHistoryByIdAndVid
      operationId: ProcessRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessRequest'
      deprecated: false
  /ProcessResponse:
    post:
      tags:
      - ProcessResponse
      summary: ProcessResponse
      operationId: ProcessResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponse
      operationId: ProcessResponse
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The reference to the claim
        style: form
        explode: true
        schema:
          type: string
      - name: request-organization
        in: query
        description: The Organization who is responsible the request transaction
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The Provider who is responsible the request transaction
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the Explanation of Benefit
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResponse'
                description: Success
      deprecated: false
  /ProcessResponse/{id}:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseById
      operationId: ProcessResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessResponse'
      deprecated: false
    put:
      tags:
      - ProcessResponse
      summary: ProcessResponseById
      operationId: ProcessResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ProcessResponse
      summary: ProcessResponseById
      operationId: ProcessResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessResponse/{id}/_history:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseHistoryById
      operationId: ProcessResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessResponse/_history:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseHistory
      operationId: ProcessResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessResponse/{id}/_history/{vid}:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseHistoryByIdAndVid
      operationId: ProcessResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessResponse'
      deprecated: false
  /Provenance:
    post:
      tags:
      - Provenance
      summary: Provenance
      operationId: Provenance
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provenance'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Provenance
      summary: Provenance
      operationId: Provenance
      parameters:
      - name: agent
        in: query
        description: Who participated
        style: form
        explode: true
        schema:
          type: string
      - name: entity-ref
        in: query
        description: Identity of entity
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: Where the activity occurred, if relevant
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Target Reference(s) (usually version specific)
        style: form
        explode: true
        schema:
          type: string
      - name: target
        in: query
        description: Target Reference(s) (usually version specific)
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: agent-role
        in: query
        description: What the agents role was
        style: form
        explode: true
        schema:
          type: string
      - name: end
        in: query
        description: End time with inclusive boundary, if not ongoing
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: entity-id
        in: query
        description: Identity of entity
        style: form
        explode: true
        schema:
          type: string
      - name: recorded
        in: query
        description: When the activity was recorded / updated
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: signature-type
        in: query
        description: Indication of the reason the entity signed the object(s)
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        description: Starting time with inclusive boundary
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provenance'
                description: Success
      deprecated: false
  /Provenance/{id}:
    get:
      tags:
      - Provenance
      summary: ProvenanceById
      operationId: ProvenanceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provenance'
      deprecated: false
    put:
      tags:
      - Provenance
      summary: ProvenanceById
      operationId: ProvenanceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provenance'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Provenance
      summary: ProvenanceById
      operationId: ProvenanceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Provenance/{id}/_history:
    get:
      tags:
      - Provenance
      summary: ProvenanceHistoryById
      operationId: ProvenanceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Provenance/_history:
    get:
      tags:
      - Provenance
      summary: ProvenanceHistory
      operationId: ProvenanceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Provenance/{id}/_history/{vid}:
    get:
      tags:
      - Provenance
      summary: ProvenanceHistoryByIdAndVid
      operationId: ProvenanceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provenance'
      deprecated: false
  /Questionnaire:
    post:
      tags:
      - Questionnaire
      summary: Questionnaire
      operationId: Questionnaire
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questionnaire'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Questionnaire
      summary: Questionnaire
      operationId: Questionnaire
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: A code that corresponds to one of its items in the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The questionnaire publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the questionnaire is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Questionnaire'
                description: Success
      deprecated: false
  /Questionnaire/{id}:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireById
      operationId: QuestionnaireById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
      deprecated: false
    put:
      tags:
      - Questionnaire
      summary: QuestionnaireById
      operationId: QuestionnaireById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questionnaire'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Questionnaire
      summary: QuestionnaireById
      operationId: QuestionnaireById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Questionnaire/{id}/_history:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireHistoryById
      operationId: QuestionnaireHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Questionnaire/_history:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireHistory
      operationId: QuestionnaireHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Questionnaire/{id}/_history/{vid}:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireHistoryByIdAndVid
      operationId: QuestionnaireHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
      deprecated: false
  /QuestionnaireResponse:
    post:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponse
      operationId: QuestionnaireResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponse
      operationId: QuestionnaireResponse
      parameters:
      - name: author
        in: query
        description: The author of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: Plan/proposal/order fulfilled by this questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or episode associated with the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: query
        description: Procedure or observation this questionnaire response was performed as a part of
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The patient that is the subject of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: questionnaire
        in: query
        description: The questionnaire the answers are provided for
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: The individual providing the information reflected in the questionnaire respose
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: authored
        in: query
        description: When the questionnaire response was last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The unique identifier for the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The status of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionnaireResponse'
                description: Success
      deprecated: false
  /QuestionnaireResponse/{id}:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseById
      operationId: QuestionnaireResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponse'
      deprecated: false
    put:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseById
      operationId: QuestionnaireResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseById
      operationId: QuestionnaireResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /QuestionnaireResponse/{id}/_history:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseHistoryById
      operationId: QuestionnaireResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /QuestionnaireResponse/_history:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseHistory
      operationId: QuestionnaireResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /QuestionnaireResponse/{id}/_history/{vid}:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseHistoryByIdAndVid
      operationId: QuestionnaireResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponse'
      deprecated: false
  /ReferralRequest:
    post:
      tags:
      - ReferralRequest
      summary: ReferralRequest
      operationId: ReferralRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ReferralRequest
      summary: ReferralRequest
      operationId: ReferralRequest
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: Request being fulfilled
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Part of encounter or episode of care
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: Instantiates protocol or definition
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Originating encounter
        style: form
        explode: true
        schema:
          type: string
      - name: recipient
        in: query
        description: The person that the referral was sent to
        style: form
        explode: true
        schema:
          type: string
      - name: replaces
        in: query
        description: Request(s) replaced by this request
        style: form
        explode: true
        schema:
          type: string
      - name: requester
        in: query
        description: Individual making the request
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Patient referred to care or transfer
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): The type of the referral\r\n* [DocumentManifest](documentmanifest.html): Kind of document set\r\n* [DocumentReference](documentreference.html): Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html): Specific type of encounter\r\n* [AllergyIntolerance](allergyintolerance.html): allergy | intolerance - Underlying mechanism (if known)\r\n* [EpisodeOfCare](episodeofcare.html): Type/class  - e.g. specialist referral, disease management\r\n* [Composition](composition.html): Kind of composition (LOINC if possible)"
        style: form
        explode: true
        schema:
          type: string
      - name: authored-on
        in: query
        description: Creation or activation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: group-identifier
        in: query
        description: Part of common request
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: intent
        in: query
        description: Proposal, plan or order
        style: form
        explode: true
        schema:
          type: string
      - name: occurrence-date
        in: query
        description: When the service(s) requested in the referral should occur
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: priority
        in: query
        description: The priority assigned to the referral
        style: form
        explode: true
        schema:
          type: string
      - name: service
        in: query
        description: Actions requested as part of the referral
        style: form
        explode: true
        schema:
          type: string
      - name: specialty
        in: query
        description: The specialty that the referral is for
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The status of the referral
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferralRequest'
                description: Success
      deprecated: false
  /ReferralRequest/{id}:
    get:
      tags:
      - ReferralRequest
      summary: ReferralRequestById
      operationId: ReferralRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralRequest'
      deprecated: false
    put:
      tags:
      - ReferralRequest
      summary: ReferralRequestById
      operationId: ReferralRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ReferralRequest
      summary: ReferralRequestById
      operationId: ReferralRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ReferralRequest/{id}/_history:
    get:
      tags:
      - ReferralRequest
      summary: ReferralRequestHistoryById
      operationId: ReferralRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ReferralRequest/_history:
    get:
      tags:
      - ReferralRequest
      summary: ReferralRequestHistory
      operationId: ReferralRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ReferralRequest/{id}/_history/{vid}:
    get:
      tags:
      - ReferralRequest
      summary: ReferralRequestHistoryByIdAndVid
      operationId: ReferralRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralRequest'
      deprecated: false
  /RelatedPerson:
    post:
      tags:
      - RelatedPerson
      summary: RelatedPerson
      operationId: RelatedPerson
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedPerson'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - RelatedPerson
      summary: RelatedPerson
      operationId: RelatedPerson
      parameters:
      - name: patient
        in: query
        description: The patient this related person is related to
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text"
        style: form
        explode: true
        schema:
          type: string
      - name: address-city
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-country
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-postalcode
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-state
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-use
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: birthdate
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [Patient](patient.html): The patient's date of birth"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: email
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact"
        style: form
        explode: true
        schema:
          type: string
      - name: gender
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: phone
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact"
        style: form
        explode: true
        schema:
          type: string
      - name: phonetic
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm"
        style: form
        explode: true
        schema:
          type: string
      - name: telecom
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: Indicates if the related person record is active
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: An Identifier of the RelatedPerson
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedPerson'
                description: Success
      deprecated: false
  /RelatedPerson/{id}:
    get:
      tags:
      - RelatedPerson
      summary: RelatedPersonById
      operationId: RelatedPersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedPerson'
      deprecated: false
    put:
      tags:
      - RelatedPerson
      summary: RelatedPersonById
      operationId: RelatedPersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedPerson'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - RelatedPerson
      summary: RelatedPersonById
      operationId: RelatedPersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RelatedPerson/{id}/_history:
    get:
      tags:
      - RelatedPerson
      summary: RelatedPersonHistoryById
      operationId: RelatedPersonHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RelatedPerson/_history:
    get:
      tags:
      - RelatedPerson
      summary: RelatedPersonHistory
      operationId: RelatedPersonHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RelatedPerson/{id}/_history/{vid}:
    get:
      tags:
      - RelatedPerson
      summary: RelatedPersonHistoryByIdAndVid
      operationId: RelatedPersonHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedPerson'
      deprecated: false
  /RequestGroup:
    post:
      tags:
      - RequestGroup
      summary: RequestGroup
      operationId: RequestGroup
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - RequestGroup
      summary: RequestGroup
      operationId: RequestGroup
      parameters:
      - name: author
        in: query
        description: The author of the request group
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: The context the request group applies to
        style: form
        explode: true
        schema:
          type: string
      - name: definition
        in: query
        description: The definition from which the request group is realized
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: The encounter the request group applies to
        style: form
        explode: true
        schema:
          type: string
      - name: participant
        in: query
        description: The participant in the requests in the group
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The identity of a patient to search for request groups
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject that the request group is about
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: authored
        in: query
        description: The date the request group was authored
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: group-identifier
        in: query
        description: The group identifier for the request group
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifiers for the request group
        style: form
        explode: true
        schema:
          type: string
      - name: intent
        in: query
        description: The intent of the request group
        style: form
        explode: true
        schema:
          type: string
      - name: priority
        in: query
        description: The priority of the request group
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The status of the request group
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /RequestGroup/{id}:
    get:
      tags:
      - RequestGroup
      summary: RequestGroupById
      operationId: RequestGroupById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - RequestGroup
      summary: RequestGroupById
      operationId: RequestGroupById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - RequestGroup
      summary: RequestGroupById
      operationId: RequestGroupById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RequestGroup/{id}/_history:
    get:
      tags:
      - RequestGroup
      summary: RequestGroupHistoryById
      operationId: RequestGroupHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RequestGroup/_history:
    get:
      tags:
      - RequestGroup
      summary: RequestGroupHistory
      operationId: RequestGroupHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RequestGroup/{id}/_history/{vid}:
    get:
      tags:
      - RequestGroup
      summary: RequestGroupHistoryByIdAndVid
      operationId: RequestGroupHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ResearchStudy:
    post:
      tags:
      - ResearchStudy
      summary: ResearchStudy
      operationId: ResearchStudy
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ResearchStudy
      summary: ResearchStudy
      operationId: ResearchStudy
      parameters:
      - name: partof
        in: query
        description: Part of larger study
        style: form
        explode: true
        schema:
          type: string
      - name: principalinvestigator
        in: query
        description: The individual responsible for the study
        style: form
        explode: true
        schema:
          type: string
      - name: protocol
        in: query
        description: Steps followed in executing study
        style: form
        explode: true
        schema:
          type: string
      - name: site
        in: query
        description: Location involved in study execution
        style: form
        explode: true
        schema:
          type: string
      - name: sponsor
        in: query
        description: Organization responsible for the study
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Classifications for the study
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: When the study began and ended
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: focus
        in: query
        description: Drugs, devices, conditions, etc. under study
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Business Identifier for study
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Geographic region(s) for study
        style: form
        explode: true
        schema:
          type: string
      - name: keyword
        in: query
        description: Used to search for the study
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: draft | in-progress | suspended | stopped | completed | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: Name for this study
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ResearchStudy/{id}:
    get:
      tags:
      - ResearchStudy
      summary: ResearchStudyById
      operationId: ResearchStudyById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - ResearchStudy
      summary: ResearchStudyById
      operationId: ResearchStudyById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ResearchStudy
      summary: ResearchStudyById
      operationId: ResearchStudyById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ResearchStudy/{id}/_history:
    get:
      tags:
      - ResearchStudy
      summary: ResearchStudyHistoryById
      operationId: ResearchStudyHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ResearchStudy/_history:
    get:
      tags:
      - ResearchStudy
      summary: ResearchStudyHistory
      operationId: ResearchStudyHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ResearchStudy/{id}/_history/{vid}:
    get:
      tags:
      - ResearchStudy
      summary: ResearchStudyHistoryByIdAndVid
      operationId: ResearchStudyHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ResearchSubject:
    post:
      tags:
      - ResearchSubject
      summary: ResearchSubject
      operationId: ResearchSubject
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ResearchSubject
      summary: ResearchSubject
      operationId: ResearchSubject
      parameters:
      - name: individual
        in: query
        description: Who is part of study
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Who is part of study
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: Start and end of participation
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: Business Identifier for research subject
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: candidate | enrolled | active | suspended | withdrawn | completed
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ResearchSubject/{id}:
    get:
      tags:
      - ResearchSubject
      summary: ResearchSubjectById
      operationId: ResearchSubjectById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - ResearchSubject
      summary: ResearchSubjectById
      operationId: ResearchSubjectById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ResearchSubject
      summary: ResearchSubjectById
      operationId: ResearchSubjectById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ResearchSubject/{id}/_history:
    get:
      tags:
      - ResearchSubject
      summary: ResearchSubjectHistoryById
      operationId: ResearchSubjectHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ResearchSubject/_history:
    get:
      tags:
      - ResearchSubject
      summary: ResearchSubjectHistory
      operationId: ResearchSubjectHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ResearchSubject/{id}/_history/{vid}:
    get:
      tags:
      - ResearchSubject
      summary: ResearchSubjectHistoryByIdAndVid
      operationId: ResearchSubjectHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Resource:
    post:
      tags:
      - Resource
      summary: Resource
      operationId: Resource
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Resource
      summary: Resource
      operationId: Resource
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Resource/{id}:
    get:
      tags:
      - Resource
      summary: ResourceById
      operationId: ResourceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - Resource
      summary: ResourceById
      operationId: ResourceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Resource
      summary: ResourceById
      operationId: ResourceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Resource/{id}/_history:
    get:
      tags:
      - Resource
      summary: ResourceHistoryById
      operationId: ResourceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Resource/_history:
    get:
      tags:
      - Resource
      summary: ResourceHistory
      operationId: ResourceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Resource/{id}/_history/{vid}:
    get:
      tags:
      - Resource
      summary: ResourceHistoryByIdAndVid
      operationId: ResourceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /RiskAssessment:
    post:
      tags:
      - RiskAssessment
      summary: RiskAssessment
      operationId: RiskAssessment
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskAssessment'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessment
      operationId: RiskAssessment
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: condition
        in: query
        description: Condition assessed
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Who did assessment?
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who/what does assessment apply to?
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: method
        in: query
        description: Evaluation mechanism
        style: form
        explode: true
        schema:
          type: string
      - name: probability
        in: query
        description: Likelihood of specified outcome
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: risk
        in: query
        description: Likelihood of specified outcome as a qualitative value
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessment'
                description: Success
      deprecated: false
  /RiskAssessment/{id}:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentById
      operationId: RiskAssessmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessment'
      deprecated: false
    put:
      tags:
      - RiskAssessment
      summary: RiskAssessmentById
      operationId: RiskAssessmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskAssessment'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - RiskAssessment
      summary: RiskAssessmentById
      operationId: RiskAssessmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RiskAssessment/{id}/_history:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentHistoryById
      operationId: RiskAssessmentHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RiskAssessment/_history:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentHistory
      operationId: RiskAssessmentHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RiskAssessment/{id}/_history/{vid}:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentHistoryByIdAndVid
      operationId: RiskAssessmentHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessment'
      deprecated: false
  /Schedule:
    post:
      tags:
      - Schedule
      summary: Schedule
      operationId: Schedule
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Schedule
      summary: Schedule
      operationId: Schedule
      parameters:
      - name: actor
        in: query
        description: The individual(HealthcareService, Practitioner, Location, ...) to find a Schedule for
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: Is the schedule in active use
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: Search for Schedule resources that have a period that contains this date specified
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: A Schedule Identifier
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of appointments that can be booked into associated slot(s)
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
                description: Success
      deprecated: false
  /Schedule/{id}:
    get:
      tags:
      - Schedule
      summary: ScheduleById
      operationId: ScheduleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
      deprecated: false
    put:
      tags:
      - Schedule
      summary: ScheduleById
      operationId: ScheduleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Schedule
      summary: ScheduleById
      operationId: ScheduleById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Schedule/{id}/_history:
    get:
      tags:
      - Schedule
      summary: ScheduleHistoryById
      operationId: ScheduleHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Schedule/_history:
    get:
      tags:
      - Schedule
      summary: ScheduleHistory
      operationId: ScheduleHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Schedule/{id}/_history/{vid}:
    get:
      tags:
      - Schedule
      summary: ScheduleHistoryByIdAndVid
      operationId: ScheduleHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
      deprecated: false
  /SearchParameter:
    post:
      tags:
      - SearchParameter
      summary: SearchParameter
      operationId: SearchParameter
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchParameter'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - SearchParameter
      summary: SearchParameter
      operationId: SearchParameter
      parameters:
      - name: component
        in: query
        description: Defines how the part works
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: base
        in: query
        description: The resource type(s) this search parameter applies to
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: Code used in URL
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The search parameter publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: derived-from
        in: query
        description: Original Definition for the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: The description of the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: target
        in: query
        description: Types of resource (if a resource reference)
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: number | date | string | token | reference | composite | quantity | uri
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the search parameter
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchParameter'
                description: Success
      deprecated: false
  /SearchParameter/{id}:
    get:
      tags:
      - SearchParameter
      summary: SearchParameterById
      operationId: SearchParameterById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchParameter'
      deprecated: false
    put:
      tags:
      - SearchParameter
      summary: SearchParameterById
      operationId: SearchParameterById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchParameter'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - SearchParameter
      summary: SearchParameterById
      operationId: SearchParameterById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SearchParameter/{id}/_history:
    get:
      tags:
      - SearchParameter
      summary: SearchParameterHistoryById
      operationId: SearchParameterHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SearchParameter/_history:
    get:
      tags:
      - SearchParameter
      summary: SearchParameterHistory
      operationId: SearchParameterHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SearchParameter/{id}/_history/{vid}:
    get:
      tags:
      - SearchParameter
      summary: SearchParameterHistoryByIdAndVid
      operationId: SearchParameterHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchParameter'
      deprecated: false
  /Sequence:
    post:
      tags:
      - Sequence
      summary: Sequence
      operationId: Sequence
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sequence'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Sequence
      summary: Sequence
      operationId: Sequence
      parameters:
      - name: patient
        in: query
        description: The subject that the observation is about
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: chromosome
        in: query
        description: Chromosome number of the reference sequence
        style: form
        explode: true
        schema:
          type: string
      - name: coordinate
        in: query
        description: Search parameter for region of the reference DNA sequence string. This will refer to part of a locus or part of a gene where search region will be represented in 1-based system. Since the coordinateSystem can either be 0-based or 1-based, this search query will include the result of both coordinateSystem that contains the equivalent segment of the gene or whole genome sequence. For example, a search for sequence can be represented as `coordinate=1$lt345$gt123`, this means it will search for the Sequence resource on chromosome 1 and with position >123 and <345, where in 1-based system resource, all strings within region 1:124-344 will be revealed, while in 0-based system resource, all strings within region 1:123-344 will be revealed. You may want to check detail about 0-based v.s. 1-based above.
        style: form
        explode: true
        schema:
          type: string
      - name: end
        in: query
        description: End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the reference sequence.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: identifier
        in: query
        description: The unique identity for a particular sequence
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        description: Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the reference sequence.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: type
        in: query
        description: Amino Acid Sequence/ DNA Sequence / RNA Sequence
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sequence'
                description: Success
      deprecated: false
  /Sequence/{id}:
    get:
      tags:
      - Sequence
      summary: SequenceById
      operationId: SequenceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
      deprecated: false
    put:
      tags:
      - Sequence
      summary: SequenceById
      operationId: SequenceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sequence'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Sequence
      summary: SequenceById
      operationId: SequenceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Sequence/{id}/_history:
    get:
      tags:
      - Sequence
      summary: SequenceHistoryById
      operationId: SequenceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Sequence/_history:
    get:
      tags:
      - Sequence
      summary: SequenceHistory
      operationId: SequenceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Sequence/{id}/_history/{vid}:
    get:
      tags:
      - Sequence
      summary: SequenceHistoryByIdAndVid
      operationId: SequenceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
      deprecated: false
  /ServiceDefinition:
    post:
      tags:
      - ServiceDefinition
      summary: ServiceDefinition
      operationId: ServiceDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ServiceDefinition
      summary: ServiceDefinition
      operationId: ServiceDefinition
      parameters:
      - name: composed-of
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: depends-on
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: derived-from
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: predecessor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: successor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The service definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the service definition is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: topic
        in: query
        description: Topics associated with the module
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the service definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ServiceDefinition/{id}:
    get:
      tags:
      - ServiceDefinition
      summary: ServiceDefinitionById
      operationId: ServiceDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - ServiceDefinition
      summary: ServiceDefinitionById
      operationId: ServiceDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ServiceDefinition
      summary: ServiceDefinitionById
      operationId: ServiceDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ServiceDefinition/{id}/_history:
    get:
      tags:
      - ServiceDefinition
      summary: ServiceDefinitionHistoryById
      operationId: ServiceDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ServiceDefinition/_history:
    get:
      tags:
      - ServiceDefinition
      summary: ServiceDefinitionHistory
      operationId: ServiceDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ServiceDefinition/{id}/_history/{vid}:
    get:
      tags:
      - ServiceDefinition
      summary: ServiceDefinitionHistoryByIdAndVid
      operationId: ServiceDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /Slot:
    post:
      tags:
      - Slot
      summary: Slot
      operationId: Slot
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slot'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Slot
      summary: Slot
      operationId: Slot
      parameters:
      - name: schedule
        in: query
        description: The Schedule Resource that we are seeking a slot within
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: A Slot Identifier
        style: form
        explode: true
        schema:
          type: string
      - name: slot-type
        in: query
        description: The type of appointments that can be booked into the slot
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        description: Appointment date/time.
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: status
        in: query
        description: The free/busy status of the appointment
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slot'
                description: Success
      deprecated: false
  /Slot/{id}:
    get:
      tags:
      - Slot
      summary: SlotById
      operationId: SlotById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
      deprecated: false
    put:
      tags:
      - Slot
      summary: SlotById
      operationId: SlotById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slot'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Slot
      summary: SlotById
      operationId: SlotById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Slot/{id}/_history:
    get:
      tags:
      - Slot
      summary: SlotHistoryById
      operationId: SlotHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Slot/_history:
    get:
      tags:
      - Slot
      summary: SlotHistory
      operationId: SlotHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Slot/{id}/_history/{vid}:
    get:
      tags:
      - Slot
      summary: SlotHistoryByIdAndVid
      operationId: SlotHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
      deprecated: false
  /Specimen:
    post:
      tags:
      - Specimen
      summary: Specimen
      operationId: Specimen
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Specimen'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Specimen
      summary: Specimen
      operationId: Specimen
      parameters:
      - name: collector
        in: query
        description: Who collected the specimen
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: query
        description: The parent of the specimen
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The patient the specimen comes from
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject of the specimen
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: accession
        in: query
        description: The accession number associated with the specimen
        style: form
        explode: true
        schema:
          type: string
      - name: bodysite
        in: query
        description: The code for the body site from where the specimen originated
        style: form
        explode: true
        schema:
          type: string
      - name: collected
        in: query
        description: The date the specimen was collected
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: container
        in: query
        description: The kind of specimen container
        style: form
        explode: true
        schema:
          type: string
      - name: container-id
        in: query
        description: The unique identifier associated with the specimen container
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The unique identifier associated with the specimen
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: available | unavailable | unsatisfactory | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The specimen type
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Specimen'
                description: Success
      deprecated: false
  /Specimen/{id}:
    get:
      tags:
      - Specimen
      summary: SpecimenById
      operationId: SpecimenById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specimen'
      deprecated: false
    put:
      tags:
      - Specimen
      summary: SpecimenById
      operationId: SpecimenById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Specimen'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Specimen
      summary: SpecimenById
      operationId: SpecimenById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Specimen/{id}/_history:
    get:
      tags:
      - Specimen
      summary: SpecimenHistoryById
      operationId: SpecimenHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Specimen/_history:
    get:
      tags:
      - Specimen
      summary: SpecimenHistory
      operationId: SpecimenHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Specimen/{id}/_history/{vid}:
    get:
      tags:
      - Specimen
      summary: SpecimenHistoryByIdAndVid
      operationId: SpecimenHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specimen'
      deprecated: false
  /StructureDefinition:
    post:
      tags:
      - StructureDefinition
      summary: StructureDefinition
      operationId: StructureDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureDefinition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - StructureDefinition
      summary: StructureDefinition
      operationId: StructureDefinition
      parameters:
      - name: valueset
        in: query
        description: A vocabulary binding reference
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: abstract
        in: query
        description: Whether the structure is abstract
        style: form
        explode: true
        schema:
          type: string
      - name: base
        in: query
        description: Definition that this type is constrained/specialized from
        style: form
        explode: true
        schema:
          type: string
      - name: base-path
        in: query
        description: Path that identifies the base element
        style: form
        explode: true
        schema:
          type: string
      - name: context-type
        in: query
        description: resource | datatype | extension
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The structure definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: derivation
        in: query
        description: specialization | constraint - How relates to base definition
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: The description of the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: experimental
        in: query
        description: For testing purposes, not real usage
        style: form
        explode: true
        schema:
          type: string
      - name: ext-context
        in: query
        description: Where the extension can be used in instances
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: keyword
        in: query
        description: A code for the profile
        style: form
        explode: true
        schema:
          type: string
      - name: kind
        in: query
        description: primitive-type | complex-type | resource | logical
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: path
        in: query
        description: A path that is constrained in the profile
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Type defined or constrained by this structure
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the structure definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructureDefinition'
                description: Success
      deprecated: false
  /StructureDefinition/{id}:
    get:
      tags:
      - StructureDefinition
      summary: StructureDefinitionById
      operationId: StructureDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureDefinition'
      deprecated: false
    put:
      tags:
      - StructureDefinition
      summary: StructureDefinitionById
      operationId: StructureDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureDefinition'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - StructureDefinition
      summary: StructureDefinitionById
      operationId: StructureDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /StructureDefinition/{id}/_history:
    get:
      tags:
      - StructureDefinition
      summary: StructureDefinitionHistoryById
      operationId: StructureDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /StructureDefinition/_history:
    get:
      tags:
      - StructureDefinition
      summary: StructureDefinitionHistory
      operationId: StructureDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /StructureDefinition/{id}/_history/{vid}:
    get:
      tags:
      - StructureDefinition
      summary: StructureDefinitionHistoryByIdAndVid
      operationId: StructureDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureDefinition'
      deprecated: false
  /StructureMap:
    post:
      tags:
      - StructureMap
      summary: StructureMap
      operationId: StructureMap
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureMap'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - StructureMap
      summary: StructureMap
      operationId: StructureMap
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The structure map publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the structure map
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructureMap'
                description: Success
      deprecated: false
  /StructureMap/{id}:
    get:
      tags:
      - StructureMap
      summary: StructureMapById
      operationId: StructureMapById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureMap'
      deprecated: false
    put:
      tags:
      - StructureMap
      summary: StructureMapById
      operationId: StructureMapById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureMap'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - StructureMap
      summary: StructureMapById
      operationId: StructureMapById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /StructureMap/{id}/_history:
    get:
      tags:
      - StructureMap
      summary: StructureMapHistoryById
      operationId: StructureMapHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /StructureMap/_history:
    get:
      tags:
      - StructureMap
      summary: StructureMapHistory
      operationId: StructureMapHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /StructureMap/{id}/_history/{vid}:
    get:
      tags:
      - StructureMap
      summary: StructureMapHistoryByIdAndVid
      operationId: StructureMapHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureMap'
      deprecated: false
  /Subscription:
    post:
      tags:
      - Subscription
      summary: Subscription
      operationId: Subscription
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Subscription
      summary: Subscription
      operationId: Subscription
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: add-tag
        in: query
        description: A tag to be added to the resource matching the criteria
        style: form
        explode: true
        schema:
          type: string
      - name: contact
        in: query
        description: Contact details for the subscription
        style: form
        explode: true
        schema:
          type: string
      - name: criteria
        in: query
        description: The search rules used to determine when to send a notification
        style: form
        explode: true
        schema:
          type: string
      - name: payload
        in: query
        description: The mime-type of the notification payload
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current state of the subscription
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of channel for the sent notifications
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that will receive the notifications
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
                description: Success
      deprecated: false
  /Subscription/{id}:
    get:
      tags:
      - Subscription
      summary: SubscriptionById
      operationId: SubscriptionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      deprecated: false
    put:
      tags:
      - Subscription
      summary: SubscriptionById
      operationId: SubscriptionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Subscription
      summary: SubscriptionById
      operationId: SubscriptionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Subscription/{id}/_history:
    get:
      tags:
      - Subscription
      summary: SubscriptionHistoryById
      operationId: SubscriptionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Subscription/_history:
    get:
      tags:
      - Subscription
      summary: SubscriptionHistory
      operationId: SubscriptionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Subscription/{id}/_history/{vid}:
    get:
      tags:
      - Subscription
      summary: SubscriptionHistoryByIdAndVid
      operationId: SubscriptionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      deprecated: false
  /Substance:
    post:
      tags:
      - Substance
      summary: Substance
      operationId: Substance
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Substance'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Substance
      summary: Substance
      operationId: Substance
      parameters:
      - name: substance-reference
        in: query
        description: A component of the substance
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: The category of the substance
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: The code of the substance or ingredient
        style: form
        explode: true
        schema:
          type: string
      - name: container-identifier
        in: query
        description: Identifier of the package/container
        style: form
        explode: true
        schema:
          type: string
      - name: expiry
        in: query
        description: Expiry date of package or container of substance
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: Unique identifier for the substance
        style: form
        explode: true
        schema:
          type: string
      - name: quantity
        in: query
        description: Amount of substance in the package
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: active | inactive | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Substance'
                description: Success
      deprecated: false
  /Substance/{id}:
    get:
      tags:
      - Substance
      summary: SubstanceById
      operationId: SubstanceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substance'
      deprecated: false
    put:
      tags:
      - Substance
      summary: SubstanceById
      operationId: SubstanceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Substance'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Substance
      summary: SubstanceById
      operationId: SubstanceById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Substance/{id}/_history:
    get:
      tags:
      - Substance
      summary: SubstanceHistoryById
      operationId: SubstanceHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Substance/_history:
    get:
      tags:
      - Substance
      summary: SubstanceHistory
      operationId: SubstanceHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Substance/{id}/_history/{vid}:
    get:
      tags:
      - Substance
      summary: SubstanceHistoryByIdAndVid
      operationId: SubstanceHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substance'
      deprecated: false
  /SupplyDelivery:
    post:
      tags:
      - SupplyDelivery
      summary: SupplyDelivery
      operationId: SupplyDelivery
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyDelivery'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - SupplyDelivery
      summary: SupplyDelivery
      operationId: SupplyDelivery
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: receiver
        in: query
        description: Who collected the Supply
        style: form
        explode: true
        schema:
          type: string
      - name: supplier
        in: query
        description: Dispenser
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: in-progress | completed | abandoned | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplyDelivery'
                description: Success
      deprecated: false
  /SupplyDelivery/{id}:
    get:
      tags:
      - SupplyDelivery
      summary: SupplyDeliveryById
      operationId: SupplyDeliveryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyDelivery'
      deprecated: false
    put:
      tags:
      - SupplyDelivery
      summary: SupplyDeliveryById
      operationId: SupplyDeliveryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyDelivery'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - SupplyDelivery
      summary: SupplyDeliveryById
      operationId: SupplyDeliveryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SupplyDelivery/{id}/_history:
    get:
      tags:
      - SupplyDelivery
      summary: SupplyDeliveryHistoryById
      operationId: SupplyDeliveryHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SupplyDelivery/_history:
    get:
      tags:
      - SupplyDelivery
      summary: SupplyDeliveryHistory
      operationId: SupplyDeliveryHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SupplyDelivery/{id}/_history/{vid}:
    get:
      tags:
      - SupplyDelivery
      summary: SupplyDeliveryHistoryByIdAndVid
      operationId: SupplyDeliveryHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyDelivery'
      deprecated: false
  /SupplyRequest:
    post:
      tags:
      - SupplyRequest
      summary: SupplyRequest
      operationId: SupplyRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - SupplyRequest
      summary: SupplyRequest
      operationId: SupplyRequest
      parameters:
      - name: requester
        in: query
        description: Individual making the request
        style: form
        explode: true
        schema:
          type: string
      - name: supplier
        in: query
        description: Who is intended to fulfill the request
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: The kind of supply (central, non-stock, etc.)
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: draft | active | suspended +
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplyRequest'
                description: Success
      deprecated: false
  /SupplyRequest/{id}:
    get:
      tags:
      - SupplyRequest
      summary: SupplyRequestById
      operationId: SupplyRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyRequest'
      deprecated: false
    put:
      tags:
      - SupplyRequest
      summary: SupplyRequestById
      operationId: SupplyRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - SupplyRequest
      summary: SupplyRequestById
      operationId: SupplyRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SupplyRequest/{id}/_history:
    get:
      tags:
      - SupplyRequest
      summary: SupplyRequestHistoryById
      operationId: SupplyRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SupplyRequest/_history:
    get:
      tags:
      - SupplyRequest
      summary: SupplyRequestHistory
      operationId: SupplyRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /SupplyRequest/{id}/_history/{vid}:
    get:
      tags:
      - SupplyRequest
      summary: SupplyRequestHistoryByIdAndVid
      operationId: SupplyRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyRequest'
      deprecated: false
  /Task:
    post:
      tags:
      - Task
      summary: Task
      operationId: Task
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Task
      summary: Task
      operationId: Task
      parameters:
      - name: based-on
        in: query
        description: Search by requests this task is based on
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Search by encounter or episode
        style: form
        explode: true
        schema:
          type: string
      - name: focus
        in: query
        description: Search by task focus
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: Search by responsible organization
        style: form
        explode: true
        schema:
          type: string
      - name: owner
        in: query
        description: Search by task owner
        style: form
        explode: true
        schema:
          type: string
      - name: part-of
        in: query
        description: Search by task this task is part of
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Search by patient
        style: form
        explode: true
        schema:
          type: string
      - name: requester
        in: query
        description: Search by task requester
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Search by subject
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: authored-on
        in: query
        description: Search by creation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: business-status
        in: query
        description: Search by business status
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: Search by task code
        style: form
        explode: true
        schema:
          type: string
      - name: group-identifier
        in: query
        description: Search by group identifier
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: Search for a task instance by its business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: intent
        in: query
        description: Search by task intent
        style: form
        explode: true
        schema:
          type: string
      - name: modified
        in: query
        description: Search by last modification date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: performer
        in: query
        description: Search by recommended type of performer (e.g., Requester, Performer, Scheduler).
        style: form
        explode: true
        schema:
          type: string
      - name: period
        in: query
        description: Search by period Task is/was underway
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: priority
        in: query
        description: Search by task priority
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Search by task status
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                description: Success
      deprecated: false
  /Task/{id}:
    get:
      tags:
      - Task
      summary: TaskById
      operationId: TaskById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      deprecated: false
    put:
      tags:
      - Task
      summary: TaskById
      operationId: TaskById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Task
      summary: TaskById
      operationId: TaskById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Task/{id}/_history:
    get:
      tags:
      - Task
      summary: TaskHistoryById
      operationId: TaskHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Task/_history:
    get:
      tags:
      - Task
      summary: TaskHistory
      operationId: TaskHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Task/{id}/_history/{vid}:
    get:
      tags:
      - Task
      summary: TaskHistoryByIdAndVid
      operationId: TaskHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      deprecated: false
  /TestReport:
    post:
      tags:
      - TestReport
      summary: TestReport
      operationId: TestReport
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - TestReport
      summary: TestReport
      operationId: TestReport
      parameters:
      - name: testscript
        in: query
        description: The test script executed to produce this report
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: An external identifier for the test report
        style: form
        explode: true
        schema:
          type: string
      - name: issued
        in: query
        description: The test report generation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: participant
        in: query
        description: The reference to a participant in the test execution
        style: form
        explode: true
        schema:
          type: string
      - name: result
        in: query
        description: The result disposition of the test execution
        style: form
        explode: true
        schema:
          type: string
      - name: tester
        in: query
        description: The name of the testing organization
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /TestReport/{id}:
    get:
      tags:
      - TestReport
      summary: TestReportById
      operationId: TestReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - TestReport
      summary: TestReportById
      operationId: TestReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - TestReport
      summary: TestReportById
      operationId: TestReportById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /TestReport/{id}/_history:
    get:
      tags:
      - TestReport
      summary: TestReportHistoryById
      operationId: TestReportHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /TestReport/_history:
    get:
      tags:
      - TestReport
      summary: TestReportHistory
      operationId: TestReportHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /TestReport/{id}/_history/{vid}:
    get:
      tags:
      - TestReport
      summary: TestReportHistoryByIdAndVid
      operationId: TestReportHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /TestScript:
    post:
      tags:
      - TestScript
      summary: TestScript
      operationId: TestScript
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestScript'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - TestScript
      summary: TestScript
      operationId: TestScript
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The test script publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the test script
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the test script
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the test script
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the test script
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the test script
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the test script
        style: form
        explode: true
        schema:
          type: string
      - name: testscript-capability
        in: query
        description: TestScript required and validated capability
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the test script
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the test script
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the test script
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestScript'
                description: Success
      deprecated: false
  /TestScript/{id}:
    get:
      tags:
      - TestScript
      summary: TestScriptById
      operationId: TestScriptById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestScript'
      deprecated: false
    put:
      tags:
      - TestScript
      summary: TestScriptById
      operationId: TestScriptById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestScript'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - TestScript
      summary: TestScriptById
      operationId: TestScriptById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /TestScript/{id}/_history:
    get:
      tags:
      - TestScript
      summary: TestScriptHistoryById
      operationId: TestScriptHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /TestScript/_history:
    get:
      tags:
      - TestScript
      summary: TestScriptHistory
      operationId: TestScriptHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /TestScript/{id}/_history/{vid}:
    get:
      tags:
      - TestScript
      summary: TestScriptHistoryByIdAndVid
      operationId: TestScriptHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestScript'
      deprecated: false
  /ValueSet:
    post:
      tags:
      - ValueSet
      summary: ValueSet
      operationId: ValueSet
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueSet'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ValueSet
      summary: ValueSet
      operationId: ValueSet
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The value set publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the value set
        style: form
        explode: true
        schema:
          type: string
      - name: expansion
        in: query
        description: Uniquely identifies this expansion
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: External identifier for the value set
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the value set
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the value set
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the value set
        style: form
        explode: true
        schema:
          type: string
      - name: reference
        in: query
        description: A code system included or excluded in the value set or an imported value set
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the value set
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the value set
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the value set
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the value set
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValueSet'
                description: Success
      deprecated: false
  /ValueSet/{id}:
    get:
      tags:
      - ValueSet
      summary: ValueSetById
      operationId: ValueSetById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueSet'
      deprecated: false
    put:
      tags:
      - ValueSet
      summary: ValueSetById
      operationId: ValueSetById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueSet'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ValueSet
      summary: ValueSetById
      operationId: ValueSetById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ValueSet/{id}/_history:
    get:
      tags:
      - ValueSet
      summary: ValueSetHistoryById
      operationId: ValueSetHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ValueSet/_history:
    get:
      tags:
      - ValueSet
      summary: ValueSetHistory
      operationId: ValueSetHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ValueSet/{id}/_history/{vid}:
    get:
      tags:
      - ValueSet
      summary: ValueSetHistoryByIdAndVid
      operationId: ValueSetHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueSet'
      deprecated: false
  /VisionPrescription:
    post:
      tags:
      - VisionPrescription
      summary: VisionPrescription
      operationId: VisionPrescription
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisionPrescription'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - VisionPrescription
      summary: VisionPrescription
      operationId: VisionPrescription
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: prescriber
        in: query
        description: Who authorizes the vision product
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: datewritten
        in: query
        description: Return prescriptions written on this date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VisionPrescription'
                description: Success
      deprecated: false
  /VisionPrescription/{id}:
    get:
      tags:
      - VisionPrescription
      summary: VisionPrescriptionById
      operationId: VisionPrescriptionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisionPrescription'
      deprecated: false
    put:
      tags:
      - VisionPrescription
      summary: VisionPrescriptionById
      operationId: VisionPrescriptionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisionPrescription'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - VisionPrescription
      summary: VisionPrescriptionById
      operationId: VisionPrescriptionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /VisionPrescription/{id}/_history:
    get:
      tags:
      - VisionPrescription
      summary: VisionPrescriptionHistoryById
      operationId: VisionPrescriptionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /VisionPrescription/_history:
    get:
      tags:
      - VisionPrescription
      summary: VisionPrescriptionHistory
      operationId: VisionPrescriptionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /VisionPrescription/{id}/_history/{vid}:
    get:
      tags:
      - VisionPrescription
      summary: VisionPrescriptionHistoryByIdAndVid
      operationId: VisionPrescriptionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisionPrescription'
      deprecated: false
components:
  schemas:
    Account:
      title: Account
      required:
      - resourceType
      - fhir_comments
      - id
      - text
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
    AllergyIntolerance:
      title: AllergyIntolerance
      required:
      - resourceType
      - id
      - text
      - identifier
      - status
      - _status
      - type
      - _type
      - category
      - _category
      - criticality
      - _criticality
      - substance
      - patient
      - recordedDate
      - _recordedDate
      - recorder
      - reporter
      - onset
      - _onset
      - lastOccurence
      - _lastOccurence
      - note
      - reaction
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        _status:
          $ref: '#/components/schemas/Status'
        type:
          minLength: 1
          type: string
        _type:
          $ref: '#/components/schemas/Type'
        category:
          minLength: 1
          type: string
        _category:
          $ref: '#/components/schemas/Category'
        criticality:
          minLength: 1
          type: string
        _criticality:
          $ref: '#/components/schemas/Criticality'
        substance:
          $ref: '#/components/schemas/Substance1'
        patient:
          $ref: '#/components/schemas/Patient21'
        recordedDate:
          minLength: 1
          type: string
        _recordedDate:
          $ref: '#/components/schemas/RecordedDate'
        recorder:
          $ref: '#/components/schemas/Recorder'
        reporter:
          $ref: '#/components/schemas/Reporter'
        onset:
          minLength: 1
          type: string
        _onset:
          $ref: '#/components/schemas/Onset'
        lastOccurence:
          minLength: 1
          type: string
        _lastOccurence:
          $ref: '#/components/schemas/LastOccurence'
        note:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: ''
        reaction:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
          description: ''
    Appointment:
      title: Appointment
      required:
      - resourceType
      - id
      - text
      - status
      - serviceCategory
      - serviceType
      - specialty
      - appointmentType
      - priority
      - description
      - start
      - end
      - created
      - comment
      - participant
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        serviceCategory:
          $ref: '#/components/schemas/ServiceCategory'
        serviceType:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceType'
          description: ''
        specialty:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Specialty'
          description: ''
        appointmentType:
          $ref: '#/components/schemas/AppointmentType'
        priority:
          type: number
        description:
          minLength: 1
          type: string
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        comment:
          minLength: 1
          type: string
        participant:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Participant'
          description: ''
    AppointmentResponse:
      title: AppointmentResponse
      required:
      - resourceType
      - id
      - text
      - appointment
      - actor
      - participantStatus
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        appointment:
          $ref: '#/components/schemas/Appointment1'
        actor:
          $ref: '#/components/schemas/Actor'
        participantStatus:
          minLength: 1
          type: string
    AuditEvent:
      title: AuditEvent
      required:
      - resourceType
      - id
      - text
      - type
      - subtype
      - action
      - recorded
      - outcome
      - agent
      - source
      - entity
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          $ref: '#/components/schemas/Type2'
        subtype:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Subtype'
          description: ''
        action:
          minLength: 1
          type: string
        recorded:
          minLength: 1
          type: string
        outcome:
          minLength: 1
          type: string
        agent:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Agent'
          description: ''
        source:
          $ref: '#/components/schemas/Source'
        entity:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: ''
    Basic:
      title: Basic
      required:
      - resourceType
      - id
      - text
      - extension
      - modifierExtension
      - code
      - subject
      - created
      - author
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension'
          description: ''
        modifierExtension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ModifierExtension'
          description: ''
        code:
          $ref: '#/components/schemas/Code'
        subject:
          $ref: '#/components/schemas/Subject'
        created:
          minLength: 1
          type: string
        author:
          $ref: '#/components/schemas/Author'
    Binary:
      title: Binary
      required:
      - resourceType
      - id
      - contentType
      - content
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        contentType:
          minLength: 1
          type: string
        content:
          minLength: 1
          type: string
    BodySite:
      title: BodySite
      required:
      - resourceType
      - id
      - text
      - patient
      - identifier
      - code
      - modifier
      - description
      - image
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        patient:
          $ref: '#/components/schemas/Patient1'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier3'
          description: ''
        code:
          $ref: '#/components/schemas/Code1'
        modifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Modifier'
          description: ''
        description:
          minLength: 1
          type: string
        image:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: ''
    Bundle:
      title: Bundle
      required:
      - resourceType
      - id
      - meta
      - type
      - total
      - _total
      - link
      - entry
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        type:
          minLength: 1
          type: string
        total:
          type: number
        _total:
          $ref: '#/components/schemas/Total'
        link:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: ''
        entry:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entry'
          description: ''
    CarePlan:
      title: CarePlan
      required:
      - resourceType
      - id
      - text
      - contained
      - subject
      - status
      - period
      - addresses
      - participant
      - goal
      - activity
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained'
          description: ''
        subject:
          $ref: '#/components/schemas/Subject'
        status:
          minLength: 1
          type: string
        period:
          $ref: '#/components/schemas/Period'
        addresses:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: ''
        participant:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Participant1'
          description: ''
        goal:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Goal2'
          description: ''
        activity:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          description: ''
    CareTeam:
      title: CareTeam
      required:
      - resourceType
      - id
      - text
      - contained
      - subject
      - period
      - participant
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained1'
          description: ''
        subject:
          $ref: '#/components/schemas/Subject'
        period:
          $ref: '#/components/schemas/Period'
        participant:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Participant1'
          description: ''
    Claim:
      title: Claim
      required:
      - resourceType
      - id
      - text
      - type
      - identifier
      - created
      - targetReference
      - organizationReference
      - use
      - priority
      - payee
      - diagnosis
      - patientReference
      - coverage
      - item
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          minLength: 1
          type: string
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        targetReference:
          $ref: '#/components/schemas/TargetReference'
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        use:
          minLength: 1
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        payee:
          $ref: '#/components/schemas/Payee'
        diagnosis:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Diagnosis'
          description: ''
        patientReference:
          $ref: '#/components/schemas/PatientReference'
        coverage:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coverage4'
          description: ''
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item'
          description: ''
    ClaimResponse:
      title: ClaimResponse
      required:
      - resourceType
      - id
      - text
      - identifier
      - requestReference
      - created
      - organizationIdentifier
      - outcome
      - _outcome
      - disposition
      - payeeType
      - item
      - totalCost
      - totalBenefit
      - paymentDate
      - _paymentDate
      - paymentAmount
      - paymentRef
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        created:
          minLength: 1
          type: string
        organizationIdentifier:
          $ref: '#/components/schemas/OrganizationIdentifier'
        outcome:
          minLength: 1
          type: string
        _outcome:
          $ref: '#/components/schemas/Outcome'
        disposition:
          minLength: 1
          type: string
        payeeType:
          $ref: '#/components/schemas/PayeeType'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item1'
          description: ''
        totalCost:
          $ref: '#/components/schemas/TotalCost'
        totalBenefit:
          $ref: '#/components/schemas/TotalBenefit'
        paymentDate:
          minLength: 1
          type: string
        _paymentDate:
          $ref: '#/components/schemas/PaymentDate'
        paymentAmount:
          $ref: '#/components/schemas/PaymentAmount'
        paymentRef:
          $ref: '#/components/schemas/PaymentRef'
    ClinicalImpression:
      title: ClinicalImpression
      required:
      - resourceType
      - id
      - text
      - patient
      - assessor
      - status
      - date
      - description
      - problem
      - investigations
      - summary
      - finding
      - plan
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        patient:
          $ref: '#/components/schemas/Patient1'
        assessor:
          $ref: '#/components/schemas/Assessor'
        status:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        problem:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Problem'
          description: ''
        investigations:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Investigation'
          description: ''
        summary:
          minLength: 1
          type: string
        finding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Finding'
          description: ''
        plan:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Plan'
          description: ''
    CodeSystem:
      title: CodeSystem
      required:
      - resourceType
      - id
      - meta
      - text
      - url
      - _url
      - identifier
      - version
      - _version
      - name
      - status
      - experimental
      - publisher
      - contact
      - date
      - description
      - caseSensitive
      - _caseSensitive
      - content
      - concept
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        meta:
          $ref: '#/components/schemas/Meta1'
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        _url:
          $ref: '#/components/schemas/Url'
        identifier:
          $ref: '#/components/schemas/Identifier6'
        version:
          minLength: 1
          type: string
        _version:
          $ref: '#/components/schemas/Version'
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        date:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        caseSensitive:
          type: boolean
        _caseSensitive:
          $ref: '#/components/schemas/CaseSensitive'
        content:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept'
          description: ''
    Communication:
      title: Communication
      required:
      - resourceType
      - id
      - text
      - identifier
      - category
      - sender
      - recipient
      - payload
      - status
      - sent
      - subject
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier7'
          description: ''
        category:
          $ref: '#/components/schemas/Category3'
        sender:
          $ref: '#/components/schemas/Sender'
        recipient:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Recipient'
          description: ''
        payload:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Payload'
          description: ''
        status:
          minLength: 1
          type: string
        sent:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject4'
    CommunicationRequest:
      title: CommunicationRequest
      required:
      - resourceType
      - id
      - text
      - subject
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        subject:
          $ref: '#/components/schemas/Subject5'
    Composition:
      title: Composition
      required:
      - resourceType
      - id
      - text
      - identifier
      - date
      - type
      - class
      - title
      - status
      - confidentiality
      - subject
      - author
      - attester
      - custodian
      - event
      - encounter
      - section
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          $ref: '#/components/schemas/Identifier'
        date:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type9'
        class:
          $ref: '#/components/schemas/Class'
        title:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        confidentiality:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject'
        author:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Author1'
          description: ''
        attester:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attester'
          description: ''
        custodian:
          $ref: '#/components/schemas/Custodian'
        event:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Event'
          description: ''
        encounter:
          $ref: '#/components/schemas/Encounter1'
        section:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Section'
          description: ''
    ConceptMap:
      title: ConceptMap
      required:
      - resourceType
      - id
      - text
      - url
      - identifier
      - version
      - _version
      - name
      - _name
      - status
      - experimental
      - publisher
      - contact
      - date
      - description
      - useContext
      - requirements
      - copyright
      - sourceReference
      - targetReference
      - element
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        identifier:
          $ref: '#/components/schemas/Identifier'
        version:
          minLength: 1
          type: string
        _version:
          $ref: '#/components/schemas/Version'
        name:
          minLength: 1
          type: string
        _name:
          $ref: '#/components/schemas/Name1'
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        date:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        useContext:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UseContext'
          description: ''
        requirements:
          minLength: 1
          type: string
        copyright:
          minLength: 1
          type: string
        sourceReference:
          $ref: '#/components/schemas/SourceReference'
        targetReference:
          $ref: '#/components/schemas/TargetReference'
        element:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Element'
          description: ''
    Condition:
      title: Condition
      required:
      - resourceType
      - id
      - text
      - patient
      - code
      - category
      - verificationStatus
      - severity
      - onsetDateTime
      - bodySite
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        patient:
          $ref: '#/components/schemas/Patient1'
        code:
          $ref: '#/components/schemas/Code1'
        category:
          $ref: '#/components/schemas/Category4'
        verificationStatus:
          minLength: 1
          type: string
        severity:
          $ref: '#/components/schemas/Severity'
        onsetDateTime:
          minLength: 1
          type: string
        bodySite:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BodySite1'
          description: ''
    Consent:
      title: Consent
      required:
      - resourceType
      - id
      - meta
      - identifier
      - status
      - category
      - patient
      - period
      - dateTime
      - purpose
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          type: number
        meta:
          $ref: '#/components/schemas/Meta2'
        identifier:
          $ref: '#/components/schemas/Identifier10'
        status:
          minLength: 1
          type: string
        category:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category5'
          description: ''
        patient:
          $ref: '#/components/schemas/Patient1'
        period:
          $ref: '#/components/schemas/Period3'
        dateTime:
          minLength: 1
          type: string
        purpose:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Purpose'
          description: ''
    Contract:
      title: Contract
      required:
      - resourceType
      - fhir_comments
      - id
      - text
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
    Coverage:
      title: Coverage
      required:
      - resourceType
      - id
      - text
      - issuerReference
      - period
      - type
      - planholderReference
      - beneficiaryReference
      - relationship
      - identifier
      - plan
      - subPlan
      - dependent
      - sequence
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        issuerReference:
          $ref: '#/components/schemas/IssuerReference'
        period:
          $ref: '#/components/schemas/Period2'
        type:
          $ref: '#/components/schemas/Type2'
        planholderReference:
          $ref: '#/components/schemas/PlanholderReference'
        beneficiaryReference:
          $ref: '#/components/schemas/BeneficiaryReference'
        relationship:
          $ref: '#/components/schemas/Relationship'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        plan:
          minLength: 1
          type: string
        subPlan:
          minLength: 1
          type: string
        dependent:
          type: number
        sequence:
          type: number
    DataElement:
      title: DataElement
      required:
      - resourceType
      - id
      - text
      - contained
      - identifier
      - version
      - status
      - publisher
      - name
      - useContext
      - element
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained2'
          description: ''
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier1'
          description: ''
        version:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        useContext:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UseContext1'
          description: ''
        element:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Element1'
          description: ''
    DetectedIssue:
      title: DetectedIssue
      required:
      - resourceType
      - id
      - text
      - category
      - severity
      - implicated
      - detail
      - date
      - author
      - mitigation
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        category:
          $ref: '#/components/schemas/Category6'
        severity:
          minLength: 1
          type: string
        implicated:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Implicated'
          description: ''
        detail:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        author:
          $ref: '#/components/schemas/Author'
        mitigation:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Mitigation'
          description: ''
    Device:
      title: Device
      required:
      - resourceType
      - id
      - _id
      - text
      - identifier
      - status
      - type
      - lotNumber
      - manufacturer
      - model
      - contact
      - note
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        _id:
          $ref: '#/components/schemas/Id'
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type12'
        lotNumber:
          minLength: 1
          type: string
        manufacturer:
          minLength: 1
          type: string
        model:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact2'
          description: ''
        note:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Note1'
          description: ''
    DeviceComponent:
      title: DeviceComponent
      required:
      - resourceType
      - id
      - _id
      - text
      - contained
      - type
      - identifier
      - lastSystemChange
      - source
      - operationalStatus
      - languageCode
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        _id:
          $ref: '#/components/schemas/Id'
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained3'
          description: ''
        type:
          $ref: '#/components/schemas/Type9'
        identifier:
          $ref: '#/components/schemas/Identifier15'
        lastSystemChange:
          minLength: 1
          type: string
        source:
          $ref: '#/components/schemas/Source1'
        operationalStatus:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OperationalStatus'
          description: ''
        languageCode:
          $ref: '#/components/schemas/LanguageCode'
    DeviceMetric:
      title: DeviceMetric
      required:
      - resourceType
      - id
      - text
      - type
      - identifier
      - unit
      - category
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          $ref: '#/components/schemas/Type9'
        identifier:
          $ref: '#/components/schemas/Identifier'
        unit:
          $ref: '#/components/schemas/Unit'
        category:
          minLength: 1
          type: string
    DeviceUseStatement:
      title: DeviceUseStatement
      required:
      - resourceType
      - id
      - text
      - device
      - subject
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        device:
          $ref: '#/components/schemas/Device1'
        subject:
          $ref: '#/components/schemas/Subject4'
    DiagnosticReport:
      title: DiagnosticReport
      required:
      - resourceType
      - id
      - text
      - contained
      - identifier
      - status
      - category
      - code
      - subject
      - encounter
      - effectiveDateTime
      - issued
      - _issued
      - performer
      - result
      - presentedForm
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained4'
          description: ''
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        category:
          $ref: '#/components/schemas/Category1'
        code:
          $ref: '#/components/schemas/Code8'
        subject:
          $ref: '#/components/schemas/Subject4'
        encounter:
          $ref: '#/components/schemas/Encounter1'
        effectiveDateTime:
          minLength: 1
          type: string
        issued:
          minLength: 1
          type: string
        _issued:
          $ref: '#/components/schemas/Issued'
        performer:
          $ref: '#/components/schemas/Performer'
        result:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Result'
          description: ''
        presentedForm:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PresentedForm'
          description: ''
    DocumentReference:
      title: DocumentReference
      required:
      - resourceType
      - id
      - text
      - contained
      - masterIdentifier
      - identifier
      - subject
      - type
      - class
      - author
      - custodian
      - authenticator
      - created
      - indexed
      - status
      - docStatus
      - relatesTo
      - description
      - securityLabel
      - content
      - context
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained5'
          description: ''
        masterIdentifier:
          $ref: '#/components/schemas/MasterIdentifier'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        subject:
          $ref: '#/components/schemas/Subject4'
        type:
          $ref: '#/components/schemas/Type9'
        class:
          $ref: '#/components/schemas/Class'
        author:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Author'
          description: ''
        custodian:
          $ref: '#/components/schemas/Custodian1'
        authenticator:
          $ref: '#/components/schemas/Authenticator'
        created:
          minLength: 1
          type: string
        indexed:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        docStatus:
          $ref: '#/components/schemas/DocStatus'
        relatesTo:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RelatesTo'
          description: ''
        description:
          minLength: 1
          type: string
        securityLabel:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityLabel'
          description: ''
        content:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Content'
          description: ''
        context:
          $ref: '#/components/schemas/Context'
    EligibilityRequest:
      title: EligibilityRequest
      required:
      - resourceType
      - id
      - text
      - identifier
      - created
      - targetReference
      - organizationReference
      - priority
      - patientReference
      - coverageReference
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        targetReference:
          $ref: '#/components/schemas/TargetReference'
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        priority:
          $ref: '#/components/schemas/Priority'
        patientReference:
          $ref: '#/components/schemas/PatientReference'
        coverageReference:
          $ref: '#/components/schemas/CoverageReference'
    EligibilityResponse:
      title: EligibilityResponse
      required:
      - resourceType
      - id
      - text
      - identifier
      - requestReference
      - outcome
      - disposition
      - created
      - organizationReference
      - inforce
      - _inforce
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        outcome:
          minLength: 1
          type: string
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        inforce:
          type: boolean
        _inforce:
          $ref: '#/components/schemas/Inforce'
    Encounter:
      title: Encounter
      required:
      - resourceType
      - id
      - text
      - status
      - class
      - patient
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        class:
          minLength: 1
          type: string
        patient:
          $ref: '#/components/schemas/Patient1'
    EnrollmentRequest:
      title: EnrollmentRequest
      required:
      - resourceType
      - id
      - text
      - identifier
      - created
      - organization
      - subject
      - coverage
      - relationship
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        organization:
          $ref: '#/components/schemas/Organization1'
        subject:
          $ref: '#/components/schemas/Subject4'
        coverage:
          $ref: '#/components/schemas/Coverage2'
        relationship:
          $ref: '#/components/schemas/Relationship'
    EnrollmentResponse:
      title: EnrollmentResponse
      required:
      - resourceType
      - id
      - text
      - identifier
      - request
      - outcome
      - disposition
      - created
      - organization
      - requestOrganization
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        request:
          $ref: '#/components/schemas/Request'
        outcome:
          minLength: 1
          type: string
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organization:
          $ref: '#/components/schemas/Organization1'
        requestOrganization:
          $ref: '#/components/schemas/RequestOrganization'
    EpisodeOfCare:
      title: EpisodeOfCare
      required:
      - resourceType
      - fhir_comments
      - id
      - text
      - identifier
      - status
      - statusHistory
      - type
      - condition
      - patient
      - managingOrganization
      - period
      - referralRequest
      - careManager
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        statusHistory:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/StatusHistory'
          description: ''
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type19'
          description: ''
        condition:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Condition1'
          description: ''
        patient:
          $ref: '#/components/schemas/Patient1'
        managingOrganization:
          $ref: '#/components/schemas/ManagingOrganization'
        period:
          $ref: '#/components/schemas/Period3'
        referralRequest:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ReferralRequest2'
          description: ''
        careManager:
          $ref: '#/components/schemas/CareManager'
    ExpansionProfile:
      title: ExpansionProfile
      required:
      - resourceType
      - id
      - text
      - status
      - experimental
      - excludeNested
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        excludeNested:
          type: boolean
    ExplanationOfBenefit:
      title: ExplanationOfBenefit
      required:
      - resourceType
      - id
      - text
      - identifier
      - claimReference
      - created
      - _created
      - disposition
      - organizationReference
      - patientReference
      - coverage
      - item
      - totalCost
      - totalBenefit
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        claimReference:
          $ref: '#/components/schemas/ClaimReference'
        created:
          minLength: 1
          type: string
        _created:
          $ref: '#/components/schemas/Created'
        disposition:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        patientReference:
          $ref: '#/components/schemas/PatientReference'
        coverage:
          $ref: '#/components/schemas/Coverage3'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item4'
          description: ''
        totalCost:
          $ref: '#/components/schemas/TotalCost'
        totalBenefit:
          $ref: '#/components/schemas/TotalBenefit'
    FamilyMemberHistory:
      title: FamilyMemberHistory
      required:
      - resourceType
      - id
      - text
      - patient
      - date
      - status
      - relationship
      - condition
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        patient:
          $ref: '#/components/schemas/Patient8'
        date:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        relationship:
          $ref: '#/components/schemas/Relationship2'
        condition:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Condition2'
          description: ''
    Flag:
      title: Flag
      required:
      - resourceType
      - id
      - text
      - category
      - status
      - subject
      - author
      - code
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        category:
          $ref: '#/components/schemas/Category9'
        status:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject'
        author:
          $ref: '#/components/schemas/Author1'
        code:
          $ref: '#/components/schemas/Code1'
    Goal:
      title: Goal
      required:
      - resourceType
      - id
      - text
      - extension
      - subject
      - description
      - status
      - addresses
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension1'
          description: ''
        subject:
          $ref: '#/components/schemas/Subject'
        description:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        addresses:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: ''
    Group:
      title: Group
      required:
      - resourceType
      - id
      - text
      - type
      - actual
      - code
      - name
      - quantity
      - characteristic
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          minLength: 1
          type: string
        actual:
          type: boolean
        code:
          $ref: '#/components/schemas/Code2'
        name:
          minLength: 1
          type: string
        quantity:
          type: number
        characteristic:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: ''
    GuidanceResponse:
      title: GuidanceResponse
      required:
      - resourceType
      - id
      - text
      - module
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        module:
          $ref: '#/components/schemas/Module'
        status:
          minLength: 1
          type: string
    HealthcareService:
      title: HealthcareService
      required:
      - resourceType
      - id
      - text
      - contained
      - serviceType
      - specialty
      - location
      - serviceName
      - comment
      - extraDetails
      - telecom
      - coverageArea
      - eligibility
      - eligibilityNote
      - programName
      - characteristic
      - referralMethod
      - publicKey
      - appointmentRequired
      - availableTime
      - notAvailable
      - availabilityExceptions
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained6'
          description: ''
        serviceType:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceType1'
          description: ''
        specialty:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Specialty'
          description: ''
        location:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Location1'
          description: ''
        serviceName:
          minLength: 1
          type: string
        comment:
          minLength: 1
          type: string
        extraDetails:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
        coverageArea:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CoverageArea'
          description: ''
        eligibility:
          $ref: '#/components/schemas/Eligibility'
        eligibilityNote:
          minLength: 1
          type: string
        programName:
          type: array
          items:
            type: object
          description: ''
        characteristic:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Characteristic1'
          description: ''
        referralMethod:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ReferralMethod'
          description: ''
        publicKey:
          minLength: 1
          type: string
        appointmentRequired:
          type: boolean
        availableTime:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AvailableTime'
          description: ''
        notAvailable:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotAvailable'
          description: ''
        availabilityExceptions:
          minLength: 1
          type: string
    ImagingStudy:
      title: ImagingStudy
      required:
      - resourceType
      - id
      - text
      - uid
      - patient
      - started
      - numberOfSeries
      - numberOfInstances
      - series
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        uid:
          minLength: 1
          type: string
        patient:
          $ref: '#/components/schemas/Patient1'
        started:
          minLength: 1
          type: string
        numberOfSeries:
          type: number
        numberOfInstances:
          type: number
        series:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Series'
          description: ''
    Immunization:
      title: Immunization
      required:
      - resourceType
      - id
      - text
      - identifier
      - status
      - date
      - vaccineCode
      - patient
      - wasNotGiven
      - reported
      - performer
      - requester
      - encounter
      - manufacturer
      - location
      - lotNumber
      - expirationDate
      - site
      - route
      - doseQuantity
      - note
      - explanation
      - reaction
      - vaccinationProtocol
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        vaccineCode:
          $ref: '#/components/schemas/VaccineCode'
        patient:
          $ref: '#/components/schemas/Patient1'
        wasNotGiven:
          type: boolean
        reported:
          type: boolean
        performer:
          $ref: '#/components/schemas/Performer3'
        requester:
          $ref: '#/components/schemas/Requester'
        encounter:
          $ref: '#/components/schemas/Encounter1'
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
        location:
          $ref: '#/components/schemas/Location1'
        lotNumber:
          minLength: 1
          type: string
        expirationDate:
          minLength: 1
          type: string
        site:
          $ref: '#/components/schemas/Site'
        route:
          $ref: '#/components/schemas/Route'
        doseQuantity:
          $ref: '#/components/schemas/DoseQuantity'
        note:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Note2'
          description: ''
        explanation:
          $ref: '#/components/schemas/Explanation'
        reaction:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Reaction1'
          description: ''
        vaccinationProtocol:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VaccinationProtocol'
          description: ''
    ImmunizationRecommendation:
      title: ImmunizationRecommendation
      required:
      - resourceType
      - id
      - text
      - identifier
      - patient
      - recommendation
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        patient:
          $ref: '#/components/schemas/Patient1'
        recommendation:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
          description: ''
    ImplementationGuide:
      title: ImplementationGuide
      required:
      - resourceType
      - id
      - text
      - url
      - version
      - name
      - status
      - experimental
      - publisher
      - contact
      - date
      - description
      - useContext
      - copyright
      - fhirVersion
      - dependency
      - package
      - global
      - binary
      - _binary
      - page
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        date:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        useContext:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UseContext2'
          description: ''
        copyright:
          minLength: 1
          type: string
        fhirVersion:
          minLength: 1
          type: string
        dependency:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
          description: ''
        package:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Package'
          description: ''
        global:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Global'
          description: ''
        binary:
          type: array
          items:
            type: object
          description: ''
        _binary:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Binary1'
          description: ''
        page:
          $ref: '#/components/schemas/Page'
    Library:
      title: Library
      required:
      - resourceType
      - id
      - text
      - moduleMetadata
      - model
      - valueSet
      - dataRequirement
      - document
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        moduleMetadata:
          $ref: '#/components/schemas/ModuleMetadata'
        model:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Model'
          description: ''
        valueSet:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ValueSet2'
          description: ''
        dataRequirement:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DataRequirement'
          description: ''
        document:
          $ref: '#/components/schemas/Document'
    Linkage:
      title: Linkage
      required:
      - resourceType
      - id
      - text
      - item
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item5'
          description: ''
    List:
      title: List
      required:
      - resourceType
      - id
      - text
      - identifier
      - status
      - mode
      - subject
      - encounter
      - date
      - source
      - entry
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject5'
        encounter:
          $ref: '#/components/schemas/Encounter1'
        date:
          minLength: 1
          type: string
        source:
          $ref: '#/components/schemas/Source1'
        entry:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entry2'
          description: ''
    Location:
      title: Location
      required:
      - resourceType
      - id
      - text
      - extension
      - identifier
      - status
      - name
      - description
      - mode
      - telecom
      - address
      - physicalType
      - position
      - managingOrganization
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension7'
          description: ''
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier1'
          description: ''
        status:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
        address:
          $ref: '#/components/schemas/Address2'
        physicalType:
          $ref: '#/components/schemas/PhysicalType1'
        position:
          $ref: '#/components/schemas/Position'
        managingOrganization:
          $ref: '#/components/schemas/ManagingOrganization'
    Media:
      title: Media
      required:
      - resourceType
      - id
      - text
      - type
      - subtype
      - subject
      - operator
      - deviceName
      - height
      - width
      - frames
      - _frames
      - content
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          minLength: 1
          type: string
        subtype:
          $ref: '#/components/schemas/Subtype1'
        subject:
          $ref: '#/components/schemas/Subject4'
        operator:
          $ref: '#/components/schemas/Operator'
        deviceName:
          minLength: 1
          type: string
        height:
          type: number
        width:
          type: number
        frames:
          type: number
        _frames:
          $ref: '#/components/schemas/Frames'
        content:
          $ref: '#/components/schemas/Content2'
    Medication:
      title: Medication
      required:
      - resourceType
      - id
      - text
      - code
      - isBrand
      - package
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        code:
          $ref: '#/components/schemas/Code14'
        isBrand:
          type: boolean
        package:
          $ref: '#/components/schemas/Package1'
    MedicationAdministration:
      title: MedicationAdministration
      required:
      - resourceType
      - id
      - text
      - status
      - medicationReference
      - patient
      - effectiveTimePeriod
      - practitioner
      - prescription
      - dosage
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        medicationReference:
          $ref: '#/components/schemas/MedicationReference'
        patient:
          $ref: '#/components/schemas/Patient1'
        effectiveTimePeriod:
          $ref: '#/components/schemas/EffectiveTimePeriod'
        practitioner:
          $ref: '#/components/schemas/Practitioner2'
        prescription:
          $ref: '#/components/schemas/Prescription'
        dosage:
          $ref: '#/components/schemas/Dosage'
    MedicationDispense:
      title: MedicationDispense
      required:
      - resourceType
      - id
      - text
      - status
      - medicationReference
      - patient
      - dispenser
      - authorizingPrescription
      - type
      - quantity
      - daysSupply
      - whenPrepared
      - whenHandedOver
      - dosageInstruction
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        medicationReference:
          $ref: '#/components/schemas/MedicationReference2'
        patient:
          $ref: '#/components/schemas/Patient1'
        dispenser:
          $ref: '#/components/schemas/Dispenser'
        authorizingPrescription:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AuthorizingPrescription'
          description: ''
        type:
          $ref: '#/components/schemas/Type9'
        quantity:
          $ref: '#/components/schemas/Quantity1'
        daysSupply:
          $ref: '#/components/schemas/DaysSupply'
        whenPrepared:
          minLength: 1
          type: string
        whenHandedOver:
          minLength: 1
          type: string
        dosageInstruction:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DosageInstruction'
          description: ''
    MedicationStatement:
      title: MedicationStatement
      required:
      - resourceType
      - id
      - text
      - status
      - medicationReference
      - patient
      - effectiveDateTime
      - informationSource
      - dateAsserted
      - wasNotTaken
      - reasonForUseCodeableConcept
      - note
      - dosage
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        medicationReference:
          $ref: '#/components/schemas/MedicationReference3'
        patient:
          $ref: '#/components/schemas/Patient1'
        effectiveDateTime:
          minLength: 1
          type: string
        informationSource:
          $ref: '#/components/schemas/InformationSource'
        dateAsserted:
          minLength: 1
          type: string
        wasNotTaken:
          type: boolean
        reasonForUseCodeableConcept:
          $ref: '#/components/schemas/ReasonForUseCodeableConcept'
        note:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Note2'
          description: ''
        dosage:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Dosage1'
          description: ''
    MessageHeader:
      title: MessageHeader
      required:
      - resourceType
      - id
      - text
      - timestamp
      - event
      - response
      - source
      - destination
      - enterer
      - author
      - responsible
      - reason
      - data
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        timestamp:
          minLength: 1
          type: string
        event:
          $ref: '#/components/schemas/Event2'
        response:
          $ref: '#/components/schemas/Response'
        source:
          $ref: '#/components/schemas/Source3'
        destination:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          description: ''
        enterer:
          $ref: '#/components/schemas/Enterer'
        author:
          $ref: '#/components/schemas/Author'
        responsible:
          $ref: '#/components/schemas/Responsible'
        reason:
          $ref: '#/components/schemas/Reason1'
        data:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Datum'
          description: ''
    NamingSystem:
      title: NamingSystem
      required:
      - resourceType
      - id
      - text
      - name
      - status
      - kind
      - date
      - publisher
      - contact
      - responsible
      - description
      - uniqueId
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        responsible:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        uniqueId:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UniqueId'
          description: ''
    NutritionOrder:
      title: NutritionOrder
      required:
      - resourceType
      - id
      - _id
      - text
      - identifier
      - status
      - patient
      - encounter
      - dateTime
      - orderer
      - allergyIntolerance
      - foodPreferenceModifier
      - excludeFoodModifier
      - oralDiet
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        _id:
          $ref: '#/components/schemas/Id'
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        patient:
          $ref: '#/components/schemas/Patient8'
        encounter:
          $ref: '#/components/schemas/Encounter6'
        dateTime:
          minLength: 1
          type: string
        orderer:
          $ref: '#/components/schemas/Orderer'
        allergyIntolerance:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AllergyIntolerance1'
          description: ''
        foodPreferenceModifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FoodPreferenceModifier'
          description: ''
        excludeFoodModifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ExcludeFoodModifier'
          description: ''
        oralDiet:
          $ref: '#/components/schemas/OralDiet'
    Observation:
      title: Observation
      required:
      - resourceType
      - id
      - text
      - status
      - category
      - code
      - subject
      - encounter
      - effectiveDateTime
      - valueQuantity
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        status:
          minLength: 1
          type: string
        category:
          $ref: '#/components/schemas/Category10'
        code:
          $ref: '#/components/schemas/Code15'
        subject:
          $ref: '#/components/schemas/Subject4'
        encounter:
          $ref: '#/components/schemas/Encounter1'
        effectiveDateTime:
          minLength: 1
          type: string
        valueQuantity:
          $ref: '#/components/schemas/ValueQuantity1'
    OperationDefinition:
      title: OperationDefinition
      required:
      - resourceType
      - id
      - text
      - url
      - version
      - name
      - status
      - kind
      - date
      - publisher
      - contact
      - description
      - code
      - comment
      - base
      - system
      - type
      - instance
      - parameter
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        description:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        comment:
          minLength: 1
          type: string
        base:
          $ref: '#/components/schemas/Base'
        system:
          type: boolean
        type:
          type: array
          items:
            type: object
          description: ''
        instance:
          type: boolean
        parameter:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          description: ''
    OperationOutcome:
      title: OperationOutcome
      required:
      - resourceType
      - id
      - text
      - issue
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        issue:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Issue'
          description: ''
    Organization:
      title: Organization
      required:
      - resourceType
      - id
      - text
      - extension
      - name
      - telecom
      - address
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension8'
          description: ''
        name:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom'
          description: ''
        address:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address3'
          description: ''
    Parameters:
      title: Parameters
      required:
      - resourceType
      - id
      - parameter
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        parameter:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Parameter1'
          description: ''
    Patient:
      title: Patient
      required:
      - resourceType
      - id
      - text
      - identifier
      - active
      - name
      - gender
      - photo
      - contact
      - managingOrganization
      - link
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier32'
          description: ''
        active:
          type: boolean
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name3'
          description: ''
        gender:
          minLength: 1
          type: string
        photo:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Photo'
          description: ''
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact7'
          description: ''
        managingOrganization:
          $ref: '#/components/schemas/ManagingOrganization2'
        link:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Link1'
          description: ''
    PaymentNotice:
      title: PaymentNotice
      required:
      - resourceType
      - id
      - text
      - identifier
      - created
      - organizationReference
      - requestReference
      - paymentStatus
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
    PaymentReconciliation:
      title: PaymentReconciliation
      required:
      - resourceType
      - id
      - text
      - identifier
      - requestReference
      - outcome
      - disposition
      - created
      - organizationReference
      - detail
      - total
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        outcome:
          minLength: 1
          type: string
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        detail:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Detail3'
          description: ''
        total:
          $ref: '#/components/schemas/Total1'
    Person:
      title: Person
      required:
      - resourceType
      - id
      - text
      - identifier
      - name
      - telecom
      - gender
      - _gender
      - birthDate
      - address
      - active
      - link
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier35'
          description: ''
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name4'
          description: ''
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
        gender:
          minLength: 1
          type: string
        _gender:
          $ref: '#/components/schemas/Gender'
        birthDate:
          minLength: 1
          type: string
        address:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address4'
          description: ''
        active:
          type: boolean
        link:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Link2'
          description: ''
    Practitioner:
      title: Practitioner
      required:
      - resourceType
      - id
      - text
      - identifier
      - active
      - name
      - practitionerRole
      - qualification
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        active:
          type: boolean
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name5'
          description: ''
        practitionerRole:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PractitionerRole2'
          description: ''
        qualification:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Qualification'
          description: ''
    PractitionerRole:
      title: PractitionerRole
      required:
      - resourceType
      - id
      - text
      - identifier
      - active
      - organization
      - role
      - location
      - healthcareService
      - telecom
      - period
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        active:
          type: boolean
        organization:
          $ref: '#/components/schemas/Organization1'
        role:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role6'
          description: ''
        location:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Location3'
          description: ''
        healthcareService:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HealthcareService1'
          description: ''
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
        period:
          $ref: '#/components/schemas/Period2'
    Procedure:
      title: Procedure
      required:
      - resourceType
      - id
      - text
      - subject
      - status
      - code
      - reasonCodeableConcept
      - performer
      - performedDateTime
      - followUp
      - notes
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        subject:
          $ref: '#/components/schemas/Subject4'
        status:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code1'
        reasonCodeableConcept:
          $ref: '#/components/schemas/ReasonCodeableConcept'
        performer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Performer4'
          description: ''
        performedDateTime:
          minLength: 1
          type: string
        followUp:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FollowUp'
          description: ''
        notes:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Note2'
          description: ''
    ProcedureRequest:
      title: ProcedureRequest
      required:
      - resourceType
      - id
      - text
      - subject
      - code
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        subject:
          $ref: '#/components/schemas/Subject5'
        code:
          $ref: '#/components/schemas/Code5'
    ProcessRequest:
      title: ProcessRequest
      required:
      - resourceType
      - id
      - text
      - action
      - identifier
      - created
      - organizationReference
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        action:
          minLength: 1
          type: string
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
    ProcessResponse:
      title: ProcessResponse
      required:
      - resourceType
      - fhir_comments
      - id
      - text
      - identifier
      - requestReference
      - outcome
      - disposition
      - created
      - organizationReference
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        outcome:
          $ref: '#/components/schemas/Outcome1'
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
    Provenance:
      title: Provenance
      required:
      - resourceType
      - id
      - text
      - target
      - period
      - recorded
      - reason
      - location
      - policy
      - _policy
      - agent
      - entity
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        target:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Target4'
          description: ''
        period:
          $ref: '#/components/schemas/Period3'
        recorded:
          minLength: 1
          type: string
        reason:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Reason2'
          description: ''
        location:
          $ref: '#/components/schemas/Location1'
        policy:
          type: array
          items:
            type: object
          description: ''
        _policy:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Policy'
          description: ''
        agent:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Agent1'
          description: ''
        entity:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entity1'
          description: ''
    Questionnaire:
      title: Questionnaire
      required:
      - resourceType
      - id
      - text
      - status
      - date
      - title
      - subjectType
      - item
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
        subjectType:
          type: array
          items:
            type: object
          description: ''
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item7'
          description: ''
    QuestionnaireResponse:
      title: QuestionnaireResponse
      required:
      - resourceType
      - fhir_comments
      - id
      - text
      - contained
      - status
      - subject
      - author
      - authored
      - item
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained7'
          description: ''
        status:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject4'
        author:
          $ref: '#/components/schemas/Author'
        authored:
          minLength: 1
          type: string
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item11'
          description: ''
    ReferralRequest:
      title: ReferralRequest
      required:
      - resourceType
      - id
      - text
      - identifier
      - status
      - category
      - type
      - priority
      - patient
      - authored
      - requester
      - specialty
      - recipient
      - reason
      - description
      - serviceRequested
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        category:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type29'
        priority:
          $ref: '#/components/schemas/Priority2'
        patient:
          $ref: '#/components/schemas/Patient8'
        authored:
          minLength: 1
          type: string
        requester:
          $ref: '#/components/schemas/Requester1'
        specialty:
          $ref: '#/components/schemas/Specialty4'
        recipient:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Recipient1'
          description: ''
        reason:
          $ref: '#/components/schemas/Reason3'
        description:
          minLength: 1
          type: string
        serviceRequested:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceRequested'
          description: ''
    RelatedPerson:
      title: RelatedPerson
      required:
      - resourceType
      - id
      - text
      - patient
      - relationship
      - name
      - telecom
      - gender
      - address
      - photo
      - period
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        patient:
          $ref: '#/components/schemas/Patient1'
        relationship:
          $ref: '#/components/schemas/Relationship2'
        name:
          $ref: '#/components/schemas/Name6'
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
        gender:
          minLength: 1
          type: string
        address:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address4'
          description: ''
        photo:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Photo1'
          description: ''
        period:
          $ref: '#/components/schemas/Period3'
    RiskAssessment:
      title: RiskAssessment
      required:
      - resourceType
      - id
      - text
      - date
      - method
      - basis
      - prediction
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        date:
          minLength: 1
          type: string
        method:
          $ref: '#/components/schemas/Method'
        basis:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Basis'
          description: ''
        prediction:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Prediction'
          description: ''
    Schedule:
      title: Schedule
      required:
      - resourceType
      - id
      - text
      - identifier
      - serviceCategory
      - serviceType
      - specialty
      - actor
      - planningHorizon
      - comment
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier3'
          description: ''
        serviceCategory:
          $ref: '#/components/schemas/ServiceCategory1'
        serviceType:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceType'
          description: ''
        specialty:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Specialty5'
          description: ''
        actor:
          $ref: '#/components/schemas/Actor'
        planningHorizon:
          $ref: '#/components/schemas/PlanningHorizon'
        comment:
          minLength: 1
          type: string
    SearchParameter:
      title: SearchParameter
      required:
      - resourceType
      - id
      - text
      - url
      - name
      - status
      - experimental
      - date
      - publisher
      - contact
      - requirements
      - _requirements
      - code
      - base
      - type
      - description
      - xpath
      - xpathUsage
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        date:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact8'
          description: ''
        requirements:
          minLength: 1
          type: string
        _requirements:
          $ref: '#/components/schemas/Requirements'
        code:
          minLength: 1
          type: string
        base:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        xpath:
          minLength: 1
          type: string
        xpathUsage:
          minLength: 1
          type: string
    Sequence:
      title: Sequence
      required:
      - resourceType
      - id
      - text
      - type
      - patient
      - species
      - referenceSeq
      - variation
      - repository
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          minLength: 1
          type: string
        patient:
          $ref: '#/components/schemas/Patient1'
        species:
          $ref: '#/components/schemas/Species'
        referenceSeq:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ReferenceSeq'
          description: ''
        variation:
          $ref: '#/components/schemas/Variation'
        repository:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Repository'
          description: ''
    Slot:
      title: Slot
      required:
      - resourceType
      - id
      - text
      - serviceCategory
      - serviceType
      - specialty
      - appointmentType
      - schedule
      - status
      - start
      - end
      - comment
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        serviceCategory:
          $ref: '#/components/schemas/ServiceCategory1'
        serviceType:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceType'
          description: ''
        specialty:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Specialty5'
          description: ''
        appointmentType:
          $ref: '#/components/schemas/AppointmentType'
        schedule:
          $ref: '#/components/schemas/Schedule1'
        status:
          minLength: 1
          type: string
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
        comment:
          minLength: 1
          type: string
    Specimen:
      title: Specimen
      required:
      - resourceType
      - id
      - text
      - contained
      - identifier
      - accessionIdentifier
      - status
      - type
      - subject
      - receivedTime
      - collection
      - container
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained8'
          description: ''
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier43'
          description: ''
        accessionIdentifier:
          $ref: '#/components/schemas/AccessionIdentifier'
        status:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type30'
        subject:
          $ref: '#/components/schemas/Subject'
        receivedTime:
          minLength: 1
          type: string
        collection:
          $ref: '#/components/schemas/Collection'
        container:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Container1'
          description: ''
    StructureDefinition:
      title: StructureDefinition
      required:
      - resourceType
      - id
      - text
      - url
      - identifier
      - version
      - name
      - display
      - _display
      - status
      - experimental
      - publisher
      - contact
      - date
      - description
      - useContext
      - requirements
      - copyright
      - _copyright
      - code
      - fhirVersion
      - mapping
      - kind
      - abstract
      - baseType
      - baseDefinition
      - derivation
      - snapshot
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier43'
          description: ''
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
        _display:
          $ref: '#/components/schemas/Display'
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        date:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        useContext:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UseContext3'
          description: ''
        requirements:
          minLength: 1
          type: string
        copyright:
          minLength: 1
          type: string
        _copyright:
          $ref: '#/components/schemas/Copyright'
        code:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Code21'
          description: ''
        fhirVersion:
          minLength: 1
          type: string
        mapping:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Mapping'
          description: ''
        kind:
          minLength: 1
          type: string
        abstract:
          type: boolean
        baseType:
          minLength: 1
          type: string
        baseDefinition:
          minLength: 1
          type: string
        derivation:
          minLength: 1
          type: string
        snapshot:
          $ref: '#/components/schemas/Snapshot'
    StructureMap:
      title: StructureMap
      required:
      - resourceType
      - id
      - text
      - url
      - name
      - status
      - group
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        group:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group1'
          description: ''
    Subscription:
      title: Subscription
      required:
      - resourceType
      - id
      - text
      - criteria
      - contact
      - reason
      - status
      - channel
      - end
      - tag
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        criteria:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact2'
          description: ''
        reason:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        end:
          minLength: 1
          type: string
        tag:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: ''
    Substance:
      title: Substance
      required:
      - resourceType
      - id
      - text
      - identifier
      - category
      - code
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        category:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category11'
          description: ''
        code:
          $ref: '#/components/schemas/Code2'
    SupplyDelivery:
      title: SupplyDelivery
      required:
      - resourceType
      - fhir_comments
      - id
      - text
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
    SupplyRequest:
      title: SupplyRequest
      required:
      - resourceType
      - fhir_comments
      - id
      - text
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
    Task:
      title: Task
      required:
      - resourceType
      - id
      - text
      - type
      - status
      - subject
      - created
      - lastModified
      - creator
      - owner
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          $ref: '#/components/schemas/Type8'
        status:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject4'
        created:
          minLength: 1
          type: string
        lastModified:
          minLength: 1
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        owner:
          $ref: '#/components/schemas/Owner'
    TestScript:
      title: TestScript
      required:
      - resourceType
      - id
      - text
      - url
      - version
      - name
      - status
      - identifier
      - experimental
      - publisher
      - contact
      - date
      - description
      - useContext
      - requirements
      - copyright
      - metadata
      - fixture
      - profile
      - setup
      - test
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        identifier:
          $ref: '#/components/schemas/Identifier'
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact11'
          description: ''
        date:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        useContext:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UseContext4'
          description: ''
        requirements:
          minLength: 1
          type: string
        copyright:
          minLength: 1
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        fixture:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Fixture'
          description: ''
        profile:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Profile1'
          description: ''
        setup:
          $ref: '#/components/schemas/Setup'
        test:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Test'
          description: ''
    ValueSet:
      title: ValueSet
      required:
      - resourceType
      - id
      - meta
      - text
      - url
      - _url
      - identifier
      - version
      - _version
      - name
      - _name
      - status
      - experimental
      - publisher
      - contact
      - date
      - lockedDate
      - _lockedDate
      - description
      - copyright
      - compose
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        meta:
          $ref: '#/components/schemas/Meta3'
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        _url:
          $ref: '#/components/schemas/Url'
        identifier:
          $ref: '#/components/schemas/Identifier6'
        version:
          minLength: 1
          type: string
        _version:
          $ref: '#/components/schemas/Version'
        name:
          minLength: 1
          type: string
        _name:
          $ref: '#/components/schemas/Name1'
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        date:
          minLength: 1
          type: string
        lockedDate:
          minLength: 1
          type: string
        _lockedDate:
          $ref: '#/components/schemas/LockedDate'
        description:
          minLength: 1
          type: string
        copyright:
          minLength: 1
          type: string
        compose:
          $ref: '#/components/schemas/Compose1'
    VisionPrescription:
      title: VisionPrescription
      required:
      - resourceType
      - id
      - text
      - identifier
      - dateWritten
      - patient
      - prescriber
      - dispense
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        dateWritten:
          minLength: 1
          type: string
        patient:
          $ref: '#/components/schemas/Patient1'
        prescriber:
          $ref: '#/components/schemas/Prescriber'
        dispense:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Dispense'
          description: ''
    AccessionIdentifier:
      title: AccessionIdentifier
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Acronym:
      title: Acronym
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Action:
      title: Action
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Action1:
      title: Action1
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        operation:
          $ref: '#/components/schemas/Operation'
    Action2:
      title: Action2
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation1'
    Activity:
      title: Activity
      type: object
      properties:
        detail:
          $ref: '#/components/schemas/Detail'
    Actor:
      title: Actor
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Actor3:
      title: Actor3
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    AdditionalInstructions:
      title: AdditionalInstructions
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    AdditiveReference:
      title: AdditiveReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Address:
      title: Address
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Address2:
      title: Address2
      required:
      - use
      - line
      - city
      - postalCode
      - country
      type: object
      properties:
        use:
          minLength: 1
          type: string
        line:
          type: array
          items:
            type: object
          description: ''
        city:
          minLength: 1
          type: string
        postalCode:
          minLength: 1
          type: string
        country:
          minLength: 1
          type: string
    Address3:
      title: Address3
      required:
      - city
      - state
      - postalCode
      - country
      type: object
      properties:
        line:
          type: array
          items:
            type: object
          description: ''
        city:
          minLength: 1
          type: string
        state:
          minLength: 1
          type: string
        postalCode:
          minLength: 1
          type: string
        country:
          minLength: 1
          type: string
    Address4:
      title: Address4
      required:
      - use
      - city
      - state
      - postalCode
      type: object
      properties:
        use:
          minLength: 1
          type: string
        line:
          type: array
          items:
            type: object
          description: ''
        city:
          minLength: 1
          type: string
        state:
          minLength: 1
          type: string
        postalCode:
          minLength: 1
          type: string
    Adjudication:
      title: Adjudication
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category2'
        amount:
          $ref: '#/components/schemas/Amount'
    Agent:
      title: Agent
      required:
      - requestor
      type: object
      properties:
        role:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: ''
        userId:
          $ref: '#/components/schemas/UserId'
        requestor:
          type: boolean
        network:
          $ref: '#/components/schemas/Network'
    Agent1:
      title: Agent1
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        role:
          $ref: '#/components/schemas/Role7'
        actor:
          $ref: '#/components/schemas/Actor3'
        userId:
          $ref: '#/components/schemas/UserId1'
        relatedAgent:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RelatedAgent'
          description: ''
    AllergyIntolerance1:
      title: AllergyIntolerance1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Amount:
      title: Amount
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Amount2:
      title: Amount2
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Answer:
      title: Answer
      type: object
      properties:
        valueCoding:
          $ref: '#/components/schemas/ValueCoding'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item13'
          description: ''
    Answer1:
      title: Answer1
      type: object
      properties:
        valueCoding:
          $ref: '#/components/schemas/ValueCoding1'
    Appointment1:
      title: Appointment1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    AppointmentType:
      title: AppointmentType
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Assessor:
      title: Assessor
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Assigner:
      title: Assigner
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
    Attachment:
      title: Attachment
      required:
      - contentType
      - language
      - url
      - size
      - hash
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        language:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
        size:
          type: number
        hash:
          minLength: 1
          type: string
    Attester:
      title: Attester
      required:
      - time
      type: object
      properties:
        mode:
          type: array
          items:
            type: object
          description: ''
        time:
          minLength: 1
          type: string
        party:
          $ref: '#/components/schemas/Party'
    Authenticator:
      title: Authenticator
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Author:
      title: Author
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Author1:
      title: Author1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Authority:
      title: Authority
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    AuthorizingPrescription:
      title: AuthorizingPrescription
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    AuthorReference:
      title: AuthorReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    AvailableTime:
      title: AvailableTime
      required:
      - availableStartTime
      - availableEndTime
      type: object
      properties:
        daysOfWeek:
          type: array
          items:
            type: object
          description: ''
        availableStartTime:
          minLength: 1
          type: string
        availableEndTime:
          minLength: 1
          type: string
    Base:
      title: Base
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Base1:
      title: Base1
      required:
      - path
      - min
      - max
      type: object
      properties:
        path:
          minLength: 1
          type: string
        min:
          type: number
        max:
          minLength: 1
          type: string
    Basis:
      title: Basis
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    BeneficiaryReference:
      title: BeneficiaryReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Binary1:
      title: Binary1
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Binding:
      title: Binding
      required:
      - strength
      - valueSetReference
      type: object
      properties:
        strength:
          minLength: 1
          type: string
        valueSetReference:
          $ref: '#/components/schemas/ValueSetReference'
    BodySite1:
      title: BodySite1
      required:
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    BodySite2:
      title: BodySite2
      required:
      - system
      - _system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        _system:
          $ref: '#/components/schemas/System'
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Capability:
      title: Capability
      required:
      - required
      - description
      - destination
      type: object
      properties:
        required:
          type: boolean
        description:
          minLength: 1
          type: string
        destination:
          type: number
        link:
          type: array
          items:
            type: object
          description: ''
        conformance:
          $ref: '#/components/schemas/Conformance'
    Capacity:
      title: Capacity
      required:
      - value
      - unit
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
    CareManager:
      title: CareManager
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    CaseSensitive:
      title: CaseSensitive
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Category:
      title: Category
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Category1:
      title: Category1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Category2:
      title: Category2
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Category3:
      title: Category3
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
        text:
          minLength: 1
          type: string
    Category4:
      title: Category4
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding24'
          description: ''
    Category5:
      title: Category5
      required:
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding27'
          description: ''
        text:
          minLength: 1
          type: string
    Category6:
      title: Category6
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Category9:
      title: Category9
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Category10:
      title: Category10
      required:
      - fhir_comments
      - coding
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Category11:
      title: Category11
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Channel:
      title: Channel
      required:
      - type
      - endpoint
      - payload
      - header
      type: object
      properties:
        type:
          minLength: 1
          type: string
        endpoint:
          minLength: 1
          type: string
        payload:
          minLength: 1
          type: string
        header:
          minLength: 1
          type: string
    Characteristic:
      title: Characteristic
      required:
      - exclude
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code2'
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept3'
        exclude:
          type: boolean
    Characteristic1:
      title: Characteristic1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding57'
          description: ''
    ClaimReference:
      title: ClaimReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Class:
      title: Class
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Code:
      title: Code
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Code1:
      title: Code1
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Code2:
      title: Code2
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Code4:
      title: Code4
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Code5:
      title: Code5
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Code8:
      title: Code8
      required:
      - fhir_comments
      - coding
      - text
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Code14:
      title: Code14
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding72'
          description: ''
    Code15:
      title: Code15
      required:
      - fhir_comments
      - coding
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding87'
          description: ''
    Code21:
      title: Code21
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    CodeFilter:
      title: CodeFilter
      required:
      - path
      - valueSetString
      type: object
      properties:
        path:
          minLength: 1
          type: string
        valueSetString:
          minLength: 1
          type: string
    Coding:
      title: Coding
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Coding5:
      title: Coding5
      required:
      - code
      - display
      type: object
      properties:
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Coding8:
      title: Coding8
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Coding24:
      title: Coding24
      required:
      - system
      - code
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Coding27:
      title: Coding27
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Coding28:
      title: Coding28
      required:
      - system
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Coding57:
      title: Coding57
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
    Coding72:
      title: Coding72
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
        _display:
          $ref: '#/components/schemas/Display'
    Coding83:
      title: Coding83
      required:
      - system
      - version
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Coding87:
      title: Coding87
      required:
      - system
      - code
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
        _display:
          $ref: '#/components/schemas/Display'
    Coding115:
      title: Coding115
      required:
      - system
      - code
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    CollectedDateTime:
      title: CollectedDateTime
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Collection:
      title: Collection
      required:
      - collector
      - comment
      - collectedDateTime
      - _collectedDateTime
      - quantity
      - method
      type: object
      properties:
        collector:
          $ref: '#/components/schemas/Collector'
        comment:
          minLength: 1
          type: string
        collectedDateTime:
          minLength: 1
          type: string
        _collectedDateTime:
          $ref: '#/components/schemas/CollectedDateTime'
        quantity:
          $ref: '#/components/schemas/Quantity2'
        method:
          $ref: '#/components/schemas/Method1'
    Collector:
      title: Collector
      required:
      - reference
      - _reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        _reference:
          $ref: '#/components/schemas/Reference'
    Compose:
      title: Compose
      required:
      - include
      type: object
      properties:
        include:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Include'
          description: ''
    Compose1:
      title: Compose1
      required:
      - include
      type: object
      properties:
        include:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Include1'
          description: ''
    Concept:
      title: Concept
      required:
      - code
      - display
      - definition
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
        definition:
          minLength: 1
          type: string
        designation:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Designation'
          description: ''
    Concept1:
      title: Concept1
      required:
      - code
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Concept2:
      title: Concept2
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Concept6:
      title: Concept6
      required:
      - code
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
        _display:
          $ref: '#/components/schemas/Display'
    Condition1:
      title: Condition1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Condition2:
      title: Condition2
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code1'
        onsetQuantity:
          $ref: '#/components/schemas/OnsetQuantity'
        note:
          $ref: '#/components/schemas/Note2'
    Conformance:
      title: Conformance
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Contact:
      title: Contact
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom'
          description: ''
    Contact2:
      title: Contact2
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Contact7:
      title: Contact7
      type: object
      properties:
        relationship:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Relationship3'
          description: ''
        organization:
          $ref: '#/components/schemas/Organization4'
    Contact8:
      title: Contact8
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom11'
          description: ''
    Contact11:
      title: Contact11
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
    Contained:
      title: Contained
      required:
      - resourceType
      - id
      - description
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension1'
          description: ''
        subject:
          $ref: '#/components/schemas/Subject'
        description:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
    Contained1:
      title: Contained1
      required:
      - resourceType
      - id
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name'
          description: ''
        practitionerRole:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PractitionerRole4'
          description: ''
    Contained2:
      title: Contained2
      required:
      - resourceType
      - id
      - url
      - version
      - name
      - status
      - description
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        compose:
          $ref: '#/components/schemas/Compose'
    Contained3:
      title: Contained3
      required:
      - resourceType
      - id
      - manufacturer
      - model
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier14'
          description: ''
        type:
          $ref: '#/components/schemas/Type9'
        manufacturer:
          minLength: 1
          type: string
        model:
          minLength: 1
          type: string
    Contained4:
      title: Contained4
      required:
      - resourceType
      - id
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        _id:
          $ref: '#/components/schemas/Id'
        status:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code1'
        subject:
          $ref: '#/components/schemas/Subject4'
        performer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Performer'
          description: ''
        valueQuantity:
          $ref: '#/components/schemas/ValueQuantity'
        referenceRange:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ReferenceRange'
          description: ''
    Contained5:
      title: Contained5
      required:
      - resourceType
      - id
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name'
          description: ''
        practitionerRole:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PractitionerRole1'
          description: ''
    Contained6:
      title: Contained6
      required:
      - resourceType
      - id
      - description
      - mode
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
        physicalType:
          $ref: '#/components/schemas/PhysicalType'
    Contained7:
      title: Contained7
      required:
      - resourceType
      - id
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code5'
        subject:
          $ref: '#/components/schemas/Subject4'
        performer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Performer3'
          description: ''
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept'
    Contained8:
      title: Contained8
      required:
      - resourceType
      - id
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code'
    Container:
      title: Container
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Container1:
      title: Container1
      required:
      - description
      type: object
      properties:
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier44'
          description: ''
        description:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type31'
        capacity:
          $ref: '#/components/schemas/Capacity'
        specimenQuantity:
          $ref: '#/components/schemas/SpecimenQuantity'
        additiveReference:
          $ref: '#/components/schemas/AdditiveReference'
    Content:
      title: Content
      type: object
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'
        format:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Format'
          description: ''
    Content1:
      title: Content1
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
    Content2:
      title: Content2
      required:
      - id
      - contentType
      - data
      - creation
      - _creation
      type: object
      properties:
        id:
          minLength: 1
          type: string
        contentType:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
        creation:
          minLength: 1
          type: string
        _creation:
          $ref: '#/components/schemas/Creation'
    Context:
      title: Context
      required:
      - encounter
      - event
      - period
      - facilityType
      - practiceSetting
      - sourcePatientInfo
      - related
      type: object
      properties:
        encounter:
          $ref: '#/components/schemas/Encounter1'
        event:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Event1'
          description: ''
        period:
          $ref: '#/components/schemas/Period2'
        facilityType:
          $ref: '#/components/schemas/FacilityType'
        practiceSetting:
          $ref: '#/components/schemas/PracticeSetting'
        sourcePatientInfo:
          $ref: '#/components/schemas/SourcePatientInfo'
        related:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Related'
          description: ''
    Copyright:
      title: Copyright
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Coverage2:
      title: Coverage2
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Coverage3:
      title: Coverage3
      required:
      - coverageReference
      type: object
      properties:
        coverageReference:
          $ref: '#/components/schemas/CoverageReference'
    Coverage4:
      title: Coverage4
      required:
      - sequence
      - focal
      type: object
      properties:
        sequence:
          type: number
        focal:
          type: boolean
        coverageReference:
          $ref: '#/components/schemas/CoverageReference'
    CoverageArea:
      title: CoverageArea
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    CoverageReference:
      title: CoverageReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Created:
      title: Created
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Creation:
      title: Creation
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Creator:
      title: Creator
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Criticality:
      title: Criticality
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Custodian:
      title: Custodian
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Custodian1:
      title: Custodian1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    DataRequirement:
      title: DataRequirement
      required:
      - type
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        type:
          minLength: 1
          type: string
        codeFilter:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CodeFilter'
          description: ''
    DateCriterion:
      title: DateCriterion
      required:
      - value
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code5'
        value:
          minLength: 1
          type: string
    Datum:
      title: Datum
      required:
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    DaysSupply:
      title: DaysSupply
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Denominator:
      title: Denominator
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Dependency:
      title: Dependency
      required:
      - type
      - uri
      type: object
      properties:
        type:
          minLength: 1
          type: string
        uri:
          minLength: 1
          type: string
        _uri:
          $ref: '#/components/schemas/Uri'
    Designation:
      title: Designation
      required:
      - value
      type: object
      properties:
        use:
          $ref: '#/components/schemas/Use'
        value:
          minLength: 1
          type: string
    Destination:
      title: Destination
      required:
      - name
      - endpoint
      type: object
      properties:
        name:
          minLength: 1
          type: string
        target:
          $ref: '#/components/schemas/Target2'
        endpoint:
          minLength: 1
          type: string
    Detail:
      title: Detail
      required:
      - category
      - code
      - prohibited
      - scheduledTiming
      - performer
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category1'
        code:
          $ref: '#/components/schemas/Code2'
        prohibited:
          type: boolean
        scheduledTiming:
          $ref: '#/components/schemas/ScheduledTiming'
        performer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Performer'
          description: ''
    Detail1:
      title: Detail1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Detail3:
      title: Detail3
      required:
      - date
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        type:
          $ref: '#/components/schemas/Type3'
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        date:
          minLength: 1
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
    Details:
      title: Details
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Device1:
      title: Device1
      required:
      - fhir_comments
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Diagnosis:
      title: Diagnosis
      required:
      - sequence
      type: object
      properties:
        sequence:
          type: number
        diagnosis:
          $ref: '#/components/schemas/Diagnosis1'
    Diagnosis1:
      title: Diagnosis1
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Dispense:
      title: Dispense
      required:
      - eye
      - sphere
      - cylinder
      - axis
      - prism
      - base
      - add
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        eye:
          minLength: 1
          type: string
        sphere:
          type: number
        cylinder:
          type: number
        axis:
          type: number
        prism:
          type: number
        base:
          minLength: 1
          type: string
        add:
          type: number
    Dispenser:
      title: Dispenser
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Display:
      title: Display
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    DocStatus:
      title: DocStatus
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Document:
      title: Document
      required:
      - fhir_comments
      - contentType
      - url
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        contentType:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
    Dosage:
      title: Dosage
      required:
      - route
      - quantity
      type: object
      properties:
        route:
          $ref: '#/components/schemas/Route'
        quantity:
          $ref: '#/components/schemas/Quantity'
    Dosage1:
      title: Dosage1
      required:
      - text
      - asNeededBoolean
      type: object
      properties:
        text:
          minLength: 1
          type: string
        timing:
          $ref: '#/components/schemas/Timing'
        asNeededBoolean:
          type: boolean
        route:
          $ref: '#/components/schemas/Route'
        quantityQuantity:
          $ref: '#/components/schemas/QuantityQuantity'
        maxDosePerPeriod:
          $ref: '#/components/schemas/MaxDosePerPeriod'
    DosageInstruction:
      title: DosageInstruction
      type: object
      properties:
        additionalInstructions:
          $ref: '#/components/schemas/AdditionalInstructions'
        timing:
          $ref: '#/components/schemas/Timing'
        siteCodeableConcept:
          $ref: '#/components/schemas/SiteCodeableConcept'
        route:
          $ref: '#/components/schemas/Route'
        doseQuantity:
          $ref: '#/components/schemas/DoseQuantity1'
    DoseQuantity:
      title: DoseQuantity
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    DoseQuantity1:
      title: DoseQuantity1
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    DoseStatus:
      title: DoseStatus
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    DoseStatusReason:
      title: DoseStatusReason
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    During:
      title: During
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    EffectiveTimePeriod:
      title: EffectiveTimePeriod
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    Element:
      title: Element
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        target:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Target'
          description: ''
    Element1:
      title: Element1
      required:
      - path
      - definition
      - maxLength
      type: object
      properties:
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension3'
          description: ''
        path:
          minLength: 1
          type: string
        definition:
          minLength: 1
          type: string
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type6'
          description: ''
        maxLength:
          type: number
        binding:
          $ref: '#/components/schemas/Binding'
    Element2:
      title: Element2
      required:
      - path
      - name
      - short
      - definition
      - comments
      - min
      - max
      - isModifier
      type: object
      properties:
        path:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        short:
          minLength: 1
          type: string
        definition:
          minLength: 1
          type: string
        comments:
          minLength: 1
          type: string
        min:
          type: number
        max:
          minLength: 1
          type: string
        base:
          $ref: '#/components/schemas/Base1'
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type6'
          description: ''
        isModifier:
          type: boolean
    Eligibility:
      title: Eligibility
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding57'
          description: ''
    Encounter1:
      title: Encounter1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Encounter6:
      title: Encounter6
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Enterer:
      title: Enterer
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Entity:
      title: Entity
      required:
      - name
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier2'
        type:
          $ref: '#/components/schemas/Type2'
        role:
          $ref: '#/components/schemas/Role1'
        lifecycle:
          $ref: '#/components/schemas/Lifecycle'
        name:
          minLength: 1
          type: string
    Entity1:
      title: Entity1
      required:
      - role
      - reference
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        role:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type28'
        reference:
          minLength: 1
          type: string
        _reference:
          $ref: '#/components/schemas/Reference'
        display:
          minLength: 1
          type: string
    Entry:
      title: Entry
      required:
      - fullUrl
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        fullUrl:
          minLength: 1
          type: string
        resource:
          $ref: '#/components/schemas/Resource'
        search:
          $ref: '#/components/schemas/Search'
    Entry1:
      title: Entry1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Entry2:
      title: Entry2
      required:
      - deleted
      type: object
      properties:
        flag:
          $ref: '#/components/schemas/Flag1'
        deleted:
          type: boolean
        item:
          $ref: '#/components/schemas/Item6'
    Event:
      title: Event
      type: object
      properties:
        code:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Code4'
          description: ''
        period:
          $ref: '#/components/schemas/Period2'
        detail:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Detail1'
          description: ''
    Event1:
      title: Event1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Event2:
      title: Event2
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ExampleFor:
      title: ExampleFor
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ExcludeFoodModifier:
      title: ExcludeFoodModifier
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding83'
          description: ''
    Explanation:
      title: Explanation
      required:
      - reason
      type: object
      properties:
        reason:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Reason'
          description: ''
    ExposureRoute:
      title: ExposureRoute
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Extension:
      title: Extension
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueReference:
          $ref: '#/components/schemas/ValueReference'
    Extension1:
      title: Extension1
      required:
      - url
      type: object
      properties:
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension2'
          description: ''
        url:
          minLength: 1
          type: string
    Extension2:
      title: Extension2
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept'
    Extension3:
      title: Extension3
      required:
      - url
      - valueInteger
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueInteger:
          type: number
    Extension4:
      title: Extension4
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueReference:
          $ref: '#/components/schemas/ValueReference1'
    Extension7:
      title: Extension7
      required:
      - url
      - valueString
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueString:
          minLength: 1
          type: string
    Extension8:
      title: Extension8
      required:
      - url
      - valueString
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        url:
          minLength: 1
          type: string
        valueString:
          minLength: 1
          type: string
    FacilityType:
      title: FacilityType
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Finding:
      title: Finding
      type: object
      properties:
        item:
          $ref: '#/components/schemas/Item3'
    Fixture:
      title: Fixture
      required:
      - id
      - autocreate
      - autodelete
      type: object
      properties:
        id:
          minLength: 1
          type: string
        autocreate:
          type: boolean
        autodelete:
          type: boolean
        resource:
          $ref: '#/components/schemas/Resource2'
    Flag1:
      title: Flag1
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    FollowUp:
      title: FollowUp
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    FoodPreferenceModifier:
      title: FoodPreferenceModifier
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    ForecastStatus:
      title: ForecastStatus
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Format:
      title: Format
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Frames:
      title: Frames
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Gender:
      title: Gender
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Global:
      title: Global
      required:
      - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
        _type:
          $ref: '#/components/schemas/Type'
        profile:
          $ref: '#/components/schemas/Profile'
    Goal2:
      title: Goal2
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Group1:
      title: Group1
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        input:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Input'
          description: ''
        rule:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Rule'
          description: ''
    HealthcareService1:
      title: HealthcareService1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    High:
      title: High
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Id:
      title: Id
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Identifier:
      title: Identifier
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier1:
      title: Identifier1
      required:
      - value
      type: object
      properties:
        value:
          minLength: 1
          type: string
    Identifier2:
      title: Identifier2
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type4'
        value:
          minLength: 1
          type: string
    Identifier3:
      title: Identifier3
      required:
      - use
      - system
      - value
      type: object
      properties:
        use:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier6:
      title: Identifier6
      required:
      - fhir_comments
      - system
      - value
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier7:
      title: Identifier7
      required:
      - system
      - value
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        type:
          $ref: '#/components/schemas/Type8'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier10:
      title: Identifier10
      required:
      - use
      - system
      - value
      type: object
      properties:
        use:
          type: number
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier14:
      title: Identifier14
      required:
      - system
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type8'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier15:
      title: Identifier15
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type8'
        value:
          minLength: 1
          type: string
    Identifier28:
      title: Identifier28
      required:
      - use
      - value
      type: object
      properties:
        use:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier32:
      title: Identifier32
      required:
      - use
      - system
      - value
      type: object
      properties:
        use:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type24'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier35:
      title: Identifier35
      required:
      - use
      - system
      - value
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        use:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type24'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        period:
          $ref: '#/components/schemas/Period3'
        assigner:
          $ref: '#/components/schemas/Assigner'
    Identifier43:
      title: Identifier43
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        _system:
          $ref: '#/components/schemas/System'
        value:
          minLength: 1
          type: string
    Identifier44:
      title: Identifier44
      required:
      - value
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        value:
          minLength: 1
          type: string
        _value:
          $ref: '#/components/schemas/Value'
    Image:
      title: Image
      required:
      - contentType
      - data
      - title
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
    Implicated:
      title: Implicated
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Include:
      title: Include
      required:
      - system
      type: object
      properties:
        system:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept1'
          description: ''
    Include1:
      title: Include1
      required:
      - system
      - version
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept6'
          description: ''
    Inforce:
      title: Inforce
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    InformationSource:
      title: InformationSource
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Input:
      title: Input
      required:
      - name
      - mode
      type: object
      properties:
        name:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
    Instance:
      title: Instance
      required:
      - uid
      - number
      - sopClass
      type: object
      properties:
        uid:
          minLength: 1
          type: string
        number:
          type: number
        sopClass:
          minLength: 1
          type: string
        content:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Content1'
          description: ''
    Instruction:
      title: Instruction
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Investigation:
      title: Investigation
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code2'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item2'
          description: ''
    Issue:
      title: Issue
      required:
      - severity
      - code
      - diagnostics
      type: object
      properties:
        severity:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        details:
          $ref: '#/components/schemas/Details'
        diagnostics:
          minLength: 1
          type: string
        location:
          type: array
          items:
            type: object
          description: ''
    Issued:
      title: Issued
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Issuer:
      title: Issuer
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
    IssuerReference:
      title: IssuerReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Item:
      title: Item
      required:
      - sequence
      - servicedDate
      type: object
      properties:
        sequence:
          type: number
        type:
          $ref: '#/components/schemas/Type6'
        providerReference:
          $ref: '#/components/schemas/ProviderReference'
        service:
          $ref: '#/components/schemas/Service'
        servicedDate:
          minLength: 1
          type: string
        unitPrice:
          $ref: '#/components/schemas/UnitPrice'
        net:
          $ref: '#/components/schemas/Net'
    Item1:
      title: Item1
      required:
      - sequenceLinkId
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        sequenceLinkId:
          type: number
        adjudication:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Adjudication'
          description: ''
    Item2:
      title: Item2
      required:
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        display:
          minLength: 1
          type: string
    Item3:
      title: Item3
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Item4:
      title: Item4
      required:
      - sequence
      - servicedDate
      type: object
      properties:
        sequence:
          type: number
        type:
          $ref: '#/components/schemas/Type6'
        providerReference:
          $ref: '#/components/schemas/ProviderReference'
        service:
          $ref: '#/components/schemas/Service1'
        servicedDate:
          minLength: 1
          type: string
        unitPrice:
          $ref: '#/components/schemas/UnitPrice'
        net:
          $ref: '#/components/schemas/Net'
        adjudication:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Adjudication'
          description: ''
    Item5:
      title: Item5
      required:
      - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
        resource:
          $ref: '#/components/schemas/Resource2'
    Item6:
      title: Item6
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Item7:
      title: Item7
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item8'
          description: ''
    Item8:
      title: Item8
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        options:
          $ref: '#/components/schemas/Options'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item9'
          description: ''
    Item9:
      title: Item9
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item10'
          description: ''
    Item10:
      title: Item10
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        options:
          $ref: '#/components/schemas/Options'
    Item11:
      title: Item11
      type: object
      properties:
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item12'
          description: ''
    Item12:
      title: Item12
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        answer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Answer'
          description: ''
    Item13:
      title: Item13
      type: object
      properties:
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item14'
          description: ''
    Item14:
      title: Item14
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        answer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Answer1'
          description: ''
    LanguageCode:
      title: LanguageCode
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    LastOccurence:
      title: LastOccurence
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Lifecycle:
      title: Lifecycle
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Link:
      title: Link
      required:
      - relation
      - url
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        relation:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
    Link1:
      title: Link1
      required:
      - type
      type: object
      properties:
        other:
          $ref: '#/components/schemas/Other'
        type:
          minLength: 1
          type: string
    Link2:
      title: Link2
      type: object
      properties:
        target:
          $ref: '#/components/schemas/Target3'
    Location1:
      title: Location1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Location3:
      title: Location3
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    LockedDate:
      title: LockedDate
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Low:
      title: Low
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ManagingOrganization:
      title: ManagingOrganization
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ManagingOrganization2:
      title: ManagingOrganization2
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Manifestation:
      title: Manifestation
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Manufacturer:
      title: Manufacturer
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Mapping:
      title: Mapping
      required:
      - identity
      - uri
      - name
      - comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        identity:
          minLength: 1
          type: string
        uri:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        comments:
          minLength: 1
          type: string
    MasterIdentifier:
      title: MasterIdentifier
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    MaxDosePerPeriod:
      title: MaxDosePerPeriod
      required:
      - numerator
      - denominator
      type: object
      properties:
        numerator:
          $ref: '#/components/schemas/Numerator'
        denominator:
          $ref: '#/components/schemas/Denominator'
    MedicationReference:
      title: MedicationReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    MedicationReference2:
      title: MedicationReference2
      required:
      - reference
      - _reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        _reference:
          $ref: '#/components/schemas/Reference'
        display:
          minLength: 1
          type: string
    MedicationReference3:
      title: MedicationReference3
      required:
      - reference
      - _reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        _reference:
          $ref: '#/components/schemas/Reference'
    Member:
      title: Member
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Meta:
      title: Meta
      required:
      - fhir_comments
      - lastUpdated
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        lastUpdated:
          minLength: 1
          type: string
    Meta1:
      title: Meta1
      required:
      - profile
      type: object
      properties:
        profile:
          type: array
          items:
            type: object
          description: ''
    Meta2:
      title: Meta2
      required:
      - versionId
      type: object
      properties:
        versionId:
          minLength: 1
          type: string
    Meta3:
      title: Meta3
      required:
      - profile
      - _profile
      type: object
      properties:
        profile:
          type: array
          items:
            type: object
          description: ''
        _profile:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Profile2'
          description: ''
    Metadata:
      title: Metadata
      required:
      - capability
      type: object
      properties:
        capability:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Capability'
          description: ''
    Method:
      title: Method
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding27'
          description: ''
    Method1:
      title: Method1
      required:
      - fhir_comments
      - coding
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Mitigation:
      title: Mitigation
      required:
      - date
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        date:
          minLength: 1
          type: string
        author:
          $ref: '#/components/schemas/Author1'
    Modality:
      title: Modality
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Mode:
      title: Mode
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Model:
      title: Model
      required:
      - identifier
      type: object
      properties:
        identifier:
          minLength: 1
          type: string
    Modifier:
      title: Modifier
      required:
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Modifier1:
      title: Modifier1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    ModifierExtension:
      title: ModifierExtension
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept'
    Module:
      title: Module
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ModuleMetadata:
      title: ModuleMetadata
      required:
      - identifier
      - version
      - title
      - type
      - status
      - description
      - publicationDate
      - topic
      type: object
      properties:
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier28'
          description: ''
        version:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        publicationDate:
          minLength: 1
          type: string
        topic:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Topic'
          description: ''
    Name:
      title: Name
      type: object
      properties:
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Name1:
      title: Name1
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Name3:
      title: Name3
      required:
      - use
      type: object
      properties:
        use:
          minLength: 1
          type: string
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Name4:
      title: Name4
      required:
      - use
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        use:
          minLength: 1
          type: string
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Name5:
      title: Name5
      type: object
      properties:
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
        prefix:
          type: array
          items:
            type: object
          description: ''
    Name6:
      title: Name6
      required:
      - use
      - family
      - given
      type: object
      properties:
        use:
          minLength: 1
          type: string
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Net:
      title: Net
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Network:
      title: Network
      required:
      - address
      - type
      type: object
      properties:
        address:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
    NotAvailable:
      title: NotAvailable
      required:
      - description
      type: object
      properties:
        description:
          minLength: 1
          type: string
        during:
          $ref: '#/components/schemas/During'
    Note:
      title: Note
      required:
      - text
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        text:
          minLength: 1
          type: string
    Note1:
      title: Note1
      required:
      - time
      - text
      type: object
      properties:
        authorReference:
          $ref: '#/components/schemas/AuthorReference'
        time:
          minLength: 1
          type: string
        text:
          minLength: 1
          type: string
    Note2:
      title: Note2
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Numerator:
      title: Numerator
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Nutrient:
      title: Nutrient
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        modifier:
          $ref: '#/components/schemas/Modifier1'
        amount:
          $ref: '#/components/schemas/Amount2'
    Onset:
      title: Onset
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    OnsetQuantity:
      title: OnsetQuantity
      required:
      - value
      - unit
      - system
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
    Operation:
      title: Operation
      required:
      - type
      - label
      - description
      - accept
      - responseId
      - sourceId
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type6'
        label:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        accept:
          minLength: 1
          type: string
        responseId:
          minLength: 1
          type: string
        sourceId:
          minLength: 1
          type: string
    Operation1:
      title: Operation1
      required:
      - type
      - encodeRequestUrl
      - responseId
      - targetId
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type6'
        encodeRequestUrl:
          type: boolean
        responseId:
          minLength: 1
          type: string
        targetId:
          minLength: 1
          type: string
    OperationalStatus:
      title: OperationalStatus
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Operator:
      title: Operator
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Options:
      title: Options
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    OralDiet:
      title: OralDiet
      required:
      - type
      - nutrient
      - instruction
      - _instruction
      type: object
      properties:
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type23'
          description: ''
        nutrient:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Nutrient'
          description: ''
        instruction:
          minLength: 1
          type: string
        _instruction:
          $ref: '#/components/schemas/Instruction'
    OrderedBy:
      title: OrderedBy
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Orderer:
      title: Orderer
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Organization1:
      title: Organization1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Organization4:
      title: Organization4
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Organization7:
      title: Organization7
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
    OrganizationIdentifier:
      title: OrganizationIdentifier
      required:
      - fhir_comments
      - system
      - value
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    OrganizationReference:
      title: OrganizationReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Other:
      title: Other
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Outcome:
      title: Outcome
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Outcome1:
      title: Outcome1
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Outcome2:
      title: Outcome2
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Owner:
      title: Owner
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Package:
      title: Package
      required:
      - name
      - description
      type: object
      properties:
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        resource:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Resource1'
          description: ''
    Package1:
      title: Package1
      required:
      - fhir_comments
      - container
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        container:
          $ref: '#/components/schemas/Container'
    Page:
      title: Page
      required:
      - source
      - name
      - kind
      - page
      type: object
      properties:
        source:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        page:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Page1'
          description: ''
    Page1:
      title: Page1
      required:
      - source
      - name
      - kind
      - format
      type: object
      properties:
        source:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        type:
          type: array
          items:
            type: object
          description: ''
        package:
          type: array
          items:
            type: object
          description: ''
        format:
          minLength: 1
          type: string
    Parameter:
      title: Parameter
      required:
      - name
      - use
      - min
      - max
      - documentation
      - type
      type: object
      properties:
        name:
          minLength: 1
          type: string
        use:
          minLength: 1
          type: string
        min:
          type: number
        max:
          minLength: 1
          type: string
        documentation:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
    Parameter1:
      title: Parameter1
      required:
      - name
      - valueDate
      type: object
      properties:
        name:
          minLength: 1
          type: string
        valueDate:
          minLength: 1
          type: string
    Participant:
      title: Participant
      required:
      - required
      - status
      type: object
      properties:
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type1'
          description: ''
        actor:
          $ref: '#/components/schemas/Actor'
        required:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
    Participant1:
      title: Participant1
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        member:
          $ref: '#/components/schemas/Member'
    Party:
      title: Party
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Patient1:
      title: Patient1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Patient8:
      title: Patient8
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Patient21:
      title: Patient21
      required:
      - fhir_comments
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    PatientReference:
      title: PatientReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Payee:
      title: Payee
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type6'
    PayeeType:
      title: PayeeType
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Payload:
      title: Payload
      required:
      - contentString
      type: object
      properties:
        contentString:
          minLength: 1
          type: string
    PaymentAmount:
      title: PaymentAmount
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    PaymentDate:
      title: PaymentDate
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    PaymentRef:
      title: PaymentRef
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    PaymentStatus:
      title: PaymentStatus
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Performer:
      title: Performer
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Performer3:
      title: Performer3
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Performer4:
      title: Performer4
      type: object
      properties:
        actor:
          $ref: '#/components/schemas/Actor'
    Period:
      title: Period
      required:
      - end
      type: object
      properties:
        end:
          minLength: 1
          type: string
    Period2:
      title: Period2
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    Period3:
      title: Period3
      required:
      - start
      type: object
      properties:
        start:
          minLength: 1
          type: string
    Photo:
      title: Photo
      required:
      - contentType
      - data
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
    Photo1:
      title: Photo1
      required:
      - contentType
      - url
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
    PhysicalType:
      title: PhysicalType
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    PhysicalType1:
      title: PhysicalType1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Plan:
      title: Plan
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
        _display:
          $ref: '#/components/schemas/Display'
    PlanholderReference:
      title: PlanholderReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    PlanningHorizon:
      title: PlanningHorizon
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    Policy:
      title: Policy
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Position:
      title: Position
      required:
      - longitude
      - latitude
      - altitude
      type: object
      properties:
        longitude:
          type: number
        latitude:
          type: number
        altitude:
          type: number
    PracticeSetting:
      title: PracticeSetting
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Practitioner2:
      title: Practitioner2
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    PractitionerRole1:
      title: PractitionerRole1
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/Organization7'
        role:
          $ref: '#/components/schemas/Role'
        specialty:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Specialty1'
          description: ''
    PractitionerRole2:
      title: PractitionerRole2
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/Organization1'
        role:
          $ref: '#/components/schemas/Role5'
        period:
          $ref: '#/components/schemas/Period2'
        location:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Location3'
          description: ''
        healthcareService:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HealthcareService1'
          description: ''
    PractitionerRole4:
      title: PractitionerRole4
      type: object
      properties:
        specialty:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Specialty1'
          description: ''
    Prediction:
      title: Prediction
      required:
      - probabilityDecimal
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome2'
        probabilityDecimal:
          type: number
        whenRange:
          $ref: '#/components/schemas/WhenRange'
    Prescriber:
      title: Prescriber
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Prescription:
      title: Prescription
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    PresentedForm:
      title: PresentedForm
      required:
      - contentType
      - language
      - data
      - title
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        contentType:
          minLength: 1
          type: string
        language:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
    Priority:
      title: Priority
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Priority2:
      title: Priority2
      required:
      - fhir_comments
      - coding
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Problem:
      title: Problem
      required:
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        display:
          minLength: 1
          type: string
    Product:
      title: Product
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Profile:
      title: Profile
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Profile1:
      title: Profile1
      required:
      - id
      - reference
      type: object
      properties:
        id:
          minLength: 1
          type: string
        reference:
          minLength: 1
          type: string
    Profile2:
      title: Profile2
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Protocol:
      title: Protocol
      required:
      - doseSequence
      - description
      - authority
      - series
      type: object
      properties:
        doseSequence:
          type: number
        description:
          minLength: 1
          type: string
        authority:
          $ref: '#/components/schemas/Authority'
        series:
          minLength: 1
          type: string
    ProviderReference:
      title: ProviderReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Purpose:
      title: Purpose
      required:
      - code
      - display
      type: object
      properties:
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Qualification:
      title: Qualification
      type: object
      properties:
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        code:
          $ref: '#/components/schemas/Code2'
        period:
          $ref: '#/components/schemas/Period3'
        issuer:
          $ref: '#/components/schemas/Issuer'
    Quantity:
      title: Quantity
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Quantity1:
      title: Quantity1
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Quantity2:
      title: Quantity2
      required:
      - fhir_comments
      - value
      - unit
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        value:
          type: number
        unit:
          minLength: 1
          type: string
    QuantityQuantity:
      title: QuantityQuantity
      required:
      - value
      type: object
      properties:
        value:
          type: number
    Reaction:
      title: Reaction
      required:
      - certainty
      - description
      - onset
      - severity
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        substance:
          $ref: '#/components/schemas/Substance1'
        certainty:
          minLength: 1
          type: string
        manifestation:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Manifestation'
          description: ''
        description:
          minLength: 1
          type: string
        onset:
          minLength: 1
          type: string
        severity:
          minLength: 1
          type: string
        exposureRoute:
          $ref: '#/components/schemas/ExposureRoute'
    Reaction1:
      title: Reaction1
      required:
      - date
      - reported
      type: object
      properties:
        date:
          minLength: 1
          type: string
        detail:
          $ref: '#/components/schemas/Detail1'
        reported:
          type: boolean
    Reason:
      title: Reason
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Reason1:
      title: Reason1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Reason2:
      title: Reason2
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Reason3:
      title: Reason3
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    ReasonCodeableConcept:
      title: ReasonCodeableConcept
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    ReasonForUseCodeableConcept:
      title: ReasonForUseCodeableConcept
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Recipient:
      title: Recipient
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Recipient1:
      title: Recipient1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Recommendation:
      title: Recommendation
      required:
      - date
      - doseNumber
      type: object
      properties:
        date:
          minLength: 1
          type: string
        vaccineCode:
          $ref: '#/components/schemas/VaccineCode1'
        doseNumber:
          type: number
        forecastStatus:
          $ref: '#/components/schemas/ForecastStatus'
        dateCriterion:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DateCriterion'
          description: ''
        protocol:
          $ref: '#/components/schemas/Protocol'
        supportingImmunization:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SupportingImmunization'
          description: ''
        supportingPatientInformation:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SupportingPatientInformation'
          description: ''
    RecordedDate:
      title: RecordedDate
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Recorder:
      title: Recorder
      required:
      - fhir_comments
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Ref:
      title: Ref
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Reference:
      title: Reference
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    ReferenceRange:
      title: ReferenceRange
      type: object
      properties:
        low:
          $ref: '#/components/schemas/Low'
        high:
          $ref: '#/components/schemas/High'
    ReferenceSeq:
      title: ReferenceSeq
      required:
      - windowStart
      - windowEnd
      type: object
      properties:
        referenceSeqId:
          $ref: '#/components/schemas/ReferenceSeqId'
        windowStart:
          type: number
        windowEnd:
          type: number
    ReferenceSeqId:
      title: ReferenceSeqId
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    ReferralMethod:
      title: ReferralMethod
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    ReferralRequest2:
      title: ReferralRequest2
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
    Related:
      title: Related
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        ref:
          $ref: '#/components/schemas/Ref'
    RelatedAgent:
      title: RelatedAgent
      required:
      - target
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type8'
        target:
          minLength: 1
          type: string
    RelatesTo:
      title: RelatesTo
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
        target:
          $ref: '#/components/schemas/Target1'
    Relationship:
      title: Relationship
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Relationship2:
      title: Relationship2
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Relationship3:
      title: Relationship3
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Repeat:
      title: Repeat
      required:
      - frequency
      - period
      - periodUnit
      type: object
      properties:
        frequency:
          type: number
        period:
          type: number
        periodUnit:
          minLength: 1
          type: string
    Reporter:
      title: Reporter
      required:
      - fhir_comments
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Repository:
      title: Repository
      required:
      - url
      - name
      - variantId
      type: object
      properties:
        url:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        variantId:
          minLength: 1
          type: string
    Request:
      title: Request
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Requester:
      title: Requester
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Requester1:
      title: Requester1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    RequestOrganization:
      title: RequestOrganization
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    RequestReference:
      title: RequestReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Requirements:
      title: Requirements
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Resource:
      title: Resource
      required:
      - resourceType
      - id
      - text
      - medicationReference
      - patient
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        medicationReference:
          $ref: '#/components/schemas/MedicationReference'
        patient:
          $ref: '#/components/schemas/Patient1'
    Resource1:
      title: Resource1
      required:
      - example
      - name
      - description
      - acronym
      - sourceUri
      type: object
      properties:
        example:
          type: boolean
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        acronym:
          minLength: 1
          type: string
        _acronym:
          $ref: '#/components/schemas/Acronym'
        sourceUri:
          minLength: 1
          type: string
        exampleFor:
          $ref: '#/components/schemas/ExampleFor'
    Resource2:
      title: Resource2
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Response:
      title: Response
      required:
      - identifier
      - code
      type: object
      properties:
        identifier:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Responsible:
      title: Responsible
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Result:
      title: Result
      required:
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Role:
      title: Role
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Role1:
      title: Role1
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Role5:
      title: Role5
      required:
      - fhir_comments
      - coding
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Role6:
      title: Role6
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Role7:
      title: Role7
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Route:
      title: Route
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Rule:
      title: Rule
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        source:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Source4'
          description: ''
    Schedule1:
      title: Schedule1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ScheduledTiming:
      title: ScheduledTiming
      required:
      - repeat
      type: object
      properties:
        repeat:
          $ref: '#/components/schemas/Repeat'
    Score:
      title: Score
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Search:
      title: Search
      required:
      - fhir_comments
      - mode
      - _mode
      - score
      - _score
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        mode:
          minLength: 1
          type: string
        _mode:
          $ref: '#/components/schemas/Mode'
        score:
          type: number
        _score:
          $ref: '#/components/schemas/Score'
    Section:
      title: Section
      required:
      - title
      - mode
      type: object
      properties:
        title:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code5'
        text:
          $ref: '#/components/schemas/Text'
        mode:
          minLength: 1
          type: string
        orderedBy:
          $ref: '#/components/schemas/OrderedBy'
        entry:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entry1'
          description: ''
    SecurityLabel:
      title: SecurityLabel
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Sender:
      title: Sender
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Series:
      title: Series
      required:
      - uid
      - number
      - description
      - numberOfInstances
      type: object
      properties:
        uid:
          minLength: 1
          type: string
        number:
          type: number
        modality:
          $ref: '#/components/schemas/Modality'
        description:
          minLength: 1
          type: string
        numberOfInstances:
          type: number
        bodySite:
          $ref: '#/components/schemas/BodySite2'
        instance:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Instance'
          description: ''
    Service:
      title: Service
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Service1:
      title: Service1
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ServiceCategory:
      title: ServiceCategory
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    ServiceCategory1:
      title: ServiceCategory1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    ServiceRequested:
      title: ServiceRequested
      required:
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    ServiceType:
      title: ServiceType
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    ServiceType1:
      title: ServiceType1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Setup:
      title: Setup
      required:
      - action
      type: object
      properties:
        action:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Action1'
          description: ''
    Severity:
      title: Severity
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Site:
      title: Site
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    SiteCodeableConcept:
      title: SiteCodeableConcept
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Snapshot:
      title: Snapshot
      required:
      - element
      type: object
      properties:
        element:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Element2'
          description: ''
    Source:
      title: Source
      required:
      - site
      - identifier
      - type
      type: object
      properties:
        site:
          minLength: 1
          type: string
        identifier:
          $ref: '#/components/schemas/Identifier1'
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type3'
          description: ''
    Source1:
      title: Source1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Source3:
      title: Source3
      required:
      - name
      - software
      - version
      - contact
      - endpoint
      type: object
      properties:
        name:
          minLength: 1
          type: string
        software:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        contact:
          $ref: '#/components/schemas/Contact2'
        endpoint:
          minLength: 1
          type: string
    Source4:
      title: Source4
      required:
      - required
      - context
      - contextType
      - element
      - variable
      type: object
      properties:
        required:
          type: boolean
        context:
          minLength: 1
          type: string
        contextType:
          minLength: 1
          type: string
        element:
          minLength: 1
          type: string
        variable:
          minLength: 1
          type: string
    SourcePatientInfo:
      title: SourcePatientInfo
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    SourceReference:
      title: SourceReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Specialty:
      title: Specialty
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Specialty1:
      title: Specialty1
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Specialty4:
      title: Specialty4
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Specialty5:
      title: Specialty5
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    Species:
      title: Species
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
        text:
          minLength: 1
          type: string
    SpecimenQuantity:
      title: SpecimenQuantity
      required:
      - fhir_comments
      - value
      - unit
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        value:
          type: number
        unit:
          minLength: 1
          type: string
    Status:
      title: Status
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    StatusHistory:
      title: StatusHistory
      required:
      - status
      type: object
      properties:
        status:
          minLength: 1
          type: string
        period:
          $ref: '#/components/schemas/Period2'
    Subject:
      title: Subject
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Subject4:
      title: Subject4
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Subject5:
      title: Subject5
      required:
      - fhir_comments
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Substance1:
      title: Substance1
      required:
      - fhir_comments
      - coding
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Subtype:
      title: Subtype
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Subtype1:
      title: Subtype1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    SupportingImmunization:
      title: SupportingImmunization
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    SupportingPatientInformation:
      title: SupportingPatientInformation
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    System:
      title: System
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Tag:
      title: Tag
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Target:
      title: Target
      required:
      - system
      - code
      - equivalence
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        equivalence:
          minLength: 1
          type: string
    Target1:
      title: Target1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Target2:
      title: Target2
      required:
      - fhir_comments
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Target3:
      title: Target3
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Target4:
      title: Target4
      required:
      - reference
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    TargetDisease:
      title: TargetDisease
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    TargetReference:
      title: TargetReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Telecom:
      title: Telecom
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Telecom2:
      title: Telecom2
      required:
      - system
      - value
      - use
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        use:
          minLength: 1
          type: string
    Telecom11:
      title: Telecom11
      required:
      - system
      - value
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Test:
      title: Test
      required:
      - id
      - name
      - description
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        action:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Action2'
          description: ''
    Text:
      title: Text
      required:
      - status
      - div
      type: object
      properties:
        status:
          minLength: 1
          type: string
        div:
          minLength: 1
          type: string
    Text1:
      title: Text1
      required:
      - fhir_comments
      - status
      - div
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        status:
          minLength: 1
          type: string
        div:
          minLength: 1
          type: string
    Text85:
      title: Text85
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Timing:
      title: Timing
      required:
      - repeat
      type: object
      properties:
        repeat:
          $ref: '#/components/schemas/Repeat'
    Topic:
      title: Topic
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Total:
      title: Total
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Total1:
      title: Total1
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    TotalBenefit:
      title: TotalBenefit
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    TotalCost:
      title: TotalCost
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Type:
      title: Type
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Type1:
      title: Type1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Type2:
      title: Type2
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Type3:
      title: Type3
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Type4:
      title: Type4
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
        text:
          minLength: 1
          type: string
    Type6:
      title: Type6
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Type8:
      title: Type8
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Type9:
      title: Type9
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Type12:
      title: Type12
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Type19:
      title: Type19
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Type23:
      title: Type23
      required:
      - text
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Type24:
      title: Type24
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Type28:
      title: Type28
      required:
      - fhir_comments
      - system
      - code
      - display
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Type29:
      title: Type29
      required:
      - fhir_comments
      - coding
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Type30:
      title: Type30
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding24'
          description: ''
    Type31:
      title: Type31
      required:
      - text
      - _text
      type: object
      properties:
        text:
          minLength: 1
          type: string
        _text:
          $ref: '#/components/schemas/Text85'
    UniqueId:
      title: UniqueId
      required:
      - type
      - value
      - preferred
      type: object
      properties:
        type:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        preferred:
          type: boolean
    Unit:
      title: Unit
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    UnitPrice:
      title: UnitPrice
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Uri:
      title: Uri
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Url:
      title: Url
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    Use:
      title: Use
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    UseContext:
      title: UseContext
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    UseContext1:
      title: UseContext1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding28'
          description: ''
    UseContext2:
      title: UseContext2
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    UseContext3:
      title: UseContext3
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding115'
          description: ''
    UseContext4:
      title: UseContext4
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    UserId:
      title: UserId
      required:
      - value
      type: object
      properties:
        value:
          minLength: 1
          type: string
    UserId1:
      title: UserId1
      required:
      - fhir_comments
      - system
      - value
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    VaccinationProtocol:
      title: VaccinationProtocol
      required:
      - doseSequence
      - description
      - series
      - seriesDoses
      type: object
      properties:
        doseSequence:
          type: number
        description:
          minLength: 1
          type: string
        authority:
          $ref: '#/components/schemas/Authority'
        series:
          minLength: 1
          type: string
        seriesDoses:
          type: number
        targetDisease:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TargetDisease'
          description: ''
        doseStatus:
          $ref: '#/components/schemas/DoseStatus'
        doseStatusReason:
          $ref: '#/components/schemas/DoseStatusReason'
    VaccineCode:
      title: VaccineCode
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
        text:
          minLength: 1
          type: string
    VaccineCode1:
      title: VaccineCode1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Value:
      title: Value
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    ValueCodeableConcept:
      title: ValueCodeableConcept
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    ValueCodeableConcept3:
      title: ValueCodeableConcept3
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    ValueCoding:
      title: ValueCoding
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    ValueCoding1:
      title: ValueCoding1
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ValueQuantity:
      title: ValueQuantity
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ValueQuantity1:
      title: ValueQuantity1
      required:
      - fhir_comments
      - value
      - unit
      - system
      - code
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ValueReference:
      title: ValueReference
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    ValueReference1:
      title: ValueReference1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ValueSet2:
      title: ValueSet2
      required:
      - name
      - identifier
      type: object
      properties:
        name:
          minLength: 1
          type: string
        identifier:
          minLength: 1
          type: string
    ValueSetReference:
      title: ValueSetReference
      required:
      - extension
      - reference
      type: object
      properties:
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension4'
          description: ''
        reference:
          minLength: 1
          type: string
    Variation:
      title: Variation
      required:
      - start
      - end
      - observedAllele
      - referenceAllele
      type: object
      properties:
        start:
          type: number
        end:
          type: number
        observedAllele:
          minLength: 1
          type: string
        referenceAllele:
          minLength: 1
          type: string
    Version:
      title: Version
      required:
      - fhir_comments
      type: object
      properties:
        fhir_comments:
          type: array
          items:
            type: object
          description: ''
    WhenRange:
      title: WhenRange
      required:
      - high
      type: object
      properties:
        high:
          $ref: '#/components/schemas/High'
tags:
- name: Account
- name: ActivityDefinition
- name: AdverseEvent
- name: AllergyIntolerance
- name: Appointment
- name: AppointmentResponse
- name: AuditEvent
- name: Basic
- name: Binary
- name: BodySite
- name: Bundle
- name: CapabilityStatement
- name: CarePlan
- name: CareTeam
- name: ChargeItem
- name: Claim
- name: ClaimResponse
- name: ClinicalImpression
- name: CodeSystem
- name: Communication
- name: CommunicationRequest
- name: CompartmentDefinition
- name: Composition
- name: ConceptMap
- name: Condition
- name: Consent
- name: Contract
- name: Coverage
- name: DataElement
- name: DetectedIssue
- name: Device
- name: DeviceComponent
- name: DeviceMetric
- name: DeviceRequest
- name: DeviceUseStatement
- name: DiagnosticReport
- name: DocumentManifest
- name: DocumentReference
- name: DomainResource
- name: EligibilityRequest
- name: EligibilityResponse
- name: Encounter
- name: Endpoint
- name: EnrollmentRequest
- name: EnrollmentResponse
- name: EpisodeOfCare
- name: ExpansionProfile
- name: ExplanationOfBenefit
- name: FamilyMemberHistory
- name: Flag
- name: Goal
- name: GraphDefinition
- name: Group
- name: GuidanceResponse
- name: HealthcareService
- name: ImagingManifest
- name: ImagingStudy
- name: Immunization
- name: ImmunizationRecommendation
- name: ImplementationGuide
- name: Library
- name: Linkage
- name: List
- name: Location
- name: Measure
- name: MeasureReport
- name: Media
- name: Medication
- name: MedicationAdministration
- name: MedicationDispense
- name: MedicationRequest
- name: MedicationStatement
- name: MessageDefinition
- name: MessageHeader
- name: NamingSystem
- name: NutritionOrder
- name: Observation
- name: OperationDefinition
- name: OperationOutcome
- name: Organization
- name: Parameters
- name: Patient
- name: PaymentNotice
- name: PaymentReconciliation
- name: Person
- name: PlanDefinition
- name: Practitioner
- name: PractitionerRole
- name: Procedure
- name: ProcedureRequest
- name: ProcessRequest
- name: ProcessResponse
- name: Provenance
- name: Questionnaire
- name: QuestionnaireResponse
- name: ReferralRequest
- name: RelatedPerson
- name: RequestGroup
- name: ResearchStudy
- name: ResearchSubject
- name: Resource
- name: RiskAssessment
- name: Schedule
- name: SearchParameter
- name: Sequence
- name: ServiceDefinition
- name: Slot
- name: Specimen
- name: StructureDefinition
- name: StructureMap
- name: Subscription
- name: Substance
- name: SupplyDelivery
- name: SupplyRequest
- name: Task
- name: TestReport
- name: TestScript
- name: ValueSet
- name: VisionPrescription